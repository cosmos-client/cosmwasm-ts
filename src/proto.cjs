/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["@cosmos-client/cosmwasm"] || ($protobuf.roots["@cosmos-client/cosmwasm"] = {});
    
    $root.cosmwasm = (function() {
    
        /**
         * Namespace cosmwasm.
         * @exports cosmwasm
         * @namespace
         */
        var cosmwasm = {};
    
        cosmwasm.wasm = (function() {
    
            /**
             * Namespace wasm.
             * @memberof cosmwasm
             * @namespace
             */
            var wasm = {};
    
            wasm.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof cosmwasm.wasm
                 * @namespace
                 */
                var v1 = {};
    
                v1.Query = (function() {
    
                    /**
                     * Constructs a new Query service.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a Query
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function Query(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (Query.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Query;
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#contractInfo}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef ContractInfoCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryContractInfoResponse} [response] QueryContractInfoResponse
                     */
    
                    /**
                     * Calls ContractInfo.
                     * @function contractInfo
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoRequest} request QueryContractInfoRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.ContractInfoCallback} callback Node-style callback called with the error, if any, and QueryContractInfoResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.contractInfo = function contractInfo(request, callback) {
                        return this.rpcCall(contractInfo, $root.cosmwasm.wasm.v1.QueryContractInfoRequest, $root.cosmwasm.wasm.v1.QueryContractInfoResponse, request, callback);
                    }, "name", { value: "ContractInfo" });
    
                    /**
                     * Calls ContractInfo.
                     * @function contractInfo
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoRequest} request QueryContractInfoRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryContractInfoResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#contractHistory}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef ContractHistoryCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryContractHistoryResponse} [response] QueryContractHistoryResponse
                     */
    
                    /**
                     * Calls ContractHistory.
                     * @function contractHistory
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryRequest} request QueryContractHistoryRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.ContractHistoryCallback} callback Node-style callback called with the error, if any, and QueryContractHistoryResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.contractHistory = function contractHistory(request, callback) {
                        return this.rpcCall(contractHistory, $root.cosmwasm.wasm.v1.QueryContractHistoryRequest, $root.cosmwasm.wasm.v1.QueryContractHistoryResponse, request, callback);
                    }, "name", { value: "ContractHistory" });
    
                    /**
                     * Calls ContractHistory.
                     * @function contractHistory
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryRequest} request QueryContractHistoryRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryContractHistoryResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#contractsByCode}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef ContractsByCodeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryContractsByCodeResponse} [response] QueryContractsByCodeResponse
                     */
    
                    /**
                     * Calls ContractsByCode.
                     * @function contractsByCode
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeRequest} request QueryContractsByCodeRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.ContractsByCodeCallback} callback Node-style callback called with the error, if any, and QueryContractsByCodeResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.contractsByCode = function contractsByCode(request, callback) {
                        return this.rpcCall(contractsByCode, $root.cosmwasm.wasm.v1.QueryContractsByCodeRequest, $root.cosmwasm.wasm.v1.QueryContractsByCodeResponse, request, callback);
                    }, "name", { value: "ContractsByCode" });
    
                    /**
                     * Calls ContractsByCode.
                     * @function contractsByCode
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeRequest} request QueryContractsByCodeRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryContractsByCodeResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#allContractState}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef AllContractStateCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryAllContractStateResponse} [response] QueryAllContractStateResponse
                     */
    
                    /**
                     * Calls AllContractState.
                     * @function allContractState
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateRequest} request QueryAllContractStateRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.AllContractStateCallback} callback Node-style callback called with the error, if any, and QueryAllContractStateResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.allContractState = function allContractState(request, callback) {
                        return this.rpcCall(allContractState, $root.cosmwasm.wasm.v1.QueryAllContractStateRequest, $root.cosmwasm.wasm.v1.QueryAllContractStateResponse, request, callback);
                    }, "name", { value: "AllContractState" });
    
                    /**
                     * Calls AllContractState.
                     * @function allContractState
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateRequest} request QueryAllContractStateRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryAllContractStateResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#rawContractState}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef RawContractStateCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryRawContractStateResponse} [response] QueryRawContractStateResponse
                     */
    
                    /**
                     * Calls RawContractState.
                     * @function rawContractState
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateRequest} request QueryRawContractStateRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.RawContractStateCallback} callback Node-style callback called with the error, if any, and QueryRawContractStateResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.rawContractState = function rawContractState(request, callback) {
                        return this.rpcCall(rawContractState, $root.cosmwasm.wasm.v1.QueryRawContractStateRequest, $root.cosmwasm.wasm.v1.QueryRawContractStateResponse, request, callback);
                    }, "name", { value: "RawContractState" });
    
                    /**
                     * Calls RawContractState.
                     * @function rawContractState
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateRequest} request QueryRawContractStateRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryRawContractStateResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#smartContractState}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef SmartContractStateCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QuerySmartContractStateResponse} [response] QuerySmartContractStateResponse
                     */
    
                    /**
                     * Calls SmartContractState.
                     * @function smartContractState
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateRequest} request QuerySmartContractStateRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.SmartContractStateCallback} callback Node-style callback called with the error, if any, and QuerySmartContractStateResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.smartContractState = function smartContractState(request, callback) {
                        return this.rpcCall(smartContractState, $root.cosmwasm.wasm.v1.QuerySmartContractStateRequest, $root.cosmwasm.wasm.v1.QuerySmartContractStateResponse, request, callback);
                    }, "name", { value: "SmartContractState" });
    
                    /**
                     * Calls SmartContractState.
                     * @function smartContractState
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateRequest} request QuerySmartContractStateRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QuerySmartContractStateResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#code}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef CodeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryCodeResponse} [response] QueryCodeResponse
                     */
    
                    /**
                     * Calls Code.
                     * @function code
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryCodeRequest} request QueryCodeRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.CodeCallback} callback Node-style callback called with the error, if any, and QueryCodeResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.code = function code(request, callback) {
                        return this.rpcCall(code, $root.cosmwasm.wasm.v1.QueryCodeRequest, $root.cosmwasm.wasm.v1.QueryCodeResponse, request, callback);
                    }, "name", { value: "Code" });
    
                    /**
                     * Calls Code.
                     * @function code
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryCodeRequest} request QueryCodeRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryCodeResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#codes}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef CodesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryCodesResponse} [response] QueryCodesResponse
                     */
    
                    /**
                     * Calls Codes.
                     * @function codes
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryCodesRequest} request QueryCodesRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.CodesCallback} callback Node-style callback called with the error, if any, and QueryCodesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.codes = function codes(request, callback) {
                        return this.rpcCall(codes, $root.cosmwasm.wasm.v1.QueryCodesRequest, $root.cosmwasm.wasm.v1.QueryCodesResponse, request, callback);
                    }, "name", { value: "Codes" });
    
                    /**
                     * Calls Codes.
                     * @function codes
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryCodesRequest} request QueryCodesRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryCodesResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Query#pinnedCodes}.
                     * @memberof cosmwasm.wasm.v1.Query
                     * @typedef PinnedCodesCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.QueryPinnedCodesResponse} [response] QueryPinnedCodesResponse
                     */
    
                    /**
                     * Calls PinnedCodes.
                     * @function pinnedCodes
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesRequest} request QueryPinnedCodesRequest message or plain object
                     * @param {cosmwasm.wasm.v1.Query.PinnedCodesCallback} callback Node-style callback called with the error, if any, and QueryPinnedCodesResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Query.prototype.pinnedCodes = function pinnedCodes(request, callback) {
                        return this.rpcCall(pinnedCodes, $root.cosmwasm.wasm.v1.QueryPinnedCodesRequest, $root.cosmwasm.wasm.v1.QueryPinnedCodesResponse, request, callback);
                    }, "name", { value: "PinnedCodes" });
    
                    /**
                     * Calls PinnedCodes.
                     * @function pinnedCodes
                     * @memberof cosmwasm.wasm.v1.Query
                     * @instance
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesRequest} request QueryPinnedCodesRequest message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.QueryPinnedCodesResponse>} Promise
                     * @variation 2
                     */
    
                    return Query;
                })();
    
                v1.QueryContractInfoRequest = (function() {
    
                    /**
                     * Properties of a QueryContractInfoRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryContractInfoRequest
                     * @property {string|null} [address] QueryContractInfoRequest address
                     */
    
                    /**
                     * Constructs a new QueryContractInfoRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryContractInfoRequest.
                     * @implements IQueryContractInfoRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoRequest=} [properties] Properties to set
                     */
                    function QueryContractInfoRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryContractInfoRequest address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @instance
                     */
                    QueryContractInfoRequest.prototype.address = "";
    
                    /**
                     * Encodes the specified QueryContractInfoRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractInfoRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoRequest} message QueryContractInfoRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractInfoRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryContractInfoRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractInfoRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoRequest} message QueryContractInfoRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryContractInfoRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryContractInfoRequest} QueryContractInfoRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractInfoRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryContractInfoRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.address = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryContractInfoRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryContractInfoRequest} QueryContractInfoRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryContractInfoRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryContractInfoRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryContractInfoRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryContractInfoRequest} QueryContractInfoRequest
                     */
                    QueryContractInfoRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryContractInfoRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryContractInfoRequest();
                        if (object.address != null)
                            message.address = String(object.address);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryContractInfoRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryContractInfoRequest} message QueryContractInfoRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryContractInfoRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.address = "";
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        return object;
                    };
    
                    /**
                     * Converts this QueryContractInfoRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryContractInfoRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryContractInfoRequest;
                })();
    
                v1.QueryContractInfoResponse = (function() {
    
                    /**
                     * Properties of a QueryContractInfoResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryContractInfoResponse
                     * @property {string|null} [address] QueryContractInfoResponse address
                     * @property {cosmwasm.wasm.v1.IContractInfo|null} [contract_info] QueryContractInfoResponse contract_info
                     */
    
                    /**
                     * Constructs a new QueryContractInfoResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryContractInfoResponse.
                     * @implements IQueryContractInfoResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoResponse=} [properties] Properties to set
                     */
                    function QueryContractInfoResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryContractInfoResponse address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @instance
                     */
                    QueryContractInfoResponse.prototype.address = "";
    
                    /**
                     * QueryContractInfoResponse contract_info.
                     * @member {cosmwasm.wasm.v1.IContractInfo|null|undefined} contract_info
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @instance
                     */
                    QueryContractInfoResponse.prototype.contract_info = null;
    
                    /**
                     * Encodes the specified QueryContractInfoResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractInfoResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoResponse} message QueryContractInfoResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractInfoResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                        if (message.contract_info != null && Object.hasOwnProperty.call(message, "contract_info"))
                            $root.cosmwasm.wasm.v1.ContractInfo.encode(message.contract_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryContractInfoResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractInfoResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractInfoResponse} message QueryContractInfoResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryContractInfoResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryContractInfoResponse} QueryContractInfoResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractInfoResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryContractInfoResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.address = reader.string();
                                break;
                            case 2:
                                message.contract_info = $root.cosmwasm.wasm.v1.ContractInfo.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryContractInfoResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryContractInfoResponse} QueryContractInfoResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryContractInfoResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryContractInfoResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        if (message.contract_info != null && message.hasOwnProperty("contract_info")) {
                            var error = $root.cosmwasm.wasm.v1.ContractInfo.verify(message.contract_info);
                            if (error)
                                return "contract_info." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryContractInfoResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryContractInfoResponse} QueryContractInfoResponse
                     */
                    QueryContractInfoResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryContractInfoResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryContractInfoResponse();
                        if (object.address != null)
                            message.address = String(object.address);
                        if (object.contract_info != null) {
                            if (typeof object.contract_info !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryContractInfoResponse.contract_info: object expected");
                            message.contract_info = $root.cosmwasm.wasm.v1.ContractInfo.fromObject(object.contract_info);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryContractInfoResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryContractInfoResponse} message QueryContractInfoResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryContractInfoResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.address = "";
                            object.contract_info = null;
                        }
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        if (message.contract_info != null && message.hasOwnProperty("contract_info"))
                            object.contract_info = $root.cosmwasm.wasm.v1.ContractInfo.toObject(message.contract_info, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryContractInfoResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryContractInfoResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryContractInfoResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryContractInfoResponse;
                })();
    
                v1.QueryContractHistoryRequest = (function() {
    
                    /**
                     * Properties of a QueryContractHistoryRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryContractHistoryRequest
                     * @property {string|null} [address] QueryContractHistoryRequest address
                     * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryContractHistoryRequest pagination
                     */
    
                    /**
                     * Constructs a new QueryContractHistoryRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryContractHistoryRequest.
                     * @implements IQueryContractHistoryRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryRequest=} [properties] Properties to set
                     */
                    function QueryContractHistoryRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryContractHistoryRequest address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @instance
                     */
                    QueryContractHistoryRequest.prototype.address = "";
    
                    /**
                     * QueryContractHistoryRequest pagination.
                     * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @instance
                     */
                    QueryContractHistoryRequest.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryContractHistoryRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractHistoryRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryRequest} message QueryContractHistoryRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractHistoryRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryContractHistoryRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractHistoryRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryRequest} message QueryContractHistoryRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractHistoryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryContractHistoryRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryContractHistoryRequest} QueryContractHistoryRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractHistoryRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryContractHistoryRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.address = reader.string();
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryContractHistoryRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryContractHistoryRequest} QueryContractHistoryRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractHistoryRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryContractHistoryRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryContractHistoryRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryContractHistoryRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryContractHistoryRequest} QueryContractHistoryRequest
                     */
                    QueryContractHistoryRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryContractHistoryRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryContractHistoryRequest();
                        if (object.address != null)
                            message.address = String(object.address);
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryContractHistoryRequest.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryContractHistoryRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryContractHistoryRequest} message QueryContractHistoryRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryContractHistoryRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.address = "";
                            object.pagination = null;
                        }
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryContractHistoryRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryContractHistoryRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryContractHistoryRequest;
                })();
    
                v1.QueryContractHistoryResponse = (function() {
    
                    /**
                     * Properties of a QueryContractHistoryResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryContractHistoryResponse
                     * @property {Array.<cosmwasm.wasm.v1.IContractCodeHistoryEntry>|null} [entries] QueryContractHistoryResponse entries
                     * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryContractHistoryResponse pagination
                     */
    
                    /**
                     * Constructs a new QueryContractHistoryResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryContractHistoryResponse.
                     * @implements IQueryContractHistoryResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryResponse=} [properties] Properties to set
                     */
                    function QueryContractHistoryResponse(properties) {
                        this.entries = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryContractHistoryResponse entries.
                     * @member {Array.<cosmwasm.wasm.v1.IContractCodeHistoryEntry>} entries
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @instance
                     */
                    QueryContractHistoryResponse.prototype.entries = $util.emptyArray;
    
                    /**
                     * QueryContractHistoryResponse pagination.
                     * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @instance
                     */
                    QueryContractHistoryResponse.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryContractHistoryResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractHistoryResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryResponse} message QueryContractHistoryResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractHistoryResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.entries != null && message.entries.length)
                            for (var i = 0; i < message.entries.length; ++i)
                                $root.cosmwasm.wasm.v1.ContractCodeHistoryEntry.encode(message.entries[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryContractHistoryResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractHistoryResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractHistoryResponse} message QueryContractHistoryResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractHistoryResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryContractHistoryResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryContractHistoryResponse} QueryContractHistoryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractHistoryResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryContractHistoryResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.entries && message.entries.length))
                                    message.entries = [];
                                message.entries.push($root.cosmwasm.wasm.v1.ContractCodeHistoryEntry.decode(reader, reader.uint32()));
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryContractHistoryResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryContractHistoryResponse} QueryContractHistoryResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractHistoryResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryContractHistoryResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryContractHistoryResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.entries != null && message.hasOwnProperty("entries")) {
                            if (!Array.isArray(message.entries))
                                return "entries: array expected";
                            for (var i = 0; i < message.entries.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.ContractCodeHistoryEntry.verify(message.entries[i]);
                                if (error)
                                    return "entries." + error;
                            }
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryContractHistoryResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryContractHistoryResponse} QueryContractHistoryResponse
                     */
                    QueryContractHistoryResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryContractHistoryResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryContractHistoryResponse();
                        if (object.entries) {
                            if (!Array.isArray(object.entries))
                                throw TypeError(".cosmwasm.wasm.v1.QueryContractHistoryResponse.entries: array expected");
                            message.entries = [];
                            for (var i = 0; i < object.entries.length; ++i) {
                                if (typeof object.entries[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.QueryContractHistoryResponse.entries: object expected");
                                message.entries[i] = $root.cosmwasm.wasm.v1.ContractCodeHistoryEntry.fromObject(object.entries[i]);
                            }
                        }
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryContractHistoryResponse.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryContractHistoryResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryContractHistoryResponse} message QueryContractHistoryResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryContractHistoryResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.entries = [];
                        if (options.defaults)
                            object.pagination = null;
                        if (message.entries && message.entries.length) {
                            object.entries = [];
                            for (var j = 0; j < message.entries.length; ++j)
                                object.entries[j] = $root.cosmwasm.wasm.v1.ContractCodeHistoryEntry.toObject(message.entries[j], options);
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryContractHistoryResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryContractHistoryResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryContractHistoryResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryContractHistoryResponse;
                })();
    
                v1.QueryContractsByCodeRequest = (function() {
    
                    /**
                     * Properties of a QueryContractsByCodeRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryContractsByCodeRequest
                     * @property {Long|null} [code_id] QueryContractsByCodeRequest code_id
                     * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryContractsByCodeRequest pagination
                     */
    
                    /**
                     * Constructs a new QueryContractsByCodeRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryContractsByCodeRequest.
                     * @implements IQueryContractsByCodeRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeRequest=} [properties] Properties to set
                     */
                    function QueryContractsByCodeRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryContractsByCodeRequest code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @instance
                     */
                    QueryContractsByCodeRequest.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * QueryContractsByCodeRequest pagination.
                     * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @instance
                     */
                    QueryContractsByCodeRequest.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryContractsByCodeRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractsByCodeRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeRequest} message QueryContractsByCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractsByCodeRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.code_id);
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryContractsByCodeRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractsByCodeRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeRequest} message QueryContractsByCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractsByCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryContractsByCodeRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryContractsByCodeRequest} QueryContractsByCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractsByCodeRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryContractsByCodeRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_id = reader.uint64();
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryContractsByCodeRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryContractsByCodeRequest} QueryContractsByCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractsByCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryContractsByCodeRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryContractsByCodeRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryContractsByCodeRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryContractsByCodeRequest} QueryContractsByCodeRequest
                     */
                    QueryContractsByCodeRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryContractsByCodeRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryContractsByCodeRequest();
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryContractsByCodeRequest.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryContractsByCodeRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryContractsByCodeRequest} message QueryContractsByCodeRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryContractsByCodeRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.pagination = null;
                        }
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryContractsByCodeRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryContractsByCodeRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryContractsByCodeRequest;
                })();
    
                v1.QueryContractsByCodeResponse = (function() {
    
                    /**
                     * Properties of a QueryContractsByCodeResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryContractsByCodeResponse
                     * @property {Array.<string>|null} [contracts] QueryContractsByCodeResponse contracts
                     * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryContractsByCodeResponse pagination
                     */
    
                    /**
                     * Constructs a new QueryContractsByCodeResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryContractsByCodeResponse.
                     * @implements IQueryContractsByCodeResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeResponse=} [properties] Properties to set
                     */
                    function QueryContractsByCodeResponse(properties) {
                        this.contracts = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryContractsByCodeResponse contracts.
                     * @member {Array.<string>} contracts
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @instance
                     */
                    QueryContractsByCodeResponse.prototype.contracts = $util.emptyArray;
    
                    /**
                     * QueryContractsByCodeResponse pagination.
                     * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @instance
                     */
                    QueryContractsByCodeResponse.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryContractsByCodeResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractsByCodeResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeResponse} message QueryContractsByCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractsByCodeResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.contracts != null && message.contracts.length)
                            for (var i = 0; i < message.contracts.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.contracts[i]);
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryContractsByCodeResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryContractsByCodeResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryContractsByCodeResponse} message QueryContractsByCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryContractsByCodeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryContractsByCodeResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryContractsByCodeResponse} QueryContractsByCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractsByCodeResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryContractsByCodeResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.contracts && message.contracts.length))
                                    message.contracts = [];
                                message.contracts.push(reader.string());
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryContractsByCodeResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryContractsByCodeResponse} QueryContractsByCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryContractsByCodeResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryContractsByCodeResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryContractsByCodeResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.contracts != null && message.hasOwnProperty("contracts")) {
                            if (!Array.isArray(message.contracts))
                                return "contracts: array expected";
                            for (var i = 0; i < message.contracts.length; ++i)
                                if (!$util.isString(message.contracts[i]))
                                    return "contracts: string[] expected";
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryContractsByCodeResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryContractsByCodeResponse} QueryContractsByCodeResponse
                     */
                    QueryContractsByCodeResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryContractsByCodeResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryContractsByCodeResponse();
                        if (object.contracts) {
                            if (!Array.isArray(object.contracts))
                                throw TypeError(".cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts: array expected");
                            message.contracts = [];
                            for (var i = 0; i < object.contracts.length; ++i)
                                message.contracts[i] = String(object.contracts[i]);
                        }
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryContractsByCodeResponse.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryContractsByCodeResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryContractsByCodeResponse} message QueryContractsByCodeResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryContractsByCodeResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.contracts = [];
                        if (options.defaults)
                            object.pagination = null;
                        if (message.contracts && message.contracts.length) {
                            object.contracts = [];
                            for (var j = 0; j < message.contracts.length; ++j)
                                object.contracts[j] = message.contracts[j];
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryContractsByCodeResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryContractsByCodeResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryContractsByCodeResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryContractsByCodeResponse;
                })();
    
                v1.QueryAllContractStateRequest = (function() {
    
                    /**
                     * Properties of a QueryAllContractStateRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryAllContractStateRequest
                     * @property {string|null} [address] QueryAllContractStateRequest address
                     * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryAllContractStateRequest pagination
                     */
    
                    /**
                     * Constructs a new QueryAllContractStateRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryAllContractStateRequest.
                     * @implements IQueryAllContractStateRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateRequest=} [properties] Properties to set
                     */
                    function QueryAllContractStateRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryAllContractStateRequest address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @instance
                     */
                    QueryAllContractStateRequest.prototype.address = "";
    
                    /**
                     * QueryAllContractStateRequest pagination.
                     * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @instance
                     */
                    QueryAllContractStateRequest.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryAllContractStateRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryAllContractStateRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateRequest} message QueryAllContractStateRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryAllContractStateRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryAllContractStateRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryAllContractStateRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateRequest} message QueryAllContractStateRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryAllContractStateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryAllContractStateRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryAllContractStateRequest} QueryAllContractStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryAllContractStateRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryAllContractStateRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.address = reader.string();
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryAllContractStateRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryAllContractStateRequest} QueryAllContractStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryAllContractStateRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryAllContractStateRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryAllContractStateRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryAllContractStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryAllContractStateRequest} QueryAllContractStateRequest
                     */
                    QueryAllContractStateRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryAllContractStateRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryAllContractStateRequest();
                        if (object.address != null)
                            message.address = String(object.address);
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryAllContractStateRequest.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryAllContractStateRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryAllContractStateRequest} message QueryAllContractStateRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryAllContractStateRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.address = "";
                            object.pagination = null;
                        }
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryAllContractStateRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryAllContractStateRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryAllContractStateRequest;
                })();
    
                v1.QueryAllContractStateResponse = (function() {
    
                    /**
                     * Properties of a QueryAllContractStateResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryAllContractStateResponse
                     * @property {Array.<cosmwasm.wasm.v1.IModel>|null} [models] QueryAllContractStateResponse models
                     * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryAllContractStateResponse pagination
                     */
    
                    /**
                     * Constructs a new QueryAllContractStateResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryAllContractStateResponse.
                     * @implements IQueryAllContractStateResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateResponse=} [properties] Properties to set
                     */
                    function QueryAllContractStateResponse(properties) {
                        this.models = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryAllContractStateResponse models.
                     * @member {Array.<cosmwasm.wasm.v1.IModel>} models
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @instance
                     */
                    QueryAllContractStateResponse.prototype.models = $util.emptyArray;
    
                    /**
                     * QueryAllContractStateResponse pagination.
                     * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @instance
                     */
                    QueryAllContractStateResponse.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryAllContractStateResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryAllContractStateResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateResponse} message QueryAllContractStateResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryAllContractStateResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.models != null && message.models.length)
                            for (var i = 0; i < message.models.length; ++i)
                                $root.cosmwasm.wasm.v1.Model.encode(message.models[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryAllContractStateResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryAllContractStateResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryAllContractStateResponse} message QueryAllContractStateResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryAllContractStateResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryAllContractStateResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryAllContractStateResponse} QueryAllContractStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryAllContractStateResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryAllContractStateResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.models && message.models.length))
                                    message.models = [];
                                message.models.push($root.cosmwasm.wasm.v1.Model.decode(reader, reader.uint32()));
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryAllContractStateResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryAllContractStateResponse} QueryAllContractStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryAllContractStateResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryAllContractStateResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryAllContractStateResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.models != null && message.hasOwnProperty("models")) {
                            if (!Array.isArray(message.models))
                                return "models: array expected";
                            for (var i = 0; i < message.models.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.Model.verify(message.models[i]);
                                if (error)
                                    return "models." + error;
                            }
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryAllContractStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryAllContractStateResponse} QueryAllContractStateResponse
                     */
                    QueryAllContractStateResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryAllContractStateResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryAllContractStateResponse();
                        if (object.models) {
                            if (!Array.isArray(object.models))
                                throw TypeError(".cosmwasm.wasm.v1.QueryAllContractStateResponse.models: array expected");
                            message.models = [];
                            for (var i = 0; i < object.models.length; ++i) {
                                if (typeof object.models[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.QueryAllContractStateResponse.models: object expected");
                                message.models[i] = $root.cosmwasm.wasm.v1.Model.fromObject(object.models[i]);
                            }
                        }
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryAllContractStateResponse.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryAllContractStateResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryAllContractStateResponse} message QueryAllContractStateResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryAllContractStateResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.models = [];
                        if (options.defaults)
                            object.pagination = null;
                        if (message.models && message.models.length) {
                            object.models = [];
                            for (var j = 0; j < message.models.length; ++j)
                                object.models[j] = $root.cosmwasm.wasm.v1.Model.toObject(message.models[j], options);
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryAllContractStateResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryAllContractStateResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryAllContractStateResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryAllContractStateResponse;
                })();
    
                v1.QueryRawContractStateRequest = (function() {
    
                    /**
                     * Properties of a QueryRawContractStateRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryRawContractStateRequest
                     * @property {string|null} [address] QueryRawContractStateRequest address
                     * @property {Uint8Array|null} [query_data] QueryRawContractStateRequest query_data
                     */
    
                    /**
                     * Constructs a new QueryRawContractStateRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryRawContractStateRequest.
                     * @implements IQueryRawContractStateRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateRequest=} [properties] Properties to set
                     */
                    function QueryRawContractStateRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryRawContractStateRequest address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @instance
                     */
                    QueryRawContractStateRequest.prototype.address = "";
    
                    /**
                     * QueryRawContractStateRequest query_data.
                     * @member {Uint8Array} query_data
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @instance
                     */
                    QueryRawContractStateRequest.prototype.query_data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified QueryRawContractStateRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryRawContractStateRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateRequest} message QueryRawContractStateRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryRawContractStateRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                        if (message.query_data != null && Object.hasOwnProperty.call(message, "query_data"))
                            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.query_data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryRawContractStateRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryRawContractStateRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateRequest} message QueryRawContractStateRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryRawContractStateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryRawContractStateRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryRawContractStateRequest} QueryRawContractStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryRawContractStateRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryRawContractStateRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.address = reader.string();
                                break;
                            case 2:
                                message.query_data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryRawContractStateRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryRawContractStateRequest} QueryRawContractStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryRawContractStateRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryRawContractStateRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryRawContractStateRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        if (message.query_data != null && message.hasOwnProperty("query_data"))
                            if (!(message.query_data && typeof message.query_data.length === "number" || $util.isString(message.query_data)))
                                return "query_data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryRawContractStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryRawContractStateRequest} QueryRawContractStateRequest
                     */
                    QueryRawContractStateRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryRawContractStateRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryRawContractStateRequest();
                        if (object.address != null)
                            message.address = String(object.address);
                        if (object.query_data != null)
                            if (typeof object.query_data === "string")
                                $util.base64.decode(object.query_data, message.query_data = $util.newBuffer($util.base64.length(object.query_data)), 0);
                            else if (object.query_data.length)
                                message.query_data = object.query_data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryRawContractStateRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryRawContractStateRequest} message QueryRawContractStateRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryRawContractStateRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.address = "";
                            if (options.bytes === String)
                                object.query_data = "";
                            else {
                                object.query_data = [];
                                if (options.bytes !== Array)
                                    object.query_data = $util.newBuffer(object.query_data);
                            }
                        }
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        if (message.query_data != null && message.hasOwnProperty("query_data"))
                            object.query_data = options.bytes === String ? $util.base64.encode(message.query_data, 0, message.query_data.length) : options.bytes === Array ? Array.prototype.slice.call(message.query_data) : message.query_data;
                        return object;
                    };
    
                    /**
                     * Converts this QueryRawContractStateRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryRawContractStateRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryRawContractStateRequest;
                })();
    
                v1.QueryRawContractStateResponse = (function() {
    
                    /**
                     * Properties of a QueryRawContractStateResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryRawContractStateResponse
                     * @property {Uint8Array|null} [data] QueryRawContractStateResponse data
                     */
    
                    /**
                     * Constructs a new QueryRawContractStateResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryRawContractStateResponse.
                     * @implements IQueryRawContractStateResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateResponse=} [properties] Properties to set
                     */
                    function QueryRawContractStateResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryRawContractStateResponse data.
                     * @member {Uint8Array} data
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @instance
                     */
                    QueryRawContractStateResponse.prototype.data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified QueryRawContractStateResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryRawContractStateResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateResponse} message QueryRawContractStateResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryRawContractStateResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryRawContractStateResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryRawContractStateResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryRawContractStateResponse} message QueryRawContractStateResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryRawContractStateResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryRawContractStateResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryRawContractStateResponse} QueryRawContractStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryRawContractStateResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryRawContractStateResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryRawContractStateResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryRawContractStateResponse} QueryRawContractStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryRawContractStateResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryRawContractStateResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryRawContractStateResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryRawContractStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryRawContractStateResponse} QueryRawContractStateResponse
                     */
                    QueryRawContractStateResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryRawContractStateResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryRawContractStateResponse();
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length)
                                message.data = object.data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryRawContractStateResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryRawContractStateResponse} message QueryRawContractStateResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryRawContractStateResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        return object;
                    };
    
                    /**
                     * Converts this QueryRawContractStateResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryRawContractStateResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryRawContractStateResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryRawContractStateResponse;
                })();
    
                v1.QuerySmartContractStateRequest = (function() {
    
                    /**
                     * Properties of a QuerySmartContractStateRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQuerySmartContractStateRequest
                     * @property {string|null} [address] QuerySmartContractStateRequest address
                     * @property {Uint8Array|null} [query_data] QuerySmartContractStateRequest query_data
                     */
    
                    /**
                     * Constructs a new QuerySmartContractStateRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QuerySmartContractStateRequest.
                     * @implements IQuerySmartContractStateRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateRequest=} [properties] Properties to set
                     */
                    function QuerySmartContractStateRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QuerySmartContractStateRequest address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @instance
                     */
                    QuerySmartContractStateRequest.prototype.address = "";
    
                    /**
                     * QuerySmartContractStateRequest query_data.
                     * @member {Uint8Array} query_data
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @instance
                     */
                    QuerySmartContractStateRequest.prototype.query_data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified QuerySmartContractStateRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QuerySmartContractStateRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateRequest} message QuerySmartContractStateRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QuerySmartContractStateRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                        if (message.query_data != null && Object.hasOwnProperty.call(message, "query_data"))
                            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.query_data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QuerySmartContractStateRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QuerySmartContractStateRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateRequest} message QuerySmartContractStateRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QuerySmartContractStateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QuerySmartContractStateRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QuerySmartContractStateRequest} QuerySmartContractStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QuerySmartContractStateRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QuerySmartContractStateRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.address = reader.string();
                                break;
                            case 2:
                                message.query_data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QuerySmartContractStateRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QuerySmartContractStateRequest} QuerySmartContractStateRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QuerySmartContractStateRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QuerySmartContractStateRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QuerySmartContractStateRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        if (message.query_data != null && message.hasOwnProperty("query_data"))
                            if (!(message.query_data && typeof message.query_data.length === "number" || $util.isString(message.query_data)))
                                return "query_data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a QuerySmartContractStateRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QuerySmartContractStateRequest} QuerySmartContractStateRequest
                     */
                    QuerySmartContractStateRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QuerySmartContractStateRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QuerySmartContractStateRequest();
                        if (object.address != null)
                            message.address = String(object.address);
                        if (object.query_data != null)
                            if (typeof object.query_data === "string")
                                $util.base64.decode(object.query_data, message.query_data = $util.newBuffer($util.base64.length(object.query_data)), 0);
                            else if (object.query_data.length)
                                message.query_data = object.query_data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QuerySmartContractStateRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QuerySmartContractStateRequest} message QuerySmartContractStateRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QuerySmartContractStateRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.address = "";
                            if (options.bytes === String)
                                object.query_data = "";
                            else {
                                object.query_data = [];
                                if (options.bytes !== Array)
                                    object.query_data = $util.newBuffer(object.query_data);
                            }
                        }
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        if (message.query_data != null && message.hasOwnProperty("query_data"))
                            object.query_data = options.bytes === String ? $util.base64.encode(message.query_data, 0, message.query_data.length) : options.bytes === Array ? Array.prototype.slice.call(message.query_data) : message.query_data;
                        return object;
                    };
    
                    /**
                     * Converts this QuerySmartContractStateRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QuerySmartContractStateRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QuerySmartContractStateRequest;
                })();
    
                v1.QuerySmartContractStateResponse = (function() {
    
                    /**
                     * Properties of a QuerySmartContractStateResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQuerySmartContractStateResponse
                     * @property {Uint8Array|null} [data] QuerySmartContractStateResponse data
                     */
    
                    /**
                     * Constructs a new QuerySmartContractStateResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QuerySmartContractStateResponse.
                     * @implements IQuerySmartContractStateResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateResponse=} [properties] Properties to set
                     */
                    function QuerySmartContractStateResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QuerySmartContractStateResponse data.
                     * @member {Uint8Array} data
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @instance
                     */
                    QuerySmartContractStateResponse.prototype.data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified QuerySmartContractStateResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QuerySmartContractStateResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateResponse} message QuerySmartContractStateResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QuerySmartContractStateResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QuerySmartContractStateResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QuerySmartContractStateResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQuerySmartContractStateResponse} message QuerySmartContractStateResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QuerySmartContractStateResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QuerySmartContractStateResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QuerySmartContractStateResponse} QuerySmartContractStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QuerySmartContractStateResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QuerySmartContractStateResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QuerySmartContractStateResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QuerySmartContractStateResponse} QuerySmartContractStateResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QuerySmartContractStateResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QuerySmartContractStateResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QuerySmartContractStateResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a QuerySmartContractStateResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QuerySmartContractStateResponse} QuerySmartContractStateResponse
                     */
                    QuerySmartContractStateResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QuerySmartContractStateResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QuerySmartContractStateResponse();
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length)
                                message.data = object.data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QuerySmartContractStateResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QuerySmartContractStateResponse} message QuerySmartContractStateResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QuerySmartContractStateResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        return object;
                    };
    
                    /**
                     * Converts this QuerySmartContractStateResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QuerySmartContractStateResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QuerySmartContractStateResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QuerySmartContractStateResponse;
                })();
    
                v1.QueryCodeRequest = (function() {
    
                    /**
                     * Properties of a QueryCodeRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryCodeRequest
                     * @property {Long|null} [code_id] QueryCodeRequest code_id
                     */
    
                    /**
                     * Constructs a new QueryCodeRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryCodeRequest.
                     * @implements IQueryCodeRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryCodeRequest=} [properties] Properties to set
                     */
                    function QueryCodeRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryCodeRequest code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @instance
                     */
                    QueryCodeRequest.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * Encodes the specified QueryCodeRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodeRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodeRequest} message QueryCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodeRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.code_id);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryCodeRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodeRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodeRequest} message QueryCodeRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryCodeRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryCodeRequest} QueryCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodeRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryCodeRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_id = reader.uint64();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryCodeRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryCodeRequest} QueryCodeRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryCodeRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryCodeRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryCodeRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryCodeRequest} QueryCodeRequest
                     */
                    QueryCodeRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryCodeRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryCodeRequest();
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryCodeRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryCodeRequest} message QueryCodeRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryCodeRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        return object;
                    };
    
                    /**
                     * Converts this QueryCodeRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryCodeRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryCodeRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryCodeRequest;
                })();
    
                v1.CodeInfoResponse = (function() {
    
                    /**
                     * Properties of a CodeInfoResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface ICodeInfoResponse
                     * @property {Long|null} [code_id] CodeInfoResponse code_id
                     * @property {string|null} [creator] CodeInfoResponse creator
                     * @property {Uint8Array|null} [data_hash] CodeInfoResponse data_hash
                     * @property {cosmwasm.wasm.v1.IAccessConfig|null} [instantiate_permission] CodeInfoResponse instantiate_permission
                     */
    
                    /**
                     * Constructs a new CodeInfoResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a CodeInfoResponse.
                     * @implements ICodeInfoResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.ICodeInfoResponse=} [properties] Properties to set
                     */
                    function CodeInfoResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CodeInfoResponse code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @instance
                     */
                    CodeInfoResponse.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * CodeInfoResponse creator.
                     * @member {string} creator
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @instance
                     */
                    CodeInfoResponse.prototype.creator = "";
    
                    /**
                     * CodeInfoResponse data_hash.
                     * @member {Uint8Array} data_hash
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @instance
                     */
                    CodeInfoResponse.prototype.data_hash = $util.newBuffer([]);
    
                    /**
                     * CodeInfoResponse instantiate_permission.
                     * @member {cosmwasm.wasm.v1.IAccessConfig|null|undefined} instantiate_permission
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @instance
                     */
                    CodeInfoResponse.prototype.instantiate_permission = null;
    
                    /**
                     * Encodes the specified CodeInfoResponse message. Does not implicitly {@link cosmwasm.wasm.v1.CodeInfoResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.ICodeInfoResponse} message CodeInfoResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CodeInfoResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.code_id);
                        if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.creator);
                        if (message.data_hash != null && Object.hasOwnProperty.call(message, "data_hash"))
                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.data_hash);
                        if (message.instantiate_permission != null && Object.hasOwnProperty.call(message, "instantiate_permission"))
                            $root.cosmwasm.wasm.v1.AccessConfig.encode(message.instantiate_permission, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CodeInfoResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.CodeInfoResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.ICodeInfoResponse} message CodeInfoResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CodeInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CodeInfoResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.CodeInfoResponse} CodeInfoResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CodeInfoResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.CodeInfoResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_id = reader.uint64();
                                break;
                            case 2:
                                message.creator = reader.string();
                                break;
                            case 3:
                                message.data_hash = reader.bytes();
                                break;
                            case 6:
                                message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CodeInfoResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.CodeInfoResponse} CodeInfoResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CodeInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CodeInfoResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CodeInfoResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.creator != null && message.hasOwnProperty("creator"))
                            if (!$util.isString(message.creator))
                                return "creator: string expected";
                        if (message.data_hash != null && message.hasOwnProperty("data_hash"))
                            if (!(message.data_hash && typeof message.data_hash.length === "number" || $util.isString(message.data_hash)))
                                return "data_hash: buffer expected";
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission")) {
                            var error = $root.cosmwasm.wasm.v1.AccessConfig.verify(message.instantiate_permission);
                            if (error)
                                return "instantiate_permission." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CodeInfoResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.CodeInfoResponse} CodeInfoResponse
                     */
                    CodeInfoResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.CodeInfoResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.CodeInfoResponse();
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.creator != null)
                            message.creator = String(object.creator);
                        if (object.data_hash != null)
                            if (typeof object.data_hash === "string")
                                $util.base64.decode(object.data_hash, message.data_hash = $util.newBuffer($util.base64.length(object.data_hash)), 0);
                            else if (object.data_hash.length)
                                message.data_hash = object.data_hash;
                        if (object.instantiate_permission != null) {
                            if (typeof object.instantiate_permission !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.CodeInfoResponse.instantiate_permission: object expected");
                            message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.fromObject(object.instantiate_permission);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CodeInfoResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.CodeInfoResponse} message CodeInfoResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CodeInfoResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.creator = "";
                            if (options.bytes === String)
                                object.data_hash = "";
                            else {
                                object.data_hash = [];
                                if (options.bytes !== Array)
                                    object.data_hash = $util.newBuffer(object.data_hash);
                            }
                            object.instantiate_permission = null;
                        }
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.creator != null && message.hasOwnProperty("creator"))
                            object.creator = message.creator;
                        if (message.data_hash != null && message.hasOwnProperty("data_hash"))
                            object.data_hash = options.bytes === String ? $util.base64.encode(message.data_hash, 0, message.data_hash.length) : options.bytes === Array ? Array.prototype.slice.call(message.data_hash) : message.data_hash;
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission"))
                            object.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.toObject(message.instantiate_permission, options);
                        return object;
                    };
    
                    /**
                     * Converts this CodeInfoResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.CodeInfoResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CodeInfoResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return CodeInfoResponse;
                })();
    
                v1.QueryCodeResponse = (function() {
    
                    /**
                     * Properties of a QueryCodeResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryCodeResponse
                     * @property {cosmwasm.wasm.v1.ICodeInfoResponse|null} [code_info] QueryCodeResponse code_info
                     * @property {Uint8Array|null} [data] QueryCodeResponse data
                     */
    
                    /**
                     * Constructs a new QueryCodeResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryCodeResponse.
                     * @implements IQueryCodeResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryCodeResponse=} [properties] Properties to set
                     */
                    function QueryCodeResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryCodeResponse code_info.
                     * @member {cosmwasm.wasm.v1.ICodeInfoResponse|null|undefined} code_info
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @instance
                     */
                    QueryCodeResponse.prototype.code_info = null;
    
                    /**
                     * QueryCodeResponse data.
                     * @member {Uint8Array} data
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @instance
                     */
                    QueryCodeResponse.prototype.data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified QueryCodeResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodeResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodeResponse} message QueryCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodeResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_info != null && Object.hasOwnProperty.call(message, "code_info"))
                            $root.cosmwasm.wasm.v1.CodeInfoResponse.encode(message.code_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryCodeResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodeResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodeResponse} message QueryCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryCodeResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryCodeResponse} QueryCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodeResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryCodeResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_info = $root.cosmwasm.wasm.v1.CodeInfoResponse.decode(reader, reader.uint32());
                                break;
                            case 2:
                                message.data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryCodeResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryCodeResponse} QueryCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodeResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryCodeResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryCodeResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_info != null && message.hasOwnProperty("code_info")) {
                            var error = $root.cosmwasm.wasm.v1.CodeInfoResponse.verify(message.code_info);
                            if (error)
                                return "code_info." + error;
                        }
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a QueryCodeResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryCodeResponse} QueryCodeResponse
                     */
                    QueryCodeResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryCodeResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryCodeResponse();
                        if (object.code_info != null) {
                            if (typeof object.code_info !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryCodeResponse.code_info: object expected");
                            message.code_info = $root.cosmwasm.wasm.v1.CodeInfoResponse.fromObject(object.code_info);
                        }
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length)
                                message.data = object.data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryCodeResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryCodeResponse} message QueryCodeResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryCodeResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.code_info = null;
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                        }
                        if (message.code_info != null && message.hasOwnProperty("code_info"))
                            object.code_info = $root.cosmwasm.wasm.v1.CodeInfoResponse.toObject(message.code_info, options);
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        return object;
                    };
    
                    /**
                     * Converts this QueryCodeResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryCodeResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryCodeResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryCodeResponse;
                })();
    
                v1.QueryCodesRequest = (function() {
    
                    /**
                     * Properties of a QueryCodesRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryCodesRequest
                     * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryCodesRequest pagination
                     */
    
                    /**
                     * Constructs a new QueryCodesRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryCodesRequest.
                     * @implements IQueryCodesRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryCodesRequest=} [properties] Properties to set
                     */
                    function QueryCodesRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryCodesRequest pagination.
                     * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @instance
                     */
                    QueryCodesRequest.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryCodesRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodesRequest} message QueryCodesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryCodesRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodesRequest} message QueryCodesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryCodesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryCodesRequest} QueryCodesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryCodesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryCodesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryCodesRequest} QueryCodesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryCodesRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryCodesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryCodesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryCodesRequest} QueryCodesRequest
                     */
                    QueryCodesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryCodesRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryCodesRequest();
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryCodesRequest.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryCodesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryCodesRequest} message QueryCodesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryCodesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.pagination = null;
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryCodesRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryCodesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryCodesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryCodesRequest;
                })();
    
                v1.QueryCodesResponse = (function() {
    
                    /**
                     * Properties of a QueryCodesResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryCodesResponse
                     * @property {Array.<cosmwasm.wasm.v1.ICodeInfoResponse>|null} [code_infos] QueryCodesResponse code_infos
                     * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryCodesResponse pagination
                     */
    
                    /**
                     * Constructs a new QueryCodesResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryCodesResponse.
                     * @implements IQueryCodesResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryCodesResponse=} [properties] Properties to set
                     */
                    function QueryCodesResponse(properties) {
                        this.code_infos = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryCodesResponse code_infos.
                     * @member {Array.<cosmwasm.wasm.v1.ICodeInfoResponse>} code_infos
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @instance
                     */
                    QueryCodesResponse.prototype.code_infos = $util.emptyArray;
    
                    /**
                     * QueryCodesResponse pagination.
                     * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @instance
                     */
                    QueryCodesResponse.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryCodesResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodesResponse} message QueryCodesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_infos != null && message.code_infos.length)
                            for (var i = 0; i < message.code_infos.length; ++i)
                                $root.cosmwasm.wasm.v1.CodeInfoResponse.encode(message.code_infos[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryCodesResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryCodesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryCodesResponse} message QueryCodesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryCodesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryCodesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryCodesResponse} QueryCodesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryCodesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.code_infos && message.code_infos.length))
                                    message.code_infos = [];
                                message.code_infos.push($root.cosmwasm.wasm.v1.CodeInfoResponse.decode(reader, reader.uint32()));
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryCodesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryCodesResponse} QueryCodesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryCodesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryCodesResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryCodesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_infos != null && message.hasOwnProperty("code_infos")) {
                            if (!Array.isArray(message.code_infos))
                                return "code_infos: array expected";
                            for (var i = 0; i < message.code_infos.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.CodeInfoResponse.verify(message.code_infos[i]);
                                if (error)
                                    return "code_infos." + error;
                            }
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryCodesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryCodesResponse} QueryCodesResponse
                     */
                    QueryCodesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryCodesResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryCodesResponse();
                        if (object.code_infos) {
                            if (!Array.isArray(object.code_infos))
                                throw TypeError(".cosmwasm.wasm.v1.QueryCodesResponse.code_infos: array expected");
                            message.code_infos = [];
                            for (var i = 0; i < object.code_infos.length; ++i) {
                                if (typeof object.code_infos[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.QueryCodesResponse.code_infos: object expected");
                                message.code_infos[i] = $root.cosmwasm.wasm.v1.CodeInfoResponse.fromObject(object.code_infos[i]);
                            }
                        }
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryCodesResponse.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryCodesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryCodesResponse} message QueryCodesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryCodesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.code_infos = [];
                        if (options.defaults)
                            object.pagination = null;
                        if (message.code_infos && message.code_infos.length) {
                            object.code_infos = [];
                            for (var j = 0; j < message.code_infos.length; ++j)
                                object.code_infos[j] = $root.cosmwasm.wasm.v1.CodeInfoResponse.toObject(message.code_infos[j], options);
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryCodesResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryCodesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryCodesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryCodesResponse;
                })();
    
                v1.QueryPinnedCodesRequest = (function() {
    
                    /**
                     * Properties of a QueryPinnedCodesRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryPinnedCodesRequest
                     * @property {cosmos.base.query.v1beta1.IPageRequest|null} [pagination] QueryPinnedCodesRequest pagination
                     */
    
                    /**
                     * Constructs a new QueryPinnedCodesRequest.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryPinnedCodesRequest.
                     * @implements IQueryPinnedCodesRequest
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesRequest=} [properties] Properties to set
                     */
                    function QueryPinnedCodesRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryPinnedCodesRequest pagination.
                     * @member {cosmos.base.query.v1beta1.IPageRequest|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @instance
                     */
                    QueryPinnedCodesRequest.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryPinnedCodesRequest message. Does not implicitly {@link cosmwasm.wasm.v1.QueryPinnedCodesRequest.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesRequest} message QueryPinnedCodesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryPinnedCodesRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageRequest.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryPinnedCodesRequest message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryPinnedCodesRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesRequest} message QueryPinnedCodesRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryPinnedCodesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryPinnedCodesRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryPinnedCodesRequest} QueryPinnedCodesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryPinnedCodesRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryPinnedCodesRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryPinnedCodesRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryPinnedCodesRequest} QueryPinnedCodesRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryPinnedCodesRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryPinnedCodesRequest message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryPinnedCodesRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageRequest.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryPinnedCodesRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryPinnedCodesRequest} QueryPinnedCodesRequest
                     */
                    QueryPinnedCodesRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryPinnedCodesRequest)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryPinnedCodesRequest();
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryPinnedCodesRequest.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageRequest.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryPinnedCodesRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryPinnedCodesRequest} message QueryPinnedCodesRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryPinnedCodesRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.pagination = null;
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageRequest.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryPinnedCodesRequest to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryPinnedCodesRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryPinnedCodesRequest;
                })();
    
                v1.QueryPinnedCodesResponse = (function() {
    
                    /**
                     * Properties of a QueryPinnedCodesResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IQueryPinnedCodesResponse
                     * @property {Array.<Long>|null} [code_ids] QueryPinnedCodesResponse code_ids
                     * @property {cosmos.base.query.v1beta1.IPageResponse|null} [pagination] QueryPinnedCodesResponse pagination
                     */
    
                    /**
                     * Constructs a new QueryPinnedCodesResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a QueryPinnedCodesResponse.
                     * @implements IQueryPinnedCodesResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesResponse=} [properties] Properties to set
                     */
                    function QueryPinnedCodesResponse(properties) {
                        this.code_ids = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * QueryPinnedCodesResponse code_ids.
                     * @member {Array.<Long>} code_ids
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @instance
                     */
                    QueryPinnedCodesResponse.prototype.code_ids = $util.emptyArray;
    
                    /**
                     * QueryPinnedCodesResponse pagination.
                     * @member {cosmos.base.query.v1beta1.IPageResponse|null|undefined} pagination
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @instance
                     */
                    QueryPinnedCodesResponse.prototype.pagination = null;
    
                    /**
                     * Encodes the specified QueryPinnedCodesResponse message. Does not implicitly {@link cosmwasm.wasm.v1.QueryPinnedCodesResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesResponse} message QueryPinnedCodesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryPinnedCodesResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_ids != null && message.code_ids.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.code_ids.length; ++i)
                                writer.uint64(message.code_ids[i]);
                            writer.ldelim();
                        }
                        if (message.pagination != null && Object.hasOwnProperty.call(message, "pagination"))
                            $root.cosmos.base.query.v1beta1.PageResponse.encode(message.pagination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified QueryPinnedCodesResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.QueryPinnedCodesResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IQueryPinnedCodesResponse} message QueryPinnedCodesResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    QueryPinnedCodesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a QueryPinnedCodesResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.QueryPinnedCodesResponse} QueryPinnedCodesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryPinnedCodesResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.QueryPinnedCodesResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.code_ids && message.code_ids.length))
                                    message.code_ids = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.code_ids.push(reader.uint64());
                                } else
                                    message.code_ids.push(reader.uint64());
                                break;
                            case 2:
                                message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a QueryPinnedCodesResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.QueryPinnedCodesResponse} QueryPinnedCodesResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    QueryPinnedCodesResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a QueryPinnedCodesResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    QueryPinnedCodesResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_ids != null && message.hasOwnProperty("code_ids")) {
                            if (!Array.isArray(message.code_ids))
                                return "code_ids: array expected";
                            for (var i = 0; i < message.code_ids.length; ++i)
                                if (!$util.isInteger(message.code_ids[i]) && !(message.code_ids[i] && $util.isInteger(message.code_ids[i].low) && $util.isInteger(message.code_ids[i].high)))
                                    return "code_ids: integer|Long[] expected";
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination")) {
                            var error = $root.cosmos.base.query.v1beta1.PageResponse.verify(message.pagination);
                            if (error)
                                return "pagination." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a QueryPinnedCodesResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.QueryPinnedCodesResponse} QueryPinnedCodesResponse
                     */
                    QueryPinnedCodesResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.QueryPinnedCodesResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.QueryPinnedCodesResponse();
                        if (object.code_ids) {
                            if (!Array.isArray(object.code_ids))
                                throw TypeError(".cosmwasm.wasm.v1.QueryPinnedCodesResponse.code_ids: array expected");
                            message.code_ids = [];
                            for (var i = 0; i < object.code_ids.length; ++i)
                                if ($util.Long)
                                    (message.code_ids[i] = $util.Long.fromValue(object.code_ids[i])).unsigned = true;
                                else if (typeof object.code_ids[i] === "string")
                                    message.code_ids[i] = parseInt(object.code_ids[i], 10);
                                else if (typeof object.code_ids[i] === "number")
                                    message.code_ids[i] = object.code_ids[i];
                                else if (typeof object.code_ids[i] === "object")
                                    message.code_ids[i] = new $util.LongBits(object.code_ids[i].low >>> 0, object.code_ids[i].high >>> 0).toNumber(true);
                        }
                        if (object.pagination != null) {
                            if (typeof object.pagination !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.QueryPinnedCodesResponse.pagination: object expected");
                            message.pagination = $root.cosmos.base.query.v1beta1.PageResponse.fromObject(object.pagination);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a QueryPinnedCodesResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.QueryPinnedCodesResponse} message QueryPinnedCodesResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    QueryPinnedCodesResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.code_ids = [];
                        if (options.defaults)
                            object.pagination = null;
                        if (message.code_ids && message.code_ids.length) {
                            object.code_ids = [];
                            for (var j = 0; j < message.code_ids.length; ++j)
                                if (typeof message.code_ids[j] === "number")
                                    object.code_ids[j] = options.longs === String ? String(message.code_ids[j]) : message.code_ids[j];
                                else
                                    object.code_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.code_ids[j]) : options.longs === Number ? new $util.LongBits(message.code_ids[j].low >>> 0, message.code_ids[j].high >>> 0).toNumber(true) : message.code_ids[j];
                        }
                        if (message.pagination != null && message.hasOwnProperty("pagination"))
                            object.pagination = $root.cosmos.base.query.v1beta1.PageResponse.toObject(message.pagination, options);
                        return object;
                    };
    
                    /**
                     * Converts this QueryPinnedCodesResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.QueryPinnedCodesResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    QueryPinnedCodesResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return QueryPinnedCodesResponse;
                })();
    
                /**
                 * AccessType enum.
                 * @name cosmwasm.wasm.v1.AccessType
                 * @enum {number}
                 * @property {number} ACCESS_TYPE_UNSPECIFIED=0 ACCESS_TYPE_UNSPECIFIED value
                 * @property {number} ACCESS_TYPE_NOBODY=1 ACCESS_TYPE_NOBODY value
                 * @property {number} ACCESS_TYPE_ONLY_ADDRESS=2 ACCESS_TYPE_ONLY_ADDRESS value
                 * @property {number} ACCESS_TYPE_EVERYBODY=3 ACCESS_TYPE_EVERYBODY value
                 */
                v1.AccessType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "ACCESS_TYPE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ACCESS_TYPE_NOBODY"] = 1;
                    values[valuesById[2] = "ACCESS_TYPE_ONLY_ADDRESS"] = 2;
                    values[valuesById[3] = "ACCESS_TYPE_EVERYBODY"] = 3;
                    return values;
                })();
    
                v1.AccessTypeParam = (function() {
    
                    /**
                     * Properties of an AccessTypeParam.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IAccessTypeParam
                     * @property {cosmwasm.wasm.v1.AccessType|null} [value] AccessTypeParam value
                     */
    
                    /**
                     * Constructs a new AccessTypeParam.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an AccessTypeParam.
                     * @implements IAccessTypeParam
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IAccessTypeParam=} [properties] Properties to set
                     */
                    function AccessTypeParam(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AccessTypeParam value.
                     * @member {cosmwasm.wasm.v1.AccessType} value
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @instance
                     */
                    AccessTypeParam.prototype.value = 0;
    
                    /**
                     * Encodes the specified AccessTypeParam message. Does not implicitly {@link cosmwasm.wasm.v1.AccessTypeParam.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @static
                     * @param {cosmwasm.wasm.v1.IAccessTypeParam} message AccessTypeParam message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AccessTypeParam.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AccessTypeParam message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AccessTypeParam.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @static
                     * @param {cosmwasm.wasm.v1.IAccessTypeParam} message AccessTypeParam message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AccessTypeParam.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AccessTypeParam message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.AccessTypeParam} AccessTypeParam
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AccessTypeParam.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.AccessTypeParam();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.value = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AccessTypeParam message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.AccessTypeParam} AccessTypeParam
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AccessTypeParam.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AccessTypeParam message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AccessTypeParam.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.value != null && message.hasOwnProperty("value"))
                            switch (message.value) {
                            default:
                                return "value: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an AccessTypeParam message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.AccessTypeParam} AccessTypeParam
                     */
                    AccessTypeParam.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.AccessTypeParam)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.AccessTypeParam();
                        switch (object.value) {
                        case "ACCESS_TYPE_UNSPECIFIED":
                        case 0:
                            message.value = 0;
                            break;
                        case "ACCESS_TYPE_NOBODY":
                        case 1:
                            message.value = 1;
                            break;
                        case "ACCESS_TYPE_ONLY_ADDRESS":
                        case 2:
                            message.value = 2;
                            break;
                        case "ACCESS_TYPE_EVERYBODY":
                        case 3:
                            message.value = 3;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AccessTypeParam message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @static
                     * @param {cosmwasm.wasm.v1.AccessTypeParam} message AccessTypeParam
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AccessTypeParam.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.value = options.enums === String ? "ACCESS_TYPE_UNSPECIFIED" : 0;
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = options.enums === String ? $root.cosmwasm.wasm.v1.AccessType[message.value] : message.value;
                        return object;
                    };
    
                    /**
                     * Converts this AccessTypeParam to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.AccessTypeParam
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AccessTypeParam.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return AccessTypeParam;
                })();
    
                v1.AccessConfig = (function() {
    
                    /**
                     * Properties of an AccessConfig.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IAccessConfig
                     * @property {cosmwasm.wasm.v1.AccessType|null} [permission] AccessConfig permission
                     * @property {string|null} [address] AccessConfig address
                     */
    
                    /**
                     * Constructs a new AccessConfig.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an AccessConfig.
                     * @implements IAccessConfig
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IAccessConfig=} [properties] Properties to set
                     */
                    function AccessConfig(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AccessConfig permission.
                     * @member {cosmwasm.wasm.v1.AccessType} permission
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @instance
                     */
                    AccessConfig.prototype.permission = 0;
    
                    /**
                     * AccessConfig address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @instance
                     */
                    AccessConfig.prototype.address = "";
    
                    /**
                     * Encodes the specified AccessConfig message. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfig.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @static
                     * @param {cosmwasm.wasm.v1.IAccessConfig} message AccessConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AccessConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.permission != null && Object.hasOwnProperty.call(message, "permission"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.permission);
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.address);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AccessConfig message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @static
                     * @param {cosmwasm.wasm.v1.IAccessConfig} message AccessConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AccessConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AccessConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.AccessConfig} AccessConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AccessConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.AccessConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.permission = reader.int32();
                                break;
                            case 2:
                                message.address = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AccessConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.AccessConfig} AccessConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AccessConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AccessConfig message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AccessConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.permission != null && message.hasOwnProperty("permission"))
                            switch (message.permission) {
                            default:
                                return "permission: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AccessConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.AccessConfig} AccessConfig
                     */
                    AccessConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.AccessConfig)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.AccessConfig();
                        switch (object.permission) {
                        case "ACCESS_TYPE_UNSPECIFIED":
                        case 0:
                            message.permission = 0;
                            break;
                        case "ACCESS_TYPE_NOBODY":
                        case 1:
                            message.permission = 1;
                            break;
                        case "ACCESS_TYPE_ONLY_ADDRESS":
                        case 2:
                            message.permission = 2;
                            break;
                        case "ACCESS_TYPE_EVERYBODY":
                        case 3:
                            message.permission = 3;
                            break;
                        }
                        if (object.address != null)
                            message.address = String(object.address);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AccessConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @static
                     * @param {cosmwasm.wasm.v1.AccessConfig} message AccessConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AccessConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.permission = options.enums === String ? "ACCESS_TYPE_UNSPECIFIED" : 0;
                            object.address = "";
                        }
                        if (message.permission != null && message.hasOwnProperty("permission"))
                            object.permission = options.enums === String ? $root.cosmwasm.wasm.v1.AccessType[message.permission] : message.permission;
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        return object;
                    };
    
                    /**
                     * Converts this AccessConfig to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.AccessConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AccessConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return AccessConfig;
                })();
    
                v1.Params = (function() {
    
                    /**
                     * Properties of a Params.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IParams
                     * @property {cosmwasm.wasm.v1.IAccessConfig|null} [code_upload_access] Params code_upload_access
                     * @property {cosmwasm.wasm.v1.AccessType|null} [instantiate_default_permission] Params instantiate_default_permission
                     */
    
                    /**
                     * Constructs a new Params.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a Params.
                     * @implements IParams
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IParams=} [properties] Properties to set
                     */
                    function Params(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Params code_upload_access.
                     * @member {cosmwasm.wasm.v1.IAccessConfig|null|undefined} code_upload_access
                     * @memberof cosmwasm.wasm.v1.Params
                     * @instance
                     */
                    Params.prototype.code_upload_access = null;
    
                    /**
                     * Params instantiate_default_permission.
                     * @member {cosmwasm.wasm.v1.AccessType} instantiate_default_permission
                     * @memberof cosmwasm.wasm.v1.Params
                     * @instance
                     */
                    Params.prototype.instantiate_default_permission = 0;
    
                    /**
                     * Encodes the specified Params message. Does not implicitly {@link cosmwasm.wasm.v1.Params.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.Params
                     * @static
                     * @param {cosmwasm.wasm.v1.IParams} message Params message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Params.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_upload_access != null && Object.hasOwnProperty.call(message, "code_upload_access"))
                            $root.cosmwasm.wasm.v1.AccessConfig.encode(message.code_upload_access, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.instantiate_default_permission != null && Object.hasOwnProperty.call(message, "instantiate_default_permission"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.instantiate_default_permission);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Params message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.Params.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.Params
                     * @static
                     * @param {cosmwasm.wasm.v1.IParams} message Params message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Params.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Params message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.Params
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.Params} Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Params.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.Params();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_upload_access = $root.cosmwasm.wasm.v1.AccessConfig.decode(reader, reader.uint32());
                                break;
                            case 2:
                                message.instantiate_default_permission = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Params message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.Params
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.Params} Params
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Params.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Params message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.Params
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Params.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_upload_access != null && message.hasOwnProperty("code_upload_access")) {
                            var error = $root.cosmwasm.wasm.v1.AccessConfig.verify(message.code_upload_access);
                            if (error)
                                return "code_upload_access." + error;
                        }
                        if (message.instantiate_default_permission != null && message.hasOwnProperty("instantiate_default_permission"))
                            switch (message.instantiate_default_permission) {
                            default:
                                return "instantiate_default_permission: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates a Params message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.Params
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.Params} Params
                     */
                    Params.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.Params)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.Params();
                        if (object.code_upload_access != null) {
                            if (typeof object.code_upload_access !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.Params.code_upload_access: object expected");
                            message.code_upload_access = $root.cosmwasm.wasm.v1.AccessConfig.fromObject(object.code_upload_access);
                        }
                        switch (object.instantiate_default_permission) {
                        case "ACCESS_TYPE_UNSPECIFIED":
                        case 0:
                            message.instantiate_default_permission = 0;
                            break;
                        case "ACCESS_TYPE_NOBODY":
                        case 1:
                            message.instantiate_default_permission = 1;
                            break;
                        case "ACCESS_TYPE_ONLY_ADDRESS":
                        case 2:
                            message.instantiate_default_permission = 2;
                            break;
                        case "ACCESS_TYPE_EVERYBODY":
                        case 3:
                            message.instantiate_default_permission = 3;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Params message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.Params
                     * @static
                     * @param {cosmwasm.wasm.v1.Params} message Params
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Params.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.code_upload_access = null;
                            object.instantiate_default_permission = options.enums === String ? "ACCESS_TYPE_UNSPECIFIED" : 0;
                        }
                        if (message.code_upload_access != null && message.hasOwnProperty("code_upload_access"))
                            object.code_upload_access = $root.cosmwasm.wasm.v1.AccessConfig.toObject(message.code_upload_access, options);
                        if (message.instantiate_default_permission != null && message.hasOwnProperty("instantiate_default_permission"))
                            object.instantiate_default_permission = options.enums === String ? $root.cosmwasm.wasm.v1.AccessType[message.instantiate_default_permission] : message.instantiate_default_permission;
                        return object;
                    };
    
                    /**
                     * Converts this Params to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.Params
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Params.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Params;
                })();
    
                v1.CodeInfo = (function() {
    
                    /**
                     * Properties of a CodeInfo.
                     * @memberof cosmwasm.wasm.v1
                     * @interface ICodeInfo
                     * @property {Uint8Array|null} [code_hash] CodeInfo code_hash
                     * @property {string|null} [creator] CodeInfo creator
                     * @property {cosmwasm.wasm.v1.IAccessConfig|null} [instantiate_config] CodeInfo instantiate_config
                     */
    
                    /**
                     * Constructs a new CodeInfo.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a CodeInfo.
                     * @implements ICodeInfo
                     * @constructor
                     * @param {cosmwasm.wasm.v1.ICodeInfo=} [properties] Properties to set
                     */
                    function CodeInfo(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * CodeInfo code_hash.
                     * @member {Uint8Array} code_hash
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @instance
                     */
                    CodeInfo.prototype.code_hash = $util.newBuffer([]);
    
                    /**
                     * CodeInfo creator.
                     * @member {string} creator
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @instance
                     */
                    CodeInfo.prototype.creator = "";
    
                    /**
                     * CodeInfo instantiate_config.
                     * @member {cosmwasm.wasm.v1.IAccessConfig|null|undefined} instantiate_config
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @instance
                     */
                    CodeInfo.prototype.instantiate_config = null;
    
                    /**
                     * Encodes the specified CodeInfo message. Does not implicitly {@link cosmwasm.wasm.v1.CodeInfo.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @static
                     * @param {cosmwasm.wasm.v1.ICodeInfo} message CodeInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CodeInfo.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_hash != null && Object.hasOwnProperty.call(message, "code_hash"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.code_hash);
                        if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.creator);
                        if (message.instantiate_config != null && Object.hasOwnProperty.call(message, "instantiate_config"))
                            $root.cosmwasm.wasm.v1.AccessConfig.encode(message.instantiate_config, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified CodeInfo message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.CodeInfo.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @static
                     * @param {cosmwasm.wasm.v1.ICodeInfo} message CodeInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    CodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a CodeInfo message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.CodeInfo} CodeInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CodeInfo.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.CodeInfo();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_hash = reader.bytes();
                                break;
                            case 2:
                                message.creator = reader.string();
                                break;
                            case 5:
                                message.instantiate_config = $root.cosmwasm.wasm.v1.AccessConfig.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a CodeInfo message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.CodeInfo} CodeInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    CodeInfo.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a CodeInfo message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    CodeInfo.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_hash != null && message.hasOwnProperty("code_hash"))
                            if (!(message.code_hash && typeof message.code_hash.length === "number" || $util.isString(message.code_hash)))
                                return "code_hash: buffer expected";
                        if (message.creator != null && message.hasOwnProperty("creator"))
                            if (!$util.isString(message.creator))
                                return "creator: string expected";
                        if (message.instantiate_config != null && message.hasOwnProperty("instantiate_config")) {
                            var error = $root.cosmwasm.wasm.v1.AccessConfig.verify(message.instantiate_config);
                            if (error)
                                return "instantiate_config." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a CodeInfo message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.CodeInfo} CodeInfo
                     */
                    CodeInfo.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.CodeInfo)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.CodeInfo();
                        if (object.code_hash != null)
                            if (typeof object.code_hash === "string")
                                $util.base64.decode(object.code_hash, message.code_hash = $util.newBuffer($util.base64.length(object.code_hash)), 0);
                            else if (object.code_hash.length)
                                message.code_hash = object.code_hash;
                        if (object.creator != null)
                            message.creator = String(object.creator);
                        if (object.instantiate_config != null) {
                            if (typeof object.instantiate_config !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.CodeInfo.instantiate_config: object expected");
                            message.instantiate_config = $root.cosmwasm.wasm.v1.AccessConfig.fromObject(object.instantiate_config);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a CodeInfo message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @static
                     * @param {cosmwasm.wasm.v1.CodeInfo} message CodeInfo
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    CodeInfo.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if (options.bytes === String)
                                object.code_hash = "";
                            else {
                                object.code_hash = [];
                                if (options.bytes !== Array)
                                    object.code_hash = $util.newBuffer(object.code_hash);
                            }
                            object.creator = "";
                            object.instantiate_config = null;
                        }
                        if (message.code_hash != null && message.hasOwnProperty("code_hash"))
                            object.code_hash = options.bytes === String ? $util.base64.encode(message.code_hash, 0, message.code_hash.length) : options.bytes === Array ? Array.prototype.slice.call(message.code_hash) : message.code_hash;
                        if (message.creator != null && message.hasOwnProperty("creator"))
                            object.creator = message.creator;
                        if (message.instantiate_config != null && message.hasOwnProperty("instantiate_config"))
                            object.instantiate_config = $root.cosmwasm.wasm.v1.AccessConfig.toObject(message.instantiate_config, options);
                        return object;
                    };
    
                    /**
                     * Converts this CodeInfo to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.CodeInfo
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    CodeInfo.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return CodeInfo;
                })();
    
                v1.ContractInfo = (function() {
    
                    /**
                     * Properties of a ContractInfo.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IContractInfo
                     * @property {Long|null} [code_id] ContractInfo code_id
                     * @property {string|null} [creator] ContractInfo creator
                     * @property {string|null} [admin] ContractInfo admin
                     * @property {string|null} [label] ContractInfo label
                     * @property {cosmwasm.wasm.v1.IAbsoluteTxPosition|null} [created] ContractInfo created
                     * @property {string|null} [ibc_port_id] ContractInfo ibc_port_id
                     * @property {google.protobuf.IAny|null} [extension] ContractInfo extension
                     */
    
                    /**
                     * Constructs a new ContractInfo.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a ContractInfo.
                     * @implements IContractInfo
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IContractInfo=} [properties] Properties to set
                     */
                    function ContractInfo(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ContractInfo code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     */
                    ContractInfo.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * ContractInfo creator.
                     * @member {string} creator
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     */
                    ContractInfo.prototype.creator = "";
    
                    /**
                     * ContractInfo admin.
                     * @member {string} admin
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     */
                    ContractInfo.prototype.admin = "";
    
                    /**
                     * ContractInfo label.
                     * @member {string} label
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     */
                    ContractInfo.prototype.label = "";
    
                    /**
                     * ContractInfo created.
                     * @member {cosmwasm.wasm.v1.IAbsoluteTxPosition|null|undefined} created
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     */
                    ContractInfo.prototype.created = null;
    
                    /**
                     * ContractInfo ibc_port_id.
                     * @member {string} ibc_port_id
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     */
                    ContractInfo.prototype.ibc_port_id = "";
    
                    /**
                     * ContractInfo extension.
                     * @member {google.protobuf.IAny|null|undefined} extension
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     */
                    ContractInfo.prototype.extension = null;
    
                    /**
                     * Encodes the specified ContractInfo message. Does not implicitly {@link cosmwasm.wasm.v1.ContractInfo.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @static
                     * @param {cosmwasm.wasm.v1.IContractInfo} message ContractInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ContractInfo.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.code_id);
                        if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.creator);
                        if (message.admin != null && Object.hasOwnProperty.call(message, "admin"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.admin);
                        if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.label);
                        if (message.created != null && Object.hasOwnProperty.call(message, "created"))
                            $root.cosmwasm.wasm.v1.AbsoluteTxPosition.encode(message.created, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.ibc_port_id != null && Object.hasOwnProperty.call(message, "ibc_port_id"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.ibc_port_id);
                        if (message.extension != null && Object.hasOwnProperty.call(message, "extension"))
                            $root.google.protobuf.Any.encode(message.extension, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ContractInfo message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ContractInfo.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @static
                     * @param {cosmwasm.wasm.v1.IContractInfo} message ContractInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ContractInfo.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ContractInfo message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.ContractInfo} ContractInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ContractInfo.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.ContractInfo();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_id = reader.uint64();
                                break;
                            case 2:
                                message.creator = reader.string();
                                break;
                            case 3:
                                message.admin = reader.string();
                                break;
                            case 4:
                                message.label = reader.string();
                                break;
                            case 5:
                                message.created = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.decode(reader, reader.uint32());
                                break;
                            case 6:
                                message.ibc_port_id = reader.string();
                                break;
                            case 7:
                                message.extension = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ContractInfo message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.ContractInfo} ContractInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ContractInfo.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ContractInfo message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ContractInfo.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.creator != null && message.hasOwnProperty("creator"))
                            if (!$util.isString(message.creator))
                                return "creator: string expected";
                        if (message.admin != null && message.hasOwnProperty("admin"))
                            if (!$util.isString(message.admin))
                                return "admin: string expected";
                        if (message.label != null && message.hasOwnProperty("label"))
                            if (!$util.isString(message.label))
                                return "label: string expected";
                        if (message.created != null && message.hasOwnProperty("created")) {
                            var error = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.verify(message.created);
                            if (error)
                                return "created." + error;
                        }
                        if (message.ibc_port_id != null && message.hasOwnProperty("ibc_port_id"))
                            if (!$util.isString(message.ibc_port_id))
                                return "ibc_port_id: string expected";
                        if (message.extension != null && message.hasOwnProperty("extension")) {
                            var error = $root.google.protobuf.Any.verify(message.extension);
                            if (error)
                                return "extension." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a ContractInfo message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.ContractInfo} ContractInfo
                     */
                    ContractInfo.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.ContractInfo)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.ContractInfo();
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.creator != null)
                            message.creator = String(object.creator);
                        if (object.admin != null)
                            message.admin = String(object.admin);
                        if (object.label != null)
                            message.label = String(object.label);
                        if (object.created != null) {
                            if (typeof object.created !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.ContractInfo.created: object expected");
                            message.created = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.fromObject(object.created);
                        }
                        if (object.ibc_port_id != null)
                            message.ibc_port_id = String(object.ibc_port_id);
                        if (object.extension != null) {
                            if (typeof object.extension !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.ContractInfo.extension: object expected");
                            message.extension = $root.google.protobuf.Any.fromObject(object.extension);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ContractInfo message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @static
                     * @param {cosmwasm.wasm.v1.ContractInfo} message ContractInfo
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ContractInfo.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.creator = "";
                            object.admin = "";
                            object.label = "";
                            object.created = null;
                            object.ibc_port_id = "";
                            object.extension = null;
                        }
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.creator != null && message.hasOwnProperty("creator"))
                            object.creator = message.creator;
                        if (message.admin != null && message.hasOwnProperty("admin"))
                            object.admin = message.admin;
                        if (message.label != null && message.hasOwnProperty("label"))
                            object.label = message.label;
                        if (message.created != null && message.hasOwnProperty("created"))
                            object.created = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.toObject(message.created, options);
                        if (message.ibc_port_id != null && message.hasOwnProperty("ibc_port_id"))
                            object.ibc_port_id = message.ibc_port_id;
                        if (message.extension != null && message.hasOwnProperty("extension"))
                            object.extension = $root.google.protobuf.Any.toObject(message.extension, options);
                        return object;
                    };
    
                    /**
                     * Converts this ContractInfo to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.ContractInfo
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ContractInfo.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ContractInfo;
                })();
    
                /**
                 * ContractCodeHistoryOperationType enum.
                 * @name cosmwasm.wasm.v1.ContractCodeHistoryOperationType
                 * @enum {number}
                 * @property {number} CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED=0 CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED value
                 * @property {number} CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT=1 CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT value
                 * @property {number} CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE=2 CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE value
                 * @property {number} CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS=3 CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS value
                 */
                v1.ContractCodeHistoryOperationType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT"] = 1;
                    values[valuesById[2] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE"] = 2;
                    values[valuesById[3] = "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS"] = 3;
                    return values;
                })();
    
                v1.ContractCodeHistoryEntry = (function() {
    
                    /**
                     * Properties of a ContractCodeHistoryEntry.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IContractCodeHistoryEntry
                     * @property {cosmwasm.wasm.v1.ContractCodeHistoryOperationType|null} [operation] ContractCodeHistoryEntry operation
                     * @property {Long|null} [code_id] ContractCodeHistoryEntry code_id
                     * @property {cosmwasm.wasm.v1.IAbsoluteTxPosition|null} [updated] ContractCodeHistoryEntry updated
                     * @property {Uint8Array|null} [msg] ContractCodeHistoryEntry msg
                     */
    
                    /**
                     * Constructs a new ContractCodeHistoryEntry.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a ContractCodeHistoryEntry.
                     * @implements IContractCodeHistoryEntry
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IContractCodeHistoryEntry=} [properties] Properties to set
                     */
                    function ContractCodeHistoryEntry(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ContractCodeHistoryEntry operation.
                     * @member {cosmwasm.wasm.v1.ContractCodeHistoryOperationType} operation
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @instance
                     */
                    ContractCodeHistoryEntry.prototype.operation = 0;
    
                    /**
                     * ContractCodeHistoryEntry code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @instance
                     */
                    ContractCodeHistoryEntry.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * ContractCodeHistoryEntry updated.
                     * @member {cosmwasm.wasm.v1.IAbsoluteTxPosition|null|undefined} updated
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @instance
                     */
                    ContractCodeHistoryEntry.prototype.updated = null;
    
                    /**
                     * ContractCodeHistoryEntry msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @instance
                     */
                    ContractCodeHistoryEntry.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified ContractCodeHistoryEntry message. Does not implicitly {@link cosmwasm.wasm.v1.ContractCodeHistoryEntry.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @static
                     * @param {cosmwasm.wasm.v1.IContractCodeHistoryEntry} message ContractCodeHistoryEntry message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ContractCodeHistoryEntry.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.operation);
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.code_id);
                        if (message.updated != null && Object.hasOwnProperty.call(message, "updated"))
                            $root.cosmwasm.wasm.v1.AbsoluteTxPosition.encode(message.updated, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.msg);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ContractCodeHistoryEntry message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ContractCodeHistoryEntry.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @static
                     * @param {cosmwasm.wasm.v1.IContractCodeHistoryEntry} message ContractCodeHistoryEntry message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ContractCodeHistoryEntry.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ContractCodeHistoryEntry message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.ContractCodeHistoryEntry} ContractCodeHistoryEntry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ContractCodeHistoryEntry.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.ContractCodeHistoryEntry();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.operation = reader.int32();
                                break;
                            case 2:
                                message.code_id = reader.uint64();
                                break;
                            case 3:
                                message.updated = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.decode(reader, reader.uint32());
                                break;
                            case 4:
                                message.msg = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ContractCodeHistoryEntry message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.ContractCodeHistoryEntry} ContractCodeHistoryEntry
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ContractCodeHistoryEntry.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ContractCodeHistoryEntry message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ContractCodeHistoryEntry.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.operation != null && message.hasOwnProperty("operation"))
                            switch (message.operation) {
                            default:
                                return "operation: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.updated != null && message.hasOwnProperty("updated")) {
                            var error = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.verify(message.updated);
                            if (error)
                                return "updated." + error;
                        }
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ContractCodeHistoryEntry message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.ContractCodeHistoryEntry} ContractCodeHistoryEntry
                     */
                    ContractCodeHistoryEntry.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.ContractCodeHistoryEntry)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.ContractCodeHistoryEntry();
                        switch (object.operation) {
                        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED":
                        case 0:
                            message.operation = 0;
                            break;
                        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT":
                        case 1:
                            message.operation = 1;
                            break;
                        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE":
                        case 2:
                            message.operation = 2;
                            break;
                        case "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS":
                        case 3:
                            message.operation = 3;
                            break;
                        }
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.updated != null) {
                            if (typeof object.updated !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.ContractCodeHistoryEntry.updated: object expected");
                            message.updated = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.fromObject(object.updated);
                        }
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ContractCodeHistoryEntry message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @static
                     * @param {cosmwasm.wasm.v1.ContractCodeHistoryEntry} message ContractCodeHistoryEntry
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ContractCodeHistoryEntry.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.operation = options.enums === String ? "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED" : 0;
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.updated = null;
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.operation != null && message.hasOwnProperty("operation"))
                            object.operation = options.enums === String ? $root.cosmwasm.wasm.v1.ContractCodeHistoryOperationType[message.operation] : message.operation;
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.updated != null && message.hasOwnProperty("updated"))
                            object.updated = $root.cosmwasm.wasm.v1.AbsoluteTxPosition.toObject(message.updated, options);
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        return object;
                    };
    
                    /**
                     * Converts this ContractCodeHistoryEntry to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.ContractCodeHistoryEntry
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ContractCodeHistoryEntry.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ContractCodeHistoryEntry;
                })();
    
                v1.AbsoluteTxPosition = (function() {
    
                    /**
                     * Properties of an AbsoluteTxPosition.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IAbsoluteTxPosition
                     * @property {Long|null} [block_height] AbsoluteTxPosition block_height
                     * @property {Long|null} [tx_index] AbsoluteTxPosition tx_index
                     */
    
                    /**
                     * Constructs a new AbsoluteTxPosition.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an AbsoluteTxPosition.
                     * @implements IAbsoluteTxPosition
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IAbsoluteTxPosition=} [properties] Properties to set
                     */
                    function AbsoluteTxPosition(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AbsoluteTxPosition block_height.
                     * @member {Long} block_height
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @instance
                     */
                    AbsoluteTxPosition.prototype.block_height = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * AbsoluteTxPosition tx_index.
                     * @member {Long} tx_index
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @instance
                     */
                    AbsoluteTxPosition.prototype.tx_index = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * Encodes the specified AbsoluteTxPosition message. Does not implicitly {@link cosmwasm.wasm.v1.AbsoluteTxPosition.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @static
                     * @param {cosmwasm.wasm.v1.IAbsoluteTxPosition} message AbsoluteTxPosition message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AbsoluteTxPosition.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.block_height != null && Object.hasOwnProperty.call(message, "block_height"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.block_height);
                        if (message.tx_index != null && Object.hasOwnProperty.call(message, "tx_index"))
                            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.tx_index);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AbsoluteTxPosition message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AbsoluteTxPosition.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @static
                     * @param {cosmwasm.wasm.v1.IAbsoluteTxPosition} message AbsoluteTxPosition message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AbsoluteTxPosition.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AbsoluteTxPosition message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.AbsoluteTxPosition} AbsoluteTxPosition
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AbsoluteTxPosition.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.AbsoluteTxPosition();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.block_height = reader.uint64();
                                break;
                            case 2:
                                message.tx_index = reader.uint64();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AbsoluteTxPosition message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.AbsoluteTxPosition} AbsoluteTxPosition
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AbsoluteTxPosition.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AbsoluteTxPosition message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AbsoluteTxPosition.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.block_height != null && message.hasOwnProperty("block_height"))
                            if (!$util.isInteger(message.block_height) && !(message.block_height && $util.isInteger(message.block_height.low) && $util.isInteger(message.block_height.high)))
                                return "block_height: integer|Long expected";
                        if (message.tx_index != null && message.hasOwnProperty("tx_index"))
                            if (!$util.isInteger(message.tx_index) && !(message.tx_index && $util.isInteger(message.tx_index.low) && $util.isInteger(message.tx_index.high)))
                                return "tx_index: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates an AbsoluteTxPosition message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.AbsoluteTxPosition} AbsoluteTxPosition
                     */
                    AbsoluteTxPosition.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.AbsoluteTxPosition)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.AbsoluteTxPosition();
                        if (object.block_height != null)
                            if ($util.Long)
                                (message.block_height = $util.Long.fromValue(object.block_height)).unsigned = true;
                            else if (typeof object.block_height === "string")
                                message.block_height = parseInt(object.block_height, 10);
                            else if (typeof object.block_height === "number")
                                message.block_height = object.block_height;
                            else if (typeof object.block_height === "object")
                                message.block_height = new $util.LongBits(object.block_height.low >>> 0, object.block_height.high >>> 0).toNumber(true);
                        if (object.tx_index != null)
                            if ($util.Long)
                                (message.tx_index = $util.Long.fromValue(object.tx_index)).unsigned = true;
                            else if (typeof object.tx_index === "string")
                                message.tx_index = parseInt(object.tx_index, 10);
                            else if (typeof object.tx_index === "number")
                                message.tx_index = object.tx_index;
                            else if (typeof object.tx_index === "object")
                                message.tx_index = new $util.LongBits(object.tx_index.low >>> 0, object.tx_index.high >>> 0).toNumber(true);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AbsoluteTxPosition message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @static
                     * @param {cosmwasm.wasm.v1.AbsoluteTxPosition} message AbsoluteTxPosition
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AbsoluteTxPosition.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.block_height = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.block_height = options.longs === String ? "0" : 0;
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.tx_index = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.tx_index = options.longs === String ? "0" : 0;
                        }
                        if (message.block_height != null && message.hasOwnProperty("block_height"))
                            if (typeof message.block_height === "number")
                                object.block_height = options.longs === String ? String(message.block_height) : message.block_height;
                            else
                                object.block_height = options.longs === String ? $util.Long.prototype.toString.call(message.block_height) : options.longs === Number ? new $util.LongBits(message.block_height.low >>> 0, message.block_height.high >>> 0).toNumber(true) : message.block_height;
                        if (message.tx_index != null && message.hasOwnProperty("tx_index"))
                            if (typeof message.tx_index === "number")
                                object.tx_index = options.longs === String ? String(message.tx_index) : message.tx_index;
                            else
                                object.tx_index = options.longs === String ? $util.Long.prototype.toString.call(message.tx_index) : options.longs === Number ? new $util.LongBits(message.tx_index.low >>> 0, message.tx_index.high >>> 0).toNumber(true) : message.tx_index;
                        return object;
                    };
    
                    /**
                     * Converts this AbsoluteTxPosition to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.AbsoluteTxPosition
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AbsoluteTxPosition.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return AbsoluteTxPosition;
                })();
    
                v1.Model = (function() {
    
                    /**
                     * Properties of a Model.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IModel
                     * @property {Uint8Array|null} [key] Model key
                     * @property {Uint8Array|null} [value] Model value
                     */
    
                    /**
                     * Constructs a new Model.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a Model.
                     * @implements IModel
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IModel=} [properties] Properties to set
                     */
                    function Model(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Model key.
                     * @member {Uint8Array} key
                     * @memberof cosmwasm.wasm.v1.Model
                     * @instance
                     */
                    Model.prototype.key = $util.newBuffer([]);
    
                    /**
                     * Model value.
                     * @member {Uint8Array} value
                     * @memberof cosmwasm.wasm.v1.Model
                     * @instance
                     */
                    Model.prototype.value = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified Model message. Does not implicitly {@link cosmwasm.wasm.v1.Model.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.Model
                     * @static
                     * @param {cosmwasm.wasm.v1.IModel} message Model message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Model.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Model message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.Model.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.Model
                     * @static
                     * @param {cosmwasm.wasm.v1.IModel} message Model message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Model.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Model message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.Model
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.Model} Model
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Model.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.Model();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.key = reader.bytes();
                                break;
                            case 2:
                                message.value = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Model message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.Model
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.Model} Model
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Model.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Model message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.Model
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Model.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.key != null && message.hasOwnProperty("key"))
                            if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
                                return "key: buffer expected";
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                                return "value: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a Model message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.Model
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.Model} Model
                     */
                    Model.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.Model)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.Model();
                        if (object.key != null)
                            if (typeof object.key === "string")
                                $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
                            else if (object.key.length)
                                message.key = object.key;
                        if (object.value != null)
                            if (typeof object.value === "string")
                                $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                            else if (object.value.length)
                                message.value = object.value;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Model message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.Model
                     * @static
                     * @param {cosmwasm.wasm.v1.Model} message Model
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Model.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if (options.bytes === String)
                                object.key = "";
                            else {
                                object.key = [];
                                if (options.bytes !== Array)
                                    object.key = $util.newBuffer(object.key);
                            }
                            if (options.bytes === String)
                                object.value = "";
                            else {
                                object.value = [];
                                if (options.bytes !== Array)
                                    object.value = $util.newBuffer(object.value);
                            }
                        }
                        if (message.key != null && message.hasOwnProperty("key"))
                            object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                        return object;
                    };
    
                    /**
                     * Converts this Model to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.Model
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Model.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Model;
                })();
    
                v1.Msg = (function() {
    
                    /**
                     * Constructs a new Msg service.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a Msg
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function Msg(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (Msg.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Msg;
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Msg#storeCode}.
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @typedef StoreCodeCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.MsgStoreCodeResponse} [response] MsgStoreCodeResponse
                     */
    
                    /**
                     * Calls StoreCode.
                     * @function storeCode
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgStoreCode} request MsgStoreCode message or plain object
                     * @param {cosmwasm.wasm.v1.Msg.StoreCodeCallback} callback Node-style callback called with the error, if any, and MsgStoreCodeResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Msg.prototype.storeCode = function storeCode(request, callback) {
                        return this.rpcCall(storeCode, $root.cosmwasm.wasm.v1.MsgStoreCode, $root.cosmwasm.wasm.v1.MsgStoreCodeResponse, request, callback);
                    }, "name", { value: "StoreCode" });
    
                    /**
                     * Calls StoreCode.
                     * @function storeCode
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgStoreCode} request MsgStoreCode message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.MsgStoreCodeResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Msg#instantiateContract}.
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @typedef InstantiateContractCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.MsgInstantiateContractResponse} [response] MsgInstantiateContractResponse
                     */
    
                    /**
                     * Calls InstantiateContract.
                     * @function instantiateContract
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContract} request MsgInstantiateContract message or plain object
                     * @param {cosmwasm.wasm.v1.Msg.InstantiateContractCallback} callback Node-style callback called with the error, if any, and MsgInstantiateContractResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Msg.prototype.instantiateContract = function instantiateContract(request, callback) {
                        return this.rpcCall(instantiateContract, $root.cosmwasm.wasm.v1.MsgInstantiateContract, $root.cosmwasm.wasm.v1.MsgInstantiateContractResponse, request, callback);
                    }, "name", { value: "InstantiateContract" });
    
                    /**
                     * Calls InstantiateContract.
                     * @function instantiateContract
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContract} request MsgInstantiateContract message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.MsgInstantiateContractResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Msg#executeContract}.
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @typedef ExecuteContractCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.MsgExecuteContractResponse} [response] MsgExecuteContractResponse
                     */
    
                    /**
                     * Calls ExecuteContract.
                     * @function executeContract
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContract} request MsgExecuteContract message or plain object
                     * @param {cosmwasm.wasm.v1.Msg.ExecuteContractCallback} callback Node-style callback called with the error, if any, and MsgExecuteContractResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Msg.prototype.executeContract = function executeContract(request, callback) {
                        return this.rpcCall(executeContract, $root.cosmwasm.wasm.v1.MsgExecuteContract, $root.cosmwasm.wasm.v1.MsgExecuteContractResponse, request, callback);
                    }, "name", { value: "ExecuteContract" });
    
                    /**
                     * Calls ExecuteContract.
                     * @function executeContract
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContract} request MsgExecuteContract message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.MsgExecuteContractResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Msg#migrateContract}.
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @typedef MigrateContractCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.MsgMigrateContractResponse} [response] MsgMigrateContractResponse
                     */
    
                    /**
                     * Calls MigrateContract.
                     * @function migrateContract
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContract} request MsgMigrateContract message or plain object
                     * @param {cosmwasm.wasm.v1.Msg.MigrateContractCallback} callback Node-style callback called with the error, if any, and MsgMigrateContractResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Msg.prototype.migrateContract = function migrateContract(request, callback) {
                        return this.rpcCall(migrateContract, $root.cosmwasm.wasm.v1.MsgMigrateContract, $root.cosmwasm.wasm.v1.MsgMigrateContractResponse, request, callback);
                    }, "name", { value: "MigrateContract" });
    
                    /**
                     * Calls MigrateContract.
                     * @function migrateContract
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContract} request MsgMigrateContract message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.MsgMigrateContractResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Msg#updateAdmin}.
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @typedef UpdateAdminCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.MsgUpdateAdminResponse} [response] MsgUpdateAdminResponse
                     */
    
                    /**
                     * Calls UpdateAdmin.
                     * @function updateAdmin
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdmin} request MsgUpdateAdmin message or plain object
                     * @param {cosmwasm.wasm.v1.Msg.UpdateAdminCallback} callback Node-style callback called with the error, if any, and MsgUpdateAdminResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Msg.prototype.updateAdmin = function updateAdmin(request, callback) {
                        return this.rpcCall(updateAdmin, $root.cosmwasm.wasm.v1.MsgUpdateAdmin, $root.cosmwasm.wasm.v1.MsgUpdateAdminResponse, request, callback);
                    }, "name", { value: "UpdateAdmin" });
    
                    /**
                     * Calls UpdateAdmin.
                     * @function updateAdmin
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdmin} request MsgUpdateAdmin message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.MsgUpdateAdminResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link cosmwasm.wasm.v1.Msg#clearAdmin}.
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @typedef ClearAdminCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {cosmwasm.wasm.v1.MsgClearAdminResponse} [response] MsgClearAdminResponse
                     */
    
                    /**
                     * Calls ClearAdmin.
                     * @function clearAdmin
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgClearAdmin} request MsgClearAdmin message or plain object
                     * @param {cosmwasm.wasm.v1.Msg.ClearAdminCallback} callback Node-style callback called with the error, if any, and MsgClearAdminResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Msg.prototype.clearAdmin = function clearAdmin(request, callback) {
                        return this.rpcCall(clearAdmin, $root.cosmwasm.wasm.v1.MsgClearAdmin, $root.cosmwasm.wasm.v1.MsgClearAdminResponse, request, callback);
                    }, "name", { value: "ClearAdmin" });
    
                    /**
                     * Calls ClearAdmin.
                     * @function clearAdmin
                     * @memberof cosmwasm.wasm.v1.Msg
                     * @instance
                     * @param {cosmwasm.wasm.v1.IMsgClearAdmin} request MsgClearAdmin message or plain object
                     * @returns {Promise<cosmwasm.wasm.v1.MsgClearAdminResponse>} Promise
                     * @variation 2
                     */
    
                    return Msg;
                })();
    
                v1.MsgStoreCode = (function() {
    
                    /**
                     * Properties of a MsgStoreCode.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgStoreCode
                     * @property {string|null} [sender] MsgStoreCode sender
                     * @property {Uint8Array|null} [wasm_byte_code] MsgStoreCode wasm_byte_code
                     * @property {cosmwasm.wasm.v1.IAccessConfig|null} [instantiate_permission] MsgStoreCode instantiate_permission
                     */
    
                    /**
                     * Constructs a new MsgStoreCode.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgStoreCode.
                     * @implements IMsgStoreCode
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgStoreCode=} [properties] Properties to set
                     */
                    function MsgStoreCode(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgStoreCode sender.
                     * @member {string} sender
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @instance
                     */
                    MsgStoreCode.prototype.sender = "";
    
                    /**
                     * MsgStoreCode wasm_byte_code.
                     * @member {Uint8Array} wasm_byte_code
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @instance
                     */
                    MsgStoreCode.prototype.wasm_byte_code = $util.newBuffer([]);
    
                    /**
                     * MsgStoreCode instantiate_permission.
                     * @member {cosmwasm.wasm.v1.IAccessConfig|null|undefined} instantiate_permission
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @instance
                     */
                    MsgStoreCode.prototype.instantiate_permission = null;
    
                    /**
                     * Encodes the specified MsgStoreCode message. Does not implicitly {@link cosmwasm.wasm.v1.MsgStoreCode.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgStoreCode} message MsgStoreCode message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgStoreCode.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                        if (message.wasm_byte_code != null && Object.hasOwnProperty.call(message, "wasm_byte_code"))
                            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.wasm_byte_code);
                        if (message.instantiate_permission != null && Object.hasOwnProperty.call(message, "instantiate_permission"))
                            $root.cosmwasm.wasm.v1.AccessConfig.encode(message.instantiate_permission, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgStoreCode message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgStoreCode.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgStoreCode} message MsgStoreCode message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgStoreCode.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgStoreCode message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgStoreCode} MsgStoreCode
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgStoreCode.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgStoreCode();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.sender = reader.string();
                                break;
                            case 2:
                                message.wasm_byte_code = reader.bytes();
                                break;
                            case 5:
                                message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgStoreCode message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgStoreCode} MsgStoreCode
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgStoreCode.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgStoreCode message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgStoreCode.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            if (!$util.isString(message.sender))
                                return "sender: string expected";
                        if (message.wasm_byte_code != null && message.hasOwnProperty("wasm_byte_code"))
                            if (!(message.wasm_byte_code && typeof message.wasm_byte_code.length === "number" || $util.isString(message.wasm_byte_code)))
                                return "wasm_byte_code: buffer expected";
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission")) {
                            var error = $root.cosmwasm.wasm.v1.AccessConfig.verify(message.instantiate_permission);
                            if (error)
                                return "instantiate_permission." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MsgStoreCode message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgStoreCode} MsgStoreCode
                     */
                    MsgStoreCode.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgStoreCode)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgStoreCode();
                        if (object.sender != null)
                            message.sender = String(object.sender);
                        if (object.wasm_byte_code != null)
                            if (typeof object.wasm_byte_code === "string")
                                $util.base64.decode(object.wasm_byte_code, message.wasm_byte_code = $util.newBuffer($util.base64.length(object.wasm_byte_code)), 0);
                            else if (object.wasm_byte_code.length)
                                message.wasm_byte_code = object.wasm_byte_code;
                        if (object.instantiate_permission != null) {
                            if (typeof object.instantiate_permission !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission: object expected");
                            message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.fromObject(object.instantiate_permission);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgStoreCode message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgStoreCode} message MsgStoreCode
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgStoreCode.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.sender = "";
                            if (options.bytes === String)
                                object.wasm_byte_code = "";
                            else {
                                object.wasm_byte_code = [];
                                if (options.bytes !== Array)
                                    object.wasm_byte_code = $util.newBuffer(object.wasm_byte_code);
                            }
                            object.instantiate_permission = null;
                        }
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            object.sender = message.sender;
                        if (message.wasm_byte_code != null && message.hasOwnProperty("wasm_byte_code"))
                            object.wasm_byte_code = options.bytes === String ? $util.base64.encode(message.wasm_byte_code, 0, message.wasm_byte_code.length) : options.bytes === Array ? Array.prototype.slice.call(message.wasm_byte_code) : message.wasm_byte_code;
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission"))
                            object.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.toObject(message.instantiate_permission, options);
                        return object;
                    };
    
                    /**
                     * Converts this MsgStoreCode to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgStoreCode
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgStoreCode.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgStoreCode;
                })();
    
                v1.MsgStoreCodeResponse = (function() {
    
                    /**
                     * Properties of a MsgStoreCodeResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgStoreCodeResponse
                     * @property {Long|null} [code_id] MsgStoreCodeResponse code_id
                     */
    
                    /**
                     * Constructs a new MsgStoreCodeResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgStoreCodeResponse.
                     * @implements IMsgStoreCodeResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgStoreCodeResponse=} [properties] Properties to set
                     */
                    function MsgStoreCodeResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgStoreCodeResponse code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @instance
                     */
                    MsgStoreCodeResponse.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * Encodes the specified MsgStoreCodeResponse message. Does not implicitly {@link cosmwasm.wasm.v1.MsgStoreCodeResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgStoreCodeResponse} message MsgStoreCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgStoreCodeResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.code_id);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgStoreCodeResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgStoreCodeResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgStoreCodeResponse} message MsgStoreCodeResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgStoreCodeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgStoreCodeResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgStoreCodeResponse} MsgStoreCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgStoreCodeResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgStoreCodeResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_id = reader.uint64();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgStoreCodeResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgStoreCodeResponse} MsgStoreCodeResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgStoreCodeResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgStoreCodeResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgStoreCodeResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgStoreCodeResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgStoreCodeResponse} MsgStoreCodeResponse
                     */
                    MsgStoreCodeResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgStoreCodeResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgStoreCodeResponse();
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgStoreCodeResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgStoreCodeResponse} message MsgStoreCodeResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgStoreCodeResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        return object;
                    };
    
                    /**
                     * Converts this MsgStoreCodeResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgStoreCodeResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgStoreCodeResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgStoreCodeResponse;
                })();
    
                v1.MsgInstantiateContract = (function() {
    
                    /**
                     * Properties of a MsgInstantiateContract.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgInstantiateContract
                     * @property {string|null} [sender] MsgInstantiateContract sender
                     * @property {string|null} [admin] MsgInstantiateContract admin
                     * @property {Long|null} [code_id] MsgInstantiateContract code_id
                     * @property {string|null} [label] MsgInstantiateContract label
                     * @property {Uint8Array|null} [msg] MsgInstantiateContract msg
                     * @property {Array.<cosmos.base.v1beta1.ICoin>|null} [funds] MsgInstantiateContract funds
                     */
    
                    /**
                     * Constructs a new MsgInstantiateContract.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgInstantiateContract.
                     * @implements IMsgInstantiateContract
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContract=} [properties] Properties to set
                     */
                    function MsgInstantiateContract(properties) {
                        this.funds = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgInstantiateContract sender.
                     * @member {string} sender
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @instance
                     */
                    MsgInstantiateContract.prototype.sender = "";
    
                    /**
                     * MsgInstantiateContract admin.
                     * @member {string} admin
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @instance
                     */
                    MsgInstantiateContract.prototype.admin = "";
    
                    /**
                     * MsgInstantiateContract code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @instance
                     */
                    MsgInstantiateContract.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * MsgInstantiateContract label.
                     * @member {string} label
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @instance
                     */
                    MsgInstantiateContract.prototype.label = "";
    
                    /**
                     * MsgInstantiateContract msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @instance
                     */
                    MsgInstantiateContract.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * MsgInstantiateContract funds.
                     * @member {Array.<cosmos.base.v1beta1.ICoin>} funds
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @instance
                     */
                    MsgInstantiateContract.prototype.funds = $util.emptyArray;
    
                    /**
                     * Encodes the specified MsgInstantiateContract message. Does not implicitly {@link cosmwasm.wasm.v1.MsgInstantiateContract.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContract} message MsgInstantiateContract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgInstantiateContract.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                        if (message.admin != null && Object.hasOwnProperty.call(message, "admin"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.admin);
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.code_id);
                        if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.label);
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.msg);
                        if (message.funds != null && message.funds.length)
                            for (var i = 0; i < message.funds.length; ++i)
                                $root.cosmos.base.v1beta1.Coin.encode(message.funds[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgInstantiateContract message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgInstantiateContract.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContract} message MsgInstantiateContract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgInstantiateContract.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgInstantiateContract message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgInstantiateContract} MsgInstantiateContract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgInstantiateContract.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgInstantiateContract();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.sender = reader.string();
                                break;
                            case 2:
                                message.admin = reader.string();
                                break;
                            case 3:
                                message.code_id = reader.uint64();
                                break;
                            case 4:
                                message.label = reader.string();
                                break;
                            case 5:
                                message.msg = reader.bytes();
                                break;
                            case 6:
                                if (!(message.funds && message.funds.length))
                                    message.funds = [];
                                message.funds.push($root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgInstantiateContract message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgInstantiateContract} MsgInstantiateContract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgInstantiateContract.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgInstantiateContract message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgInstantiateContract.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            if (!$util.isString(message.sender))
                                return "sender: string expected";
                        if (message.admin != null && message.hasOwnProperty("admin"))
                            if (!$util.isString(message.admin))
                                return "admin: string expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.label != null && message.hasOwnProperty("label"))
                            if (!$util.isString(message.label))
                                return "label: string expected";
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        if (message.funds != null && message.hasOwnProperty("funds")) {
                            if (!Array.isArray(message.funds))
                                return "funds: array expected";
                            for (var i = 0; i < message.funds.length; ++i) {
                                var error = $root.cosmos.base.v1beta1.Coin.verify(message.funds[i]);
                                if (error)
                                    return "funds." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MsgInstantiateContract message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgInstantiateContract} MsgInstantiateContract
                     */
                    MsgInstantiateContract.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgInstantiateContract)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgInstantiateContract();
                        if (object.sender != null)
                            message.sender = String(object.sender);
                        if (object.admin != null)
                            message.admin = String(object.admin);
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.label != null)
                            message.label = String(object.label);
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        if (object.funds) {
                            if (!Array.isArray(object.funds))
                                throw TypeError(".cosmwasm.wasm.v1.MsgInstantiateContract.funds: array expected");
                            message.funds = [];
                            for (var i = 0; i < object.funds.length; ++i) {
                                if (typeof object.funds[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.MsgInstantiateContract.funds: object expected");
                                message.funds[i] = $root.cosmos.base.v1beta1.Coin.fromObject(object.funds[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgInstantiateContract message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgInstantiateContract} message MsgInstantiateContract
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgInstantiateContract.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.funds = [];
                        if (options.defaults) {
                            object.sender = "";
                            object.admin = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.label = "";
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            object.sender = message.sender;
                        if (message.admin != null && message.hasOwnProperty("admin"))
                            object.admin = message.admin;
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.label != null && message.hasOwnProperty("label"))
                            object.label = message.label;
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        if (message.funds && message.funds.length) {
                            object.funds = [];
                            for (var j = 0; j < message.funds.length; ++j)
                                object.funds[j] = $root.cosmos.base.v1beta1.Coin.toObject(message.funds[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this MsgInstantiateContract to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContract
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgInstantiateContract.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgInstantiateContract;
                })();
    
                v1.MsgInstantiateContractResponse = (function() {
    
                    /**
                     * Properties of a MsgInstantiateContractResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgInstantiateContractResponse
                     * @property {string|null} [address] MsgInstantiateContractResponse address
                     * @property {Uint8Array|null} [data] MsgInstantiateContractResponse data
                     */
    
                    /**
                     * Constructs a new MsgInstantiateContractResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgInstantiateContractResponse.
                     * @implements IMsgInstantiateContractResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContractResponse=} [properties] Properties to set
                     */
                    function MsgInstantiateContractResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgInstantiateContractResponse address.
                     * @member {string} address
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @instance
                     */
                    MsgInstantiateContractResponse.prototype.address = "";
    
                    /**
                     * MsgInstantiateContractResponse data.
                     * @member {Uint8Array} data
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @instance
                     */
                    MsgInstantiateContractResponse.prototype.data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified MsgInstantiateContractResponse message. Does not implicitly {@link cosmwasm.wasm.v1.MsgInstantiateContractResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContractResponse} message MsgInstantiateContractResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgInstantiateContractResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.address);
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgInstantiateContractResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgInstantiateContractResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgInstantiateContractResponse} message MsgInstantiateContractResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgInstantiateContractResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgInstantiateContractResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgInstantiateContractResponse} MsgInstantiateContractResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgInstantiateContractResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgInstantiateContractResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.address = reader.string();
                                break;
                            case 2:
                                message.data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgInstantiateContractResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgInstantiateContractResponse} MsgInstantiateContractResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgInstantiateContractResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgInstantiateContractResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgInstantiateContractResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.address != null && message.hasOwnProperty("address"))
                            if (!$util.isString(message.address))
                                return "address: string expected";
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgInstantiateContractResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgInstantiateContractResponse} MsgInstantiateContractResponse
                     */
                    MsgInstantiateContractResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgInstantiateContractResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgInstantiateContractResponse();
                        if (object.address != null)
                            message.address = String(object.address);
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length)
                                message.data = object.data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgInstantiateContractResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgInstantiateContractResponse} message MsgInstantiateContractResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgInstantiateContractResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.address = "";
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                        }
                        if (message.address != null && message.hasOwnProperty("address"))
                            object.address = message.address;
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        return object;
                    };
    
                    /**
                     * Converts this MsgInstantiateContractResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgInstantiateContractResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgInstantiateContractResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgInstantiateContractResponse;
                })();
    
                v1.MsgExecuteContract = (function() {
    
                    /**
                     * Properties of a MsgExecuteContract.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgExecuteContract
                     * @property {string|null} [sender] MsgExecuteContract sender
                     * @property {string|null} [contract] MsgExecuteContract contract
                     * @property {Uint8Array|null} [msg] MsgExecuteContract msg
                     * @property {Array.<cosmos.base.v1beta1.ICoin>|null} [funds] MsgExecuteContract funds
                     */
    
                    /**
                     * Constructs a new MsgExecuteContract.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgExecuteContract.
                     * @implements IMsgExecuteContract
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContract=} [properties] Properties to set
                     */
                    function MsgExecuteContract(properties) {
                        this.funds = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgExecuteContract sender.
                     * @member {string} sender
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @instance
                     */
                    MsgExecuteContract.prototype.sender = "";
    
                    /**
                     * MsgExecuteContract contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @instance
                     */
                    MsgExecuteContract.prototype.contract = "";
    
                    /**
                     * MsgExecuteContract msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @instance
                     */
                    MsgExecuteContract.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * MsgExecuteContract funds.
                     * @member {Array.<cosmos.base.v1beta1.ICoin>} funds
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @instance
                     */
                    MsgExecuteContract.prototype.funds = $util.emptyArray;
    
                    /**
                     * Encodes the specified MsgExecuteContract message. Does not implicitly {@link cosmwasm.wasm.v1.MsgExecuteContract.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContract} message MsgExecuteContract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgExecuteContract.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.contract);
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.msg);
                        if (message.funds != null && message.funds.length)
                            for (var i = 0; i < message.funds.length; ++i)
                                $root.cosmos.base.v1beta1.Coin.encode(message.funds[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgExecuteContract message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgExecuteContract.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContract} message MsgExecuteContract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgExecuteContract.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgExecuteContract message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgExecuteContract} MsgExecuteContract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgExecuteContract.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgExecuteContract();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.sender = reader.string();
                                break;
                            case 2:
                                message.contract = reader.string();
                                break;
                            case 3:
                                message.msg = reader.bytes();
                                break;
                            case 5:
                                if (!(message.funds && message.funds.length))
                                    message.funds = [];
                                message.funds.push($root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgExecuteContract message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgExecuteContract} MsgExecuteContract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgExecuteContract.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgExecuteContract message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgExecuteContract.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            if (!$util.isString(message.sender))
                                return "sender: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        if (message.funds != null && message.hasOwnProperty("funds")) {
                            if (!Array.isArray(message.funds))
                                return "funds: array expected";
                            for (var i = 0; i < message.funds.length; ++i) {
                                var error = $root.cosmos.base.v1beta1.Coin.verify(message.funds[i]);
                                if (error)
                                    return "funds." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MsgExecuteContract message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgExecuteContract} MsgExecuteContract
                     */
                    MsgExecuteContract.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgExecuteContract)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgExecuteContract();
                        if (object.sender != null)
                            message.sender = String(object.sender);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        if (object.funds) {
                            if (!Array.isArray(object.funds))
                                throw TypeError(".cosmwasm.wasm.v1.MsgExecuteContract.funds: array expected");
                            message.funds = [];
                            for (var i = 0; i < object.funds.length; ++i) {
                                if (typeof object.funds[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.MsgExecuteContract.funds: object expected");
                                message.funds[i] = $root.cosmos.base.v1beta1.Coin.fromObject(object.funds[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgExecuteContract message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgExecuteContract} message MsgExecuteContract
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgExecuteContract.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.funds = [];
                        if (options.defaults) {
                            object.sender = "";
                            object.contract = "";
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            object.sender = message.sender;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        if (message.funds && message.funds.length) {
                            object.funds = [];
                            for (var j = 0; j < message.funds.length; ++j)
                                object.funds[j] = $root.cosmos.base.v1beta1.Coin.toObject(message.funds[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this MsgExecuteContract to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContract
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgExecuteContract.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgExecuteContract;
                })();
    
                v1.MsgExecuteContractResponse = (function() {
    
                    /**
                     * Properties of a MsgExecuteContractResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgExecuteContractResponse
                     * @property {Uint8Array|null} [data] MsgExecuteContractResponse data
                     */
    
                    /**
                     * Constructs a new MsgExecuteContractResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgExecuteContractResponse.
                     * @implements IMsgExecuteContractResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContractResponse=} [properties] Properties to set
                     */
                    function MsgExecuteContractResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgExecuteContractResponse data.
                     * @member {Uint8Array} data
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @instance
                     */
                    MsgExecuteContractResponse.prototype.data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified MsgExecuteContractResponse message. Does not implicitly {@link cosmwasm.wasm.v1.MsgExecuteContractResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContractResponse} message MsgExecuteContractResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgExecuteContractResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgExecuteContractResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgExecuteContractResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgExecuteContractResponse} message MsgExecuteContractResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgExecuteContractResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgExecuteContractResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgExecuteContractResponse} MsgExecuteContractResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgExecuteContractResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgExecuteContractResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgExecuteContractResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgExecuteContractResponse} MsgExecuteContractResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgExecuteContractResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgExecuteContractResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgExecuteContractResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgExecuteContractResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgExecuteContractResponse} MsgExecuteContractResponse
                     */
                    MsgExecuteContractResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgExecuteContractResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgExecuteContractResponse();
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length)
                                message.data = object.data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgExecuteContractResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgExecuteContractResponse} message MsgExecuteContractResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgExecuteContractResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        return object;
                    };
    
                    /**
                     * Converts this MsgExecuteContractResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgExecuteContractResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgExecuteContractResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgExecuteContractResponse;
                })();
    
                v1.MsgMigrateContract = (function() {
    
                    /**
                     * Properties of a MsgMigrateContract.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgMigrateContract
                     * @property {string|null} [sender] MsgMigrateContract sender
                     * @property {string|null} [contract] MsgMigrateContract contract
                     * @property {Long|null} [code_id] MsgMigrateContract code_id
                     * @property {Uint8Array|null} [msg] MsgMigrateContract msg
                     */
    
                    /**
                     * Constructs a new MsgMigrateContract.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgMigrateContract.
                     * @implements IMsgMigrateContract
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContract=} [properties] Properties to set
                     */
                    function MsgMigrateContract(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgMigrateContract sender.
                     * @member {string} sender
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @instance
                     */
                    MsgMigrateContract.prototype.sender = "";
    
                    /**
                     * MsgMigrateContract contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @instance
                     */
                    MsgMigrateContract.prototype.contract = "";
    
                    /**
                     * MsgMigrateContract code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @instance
                     */
                    MsgMigrateContract.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * MsgMigrateContract msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @instance
                     */
                    MsgMigrateContract.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified MsgMigrateContract message. Does not implicitly {@link cosmwasm.wasm.v1.MsgMigrateContract.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContract} message MsgMigrateContract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgMigrateContract.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.contract);
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.code_id);
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.msg);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgMigrateContract message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgMigrateContract.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContract} message MsgMigrateContract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgMigrateContract.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgMigrateContract message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgMigrateContract} MsgMigrateContract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgMigrateContract.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgMigrateContract();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.sender = reader.string();
                                break;
                            case 2:
                                message.contract = reader.string();
                                break;
                            case 3:
                                message.code_id = reader.uint64();
                                break;
                            case 4:
                                message.msg = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgMigrateContract message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgMigrateContract} MsgMigrateContract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgMigrateContract.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgMigrateContract message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgMigrateContract.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            if (!$util.isString(message.sender))
                                return "sender: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgMigrateContract message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgMigrateContract} MsgMigrateContract
                     */
                    MsgMigrateContract.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgMigrateContract)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgMigrateContract();
                        if (object.sender != null)
                            message.sender = String(object.sender);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgMigrateContract message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgMigrateContract} message MsgMigrateContract
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgMigrateContract.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.sender = "";
                            object.contract = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            object.sender = message.sender;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        return object;
                    };
    
                    /**
                     * Converts this MsgMigrateContract to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContract
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgMigrateContract.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgMigrateContract;
                })();
    
                v1.MsgMigrateContractResponse = (function() {
    
                    /**
                     * Properties of a MsgMigrateContractResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgMigrateContractResponse
                     * @property {Uint8Array|null} [data] MsgMigrateContractResponse data
                     */
    
                    /**
                     * Constructs a new MsgMigrateContractResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgMigrateContractResponse.
                     * @implements IMsgMigrateContractResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContractResponse=} [properties] Properties to set
                     */
                    function MsgMigrateContractResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgMigrateContractResponse data.
                     * @member {Uint8Array} data
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @instance
                     */
                    MsgMigrateContractResponse.prototype.data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified MsgMigrateContractResponse message. Does not implicitly {@link cosmwasm.wasm.v1.MsgMigrateContractResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContractResponse} message MsgMigrateContractResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgMigrateContractResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgMigrateContractResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgMigrateContractResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgMigrateContractResponse} message MsgMigrateContractResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgMigrateContractResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgMigrateContractResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgMigrateContractResponse} MsgMigrateContractResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgMigrateContractResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgMigrateContractResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgMigrateContractResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgMigrateContractResponse} MsgMigrateContractResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgMigrateContractResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgMigrateContractResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgMigrateContractResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgMigrateContractResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgMigrateContractResponse} MsgMigrateContractResponse
                     */
                    MsgMigrateContractResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgMigrateContractResponse)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgMigrateContractResponse();
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length)
                                message.data = object.data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgMigrateContractResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgMigrateContractResponse} message MsgMigrateContractResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgMigrateContractResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        return object;
                    };
    
                    /**
                     * Converts this MsgMigrateContractResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgMigrateContractResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgMigrateContractResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgMigrateContractResponse;
                })();
    
                v1.MsgUpdateAdmin = (function() {
    
                    /**
                     * Properties of a MsgUpdateAdmin.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgUpdateAdmin
                     * @property {string|null} [sender] MsgUpdateAdmin sender
                     * @property {string|null} [new_admin] MsgUpdateAdmin new_admin
                     * @property {string|null} [contract] MsgUpdateAdmin contract
                     */
    
                    /**
                     * Constructs a new MsgUpdateAdmin.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgUpdateAdmin.
                     * @implements IMsgUpdateAdmin
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdmin=} [properties] Properties to set
                     */
                    function MsgUpdateAdmin(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgUpdateAdmin sender.
                     * @member {string} sender
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @instance
                     */
                    MsgUpdateAdmin.prototype.sender = "";
    
                    /**
                     * MsgUpdateAdmin new_admin.
                     * @member {string} new_admin
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @instance
                     */
                    MsgUpdateAdmin.prototype.new_admin = "";
    
                    /**
                     * MsgUpdateAdmin contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @instance
                     */
                    MsgUpdateAdmin.prototype.contract = "";
    
                    /**
                     * Encodes the specified MsgUpdateAdmin message. Does not implicitly {@link cosmwasm.wasm.v1.MsgUpdateAdmin.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdmin} message MsgUpdateAdmin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgUpdateAdmin.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                        if (message.new_admin != null && Object.hasOwnProperty.call(message, "new_admin"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.new_admin);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.contract);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgUpdateAdmin message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgUpdateAdmin.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdmin} message MsgUpdateAdmin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgUpdateAdmin.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgUpdateAdmin message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgUpdateAdmin} MsgUpdateAdmin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgUpdateAdmin.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgUpdateAdmin();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.sender = reader.string();
                                break;
                            case 2:
                                message.new_admin = reader.string();
                                break;
                            case 3:
                                message.contract = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgUpdateAdmin message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgUpdateAdmin} MsgUpdateAdmin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgUpdateAdmin.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgUpdateAdmin message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgUpdateAdmin.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            if (!$util.isString(message.sender))
                                return "sender: string expected";
                        if (message.new_admin != null && message.hasOwnProperty("new_admin"))
                            if (!$util.isString(message.new_admin))
                                return "new_admin: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgUpdateAdmin message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgUpdateAdmin} MsgUpdateAdmin
                     */
                    MsgUpdateAdmin.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgUpdateAdmin)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgUpdateAdmin();
                        if (object.sender != null)
                            message.sender = String(object.sender);
                        if (object.new_admin != null)
                            message.new_admin = String(object.new_admin);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgUpdateAdmin message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgUpdateAdmin} message MsgUpdateAdmin
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgUpdateAdmin.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.sender = "";
                            object.new_admin = "";
                            object.contract = "";
                        }
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            object.sender = message.sender;
                        if (message.new_admin != null && message.hasOwnProperty("new_admin"))
                            object.new_admin = message.new_admin;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        return object;
                    };
    
                    /**
                     * Converts this MsgUpdateAdmin to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdmin
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgUpdateAdmin.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgUpdateAdmin;
                })();
    
                v1.MsgUpdateAdminResponse = (function() {
    
                    /**
                     * Properties of a MsgUpdateAdminResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgUpdateAdminResponse
                     */
    
                    /**
                     * Constructs a new MsgUpdateAdminResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgUpdateAdminResponse.
                     * @implements IMsgUpdateAdminResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdminResponse=} [properties] Properties to set
                     */
                    function MsgUpdateAdminResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Encodes the specified MsgUpdateAdminResponse message. Does not implicitly {@link cosmwasm.wasm.v1.MsgUpdateAdminResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdminResponse} message MsgUpdateAdminResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgUpdateAdminResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgUpdateAdminResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgUpdateAdminResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgUpdateAdminResponse} message MsgUpdateAdminResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgUpdateAdminResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgUpdateAdminResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgUpdateAdminResponse} MsgUpdateAdminResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgUpdateAdminResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgUpdateAdminResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgUpdateAdminResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgUpdateAdminResponse} MsgUpdateAdminResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgUpdateAdminResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgUpdateAdminResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgUpdateAdminResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgUpdateAdminResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgUpdateAdminResponse} MsgUpdateAdminResponse
                     */
                    MsgUpdateAdminResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgUpdateAdminResponse)
                            return object;
                        return new $root.cosmwasm.wasm.v1.MsgUpdateAdminResponse();
                    };
    
                    /**
                     * Creates a plain object from a MsgUpdateAdminResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgUpdateAdminResponse} message MsgUpdateAdminResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgUpdateAdminResponse.toObject = function toObject() {
                        return {};
                    };
    
                    /**
                     * Converts this MsgUpdateAdminResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgUpdateAdminResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgUpdateAdminResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgUpdateAdminResponse;
                })();
    
                v1.MsgClearAdmin = (function() {
    
                    /**
                     * Properties of a MsgClearAdmin.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgClearAdmin
                     * @property {string|null} [sender] MsgClearAdmin sender
                     * @property {string|null} [contract] MsgClearAdmin contract
                     */
    
                    /**
                     * Constructs a new MsgClearAdmin.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgClearAdmin.
                     * @implements IMsgClearAdmin
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgClearAdmin=} [properties] Properties to set
                     */
                    function MsgClearAdmin(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgClearAdmin sender.
                     * @member {string} sender
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @instance
                     */
                    MsgClearAdmin.prototype.sender = "";
    
                    /**
                     * MsgClearAdmin contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @instance
                     */
                    MsgClearAdmin.prototype.contract = "";
    
                    /**
                     * Encodes the specified MsgClearAdmin message. Does not implicitly {@link cosmwasm.wasm.v1.MsgClearAdmin.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgClearAdmin} message MsgClearAdmin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgClearAdmin.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.sender != null && Object.hasOwnProperty.call(message, "sender"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.sender);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.contract);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgClearAdmin message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgClearAdmin.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgClearAdmin} message MsgClearAdmin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgClearAdmin.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgClearAdmin message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgClearAdmin} MsgClearAdmin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgClearAdmin.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgClearAdmin();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.sender = reader.string();
                                break;
                            case 3:
                                message.contract = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgClearAdmin message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgClearAdmin} MsgClearAdmin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgClearAdmin.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgClearAdmin message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgClearAdmin.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            if (!$util.isString(message.sender))
                                return "sender: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgClearAdmin message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgClearAdmin} MsgClearAdmin
                     */
                    MsgClearAdmin.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgClearAdmin)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgClearAdmin();
                        if (object.sender != null)
                            message.sender = String(object.sender);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgClearAdmin message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgClearAdmin} message MsgClearAdmin
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgClearAdmin.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.sender = "";
                            object.contract = "";
                        }
                        if (message.sender != null && message.hasOwnProperty("sender"))
                            object.sender = message.sender;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        return object;
                    };
    
                    /**
                     * Converts this MsgClearAdmin to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgClearAdmin
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgClearAdmin.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgClearAdmin;
                })();
    
                v1.MsgClearAdminResponse = (function() {
    
                    /**
                     * Properties of a MsgClearAdminResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgClearAdminResponse
                     */
    
                    /**
                     * Constructs a new MsgClearAdminResponse.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgClearAdminResponse.
                     * @implements IMsgClearAdminResponse
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgClearAdminResponse=} [properties] Properties to set
                     */
                    function MsgClearAdminResponse(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Encodes the specified MsgClearAdminResponse message. Does not implicitly {@link cosmwasm.wasm.v1.MsgClearAdminResponse.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgClearAdminResponse} message MsgClearAdminResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgClearAdminResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgClearAdminResponse message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgClearAdminResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgClearAdminResponse} message MsgClearAdminResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgClearAdminResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgClearAdminResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgClearAdminResponse} MsgClearAdminResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgClearAdminResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgClearAdminResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgClearAdminResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgClearAdminResponse} MsgClearAdminResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgClearAdminResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgClearAdminResponse message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgClearAdminResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgClearAdminResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgClearAdminResponse} MsgClearAdminResponse
                     */
                    MsgClearAdminResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgClearAdminResponse)
                            return object;
                        return new $root.cosmwasm.wasm.v1.MsgClearAdminResponse();
                    };
    
                    /**
                     * Creates a plain object from a MsgClearAdminResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgClearAdminResponse} message MsgClearAdminResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgClearAdminResponse.toObject = function toObject() {
                        return {};
                    };
    
                    /**
                     * Converts this MsgClearAdminResponse to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgClearAdminResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgClearAdminResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgClearAdminResponse;
                })();
    
                v1.GenesisState = (function() {
    
                    /**
                     * Properties of a GenesisState.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IGenesisState
                     * @property {cosmwasm.wasm.v1.IParams|null} [params] GenesisState params
                     * @property {Array.<cosmwasm.wasm.v1.ICode>|null} [codes] GenesisState codes
                     * @property {Array.<cosmwasm.wasm.v1.IContract>|null} [contracts] GenesisState contracts
                     * @property {Array.<cosmwasm.wasm.v1.ISequence>|null} [sequences] GenesisState sequences
                     * @property {Array.<cosmwasm.wasm.v1.GenesisState.IGenMsgs>|null} [gen_msgs] GenesisState gen_msgs
                     */
    
                    /**
                     * Constructs a new GenesisState.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a GenesisState.
                     * @implements IGenesisState
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IGenesisState=} [properties] Properties to set
                     */
                    function GenesisState(properties) {
                        this.codes = [];
                        this.contracts = [];
                        this.sequences = [];
                        this.gen_msgs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GenesisState params.
                     * @member {cosmwasm.wasm.v1.IParams|null|undefined} params
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @instance
                     */
                    GenesisState.prototype.params = null;
    
                    /**
                     * GenesisState codes.
                     * @member {Array.<cosmwasm.wasm.v1.ICode>} codes
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @instance
                     */
                    GenesisState.prototype.codes = $util.emptyArray;
    
                    /**
                     * GenesisState contracts.
                     * @member {Array.<cosmwasm.wasm.v1.IContract>} contracts
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @instance
                     */
                    GenesisState.prototype.contracts = $util.emptyArray;
    
                    /**
                     * GenesisState sequences.
                     * @member {Array.<cosmwasm.wasm.v1.ISequence>} sequences
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @instance
                     */
                    GenesisState.prototype.sequences = $util.emptyArray;
    
                    /**
                     * GenesisState gen_msgs.
                     * @member {Array.<cosmwasm.wasm.v1.GenesisState.IGenMsgs>} gen_msgs
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @instance
                     */
                    GenesisState.prototype.gen_msgs = $util.emptyArray;
    
                    /**
                     * Encodes the specified GenesisState message. Does not implicitly {@link cosmwasm.wasm.v1.GenesisState.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @static
                     * @param {cosmwasm.wasm.v1.IGenesisState} message GenesisState message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GenesisState.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.params != null && Object.hasOwnProperty.call(message, "params"))
                            $root.cosmwasm.wasm.v1.Params.encode(message.params, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.codes != null && message.codes.length)
                            for (var i = 0; i < message.codes.length; ++i)
                                $root.cosmwasm.wasm.v1.Code.encode(message.codes[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.contracts != null && message.contracts.length)
                            for (var i = 0; i < message.contracts.length; ++i)
                                $root.cosmwasm.wasm.v1.Contract.encode(message.contracts[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.sequences != null && message.sequences.length)
                            for (var i = 0; i < message.sequences.length; ++i)
                                $root.cosmwasm.wasm.v1.Sequence.encode(message.sequences[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.gen_msgs != null && message.gen_msgs.length)
                            for (var i = 0; i < message.gen_msgs.length; ++i)
                                $root.cosmwasm.wasm.v1.GenesisState.GenMsgs.encode(message.gen_msgs[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GenesisState message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.GenesisState.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @static
                     * @param {cosmwasm.wasm.v1.IGenesisState} message GenesisState message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GenesisState.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GenesisState message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.GenesisState} GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GenesisState.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.GenesisState();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.params = $root.cosmwasm.wasm.v1.Params.decode(reader, reader.uint32());
                                break;
                            case 2:
                                if (!(message.codes && message.codes.length))
                                    message.codes = [];
                                message.codes.push($root.cosmwasm.wasm.v1.Code.decode(reader, reader.uint32()));
                                break;
                            case 3:
                                if (!(message.contracts && message.contracts.length))
                                    message.contracts = [];
                                message.contracts.push($root.cosmwasm.wasm.v1.Contract.decode(reader, reader.uint32()));
                                break;
                            case 4:
                                if (!(message.sequences && message.sequences.length))
                                    message.sequences = [];
                                message.sequences.push($root.cosmwasm.wasm.v1.Sequence.decode(reader, reader.uint32()));
                                break;
                            case 5:
                                if (!(message.gen_msgs && message.gen_msgs.length))
                                    message.gen_msgs = [];
                                message.gen_msgs.push($root.cosmwasm.wasm.v1.GenesisState.GenMsgs.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GenesisState message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.GenesisState} GenesisState
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GenesisState.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GenesisState message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GenesisState.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.params != null && message.hasOwnProperty("params")) {
                            var error = $root.cosmwasm.wasm.v1.Params.verify(message.params);
                            if (error)
                                return "params." + error;
                        }
                        if (message.codes != null && message.hasOwnProperty("codes")) {
                            if (!Array.isArray(message.codes))
                                return "codes: array expected";
                            for (var i = 0; i < message.codes.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.Code.verify(message.codes[i]);
                                if (error)
                                    return "codes." + error;
                            }
                        }
                        if (message.contracts != null && message.hasOwnProperty("contracts")) {
                            if (!Array.isArray(message.contracts))
                                return "contracts: array expected";
                            for (var i = 0; i < message.contracts.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.Contract.verify(message.contracts[i]);
                                if (error)
                                    return "contracts." + error;
                            }
                        }
                        if (message.sequences != null && message.hasOwnProperty("sequences")) {
                            if (!Array.isArray(message.sequences))
                                return "sequences: array expected";
                            for (var i = 0; i < message.sequences.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.Sequence.verify(message.sequences[i]);
                                if (error)
                                    return "sequences." + error;
                            }
                        }
                        if (message.gen_msgs != null && message.hasOwnProperty("gen_msgs")) {
                            if (!Array.isArray(message.gen_msgs))
                                return "gen_msgs: array expected";
                            for (var i = 0; i < message.gen_msgs.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.GenesisState.GenMsgs.verify(message.gen_msgs[i]);
                                if (error)
                                    return "gen_msgs." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GenesisState message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.GenesisState} GenesisState
                     */
                    GenesisState.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.GenesisState)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.GenesisState();
                        if (object.params != null) {
                            if (typeof object.params !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.GenesisState.params: object expected");
                            message.params = $root.cosmwasm.wasm.v1.Params.fromObject(object.params);
                        }
                        if (object.codes) {
                            if (!Array.isArray(object.codes))
                                throw TypeError(".cosmwasm.wasm.v1.GenesisState.codes: array expected");
                            message.codes = [];
                            for (var i = 0; i < object.codes.length; ++i) {
                                if (typeof object.codes[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.GenesisState.codes: object expected");
                                message.codes[i] = $root.cosmwasm.wasm.v1.Code.fromObject(object.codes[i]);
                            }
                        }
                        if (object.contracts) {
                            if (!Array.isArray(object.contracts))
                                throw TypeError(".cosmwasm.wasm.v1.GenesisState.contracts: array expected");
                            message.contracts = [];
                            for (var i = 0; i < object.contracts.length; ++i) {
                                if (typeof object.contracts[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.GenesisState.contracts: object expected");
                                message.contracts[i] = $root.cosmwasm.wasm.v1.Contract.fromObject(object.contracts[i]);
                            }
                        }
                        if (object.sequences) {
                            if (!Array.isArray(object.sequences))
                                throw TypeError(".cosmwasm.wasm.v1.GenesisState.sequences: array expected");
                            message.sequences = [];
                            for (var i = 0; i < object.sequences.length; ++i) {
                                if (typeof object.sequences[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.GenesisState.sequences: object expected");
                                message.sequences[i] = $root.cosmwasm.wasm.v1.Sequence.fromObject(object.sequences[i]);
                            }
                        }
                        if (object.gen_msgs) {
                            if (!Array.isArray(object.gen_msgs))
                                throw TypeError(".cosmwasm.wasm.v1.GenesisState.gen_msgs: array expected");
                            message.gen_msgs = [];
                            for (var i = 0; i < object.gen_msgs.length; ++i) {
                                if (typeof object.gen_msgs[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.GenesisState.gen_msgs: object expected");
                                message.gen_msgs[i] = $root.cosmwasm.wasm.v1.GenesisState.GenMsgs.fromObject(object.gen_msgs[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GenesisState message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @static
                     * @param {cosmwasm.wasm.v1.GenesisState} message GenesisState
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GenesisState.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.codes = [];
                            object.contracts = [];
                            object.sequences = [];
                            object.gen_msgs = [];
                        }
                        if (options.defaults)
                            object.params = null;
                        if (message.params != null && message.hasOwnProperty("params"))
                            object.params = $root.cosmwasm.wasm.v1.Params.toObject(message.params, options);
                        if (message.codes && message.codes.length) {
                            object.codes = [];
                            for (var j = 0; j < message.codes.length; ++j)
                                object.codes[j] = $root.cosmwasm.wasm.v1.Code.toObject(message.codes[j], options);
                        }
                        if (message.contracts && message.contracts.length) {
                            object.contracts = [];
                            for (var j = 0; j < message.contracts.length; ++j)
                                object.contracts[j] = $root.cosmwasm.wasm.v1.Contract.toObject(message.contracts[j], options);
                        }
                        if (message.sequences && message.sequences.length) {
                            object.sequences = [];
                            for (var j = 0; j < message.sequences.length; ++j)
                                object.sequences[j] = $root.cosmwasm.wasm.v1.Sequence.toObject(message.sequences[j], options);
                        }
                        if (message.gen_msgs && message.gen_msgs.length) {
                            object.gen_msgs = [];
                            for (var j = 0; j < message.gen_msgs.length; ++j)
                                object.gen_msgs[j] = $root.cosmwasm.wasm.v1.GenesisState.GenMsgs.toObject(message.gen_msgs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this GenesisState to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.GenesisState
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GenesisState.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    GenesisState.GenMsgs = (function() {
    
                        /**
                         * Properties of a GenMsgs.
                         * @memberof cosmwasm.wasm.v1.GenesisState
                         * @interface IGenMsgs
                         * @property {cosmwasm.wasm.v1.IMsgStoreCode|null} [store_code] GenMsgs store_code
                         * @property {cosmwasm.wasm.v1.IMsgInstantiateContract|null} [instantiate_contract] GenMsgs instantiate_contract
                         * @property {cosmwasm.wasm.v1.IMsgExecuteContract|null} [execute_contract] GenMsgs execute_contract
                         */
    
                        /**
                         * Constructs a new GenMsgs.
                         * @memberof cosmwasm.wasm.v1.GenesisState
                         * @classdesc Represents a GenMsgs.
                         * @implements IGenMsgs
                         * @constructor
                         * @param {cosmwasm.wasm.v1.GenesisState.IGenMsgs=} [properties] Properties to set
                         */
                        function GenMsgs(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenMsgs store_code.
                         * @member {cosmwasm.wasm.v1.IMsgStoreCode|null|undefined} store_code
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @instance
                         */
                        GenMsgs.prototype.store_code = null;
    
                        /**
                         * GenMsgs instantiate_contract.
                         * @member {cosmwasm.wasm.v1.IMsgInstantiateContract|null|undefined} instantiate_contract
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @instance
                         */
                        GenMsgs.prototype.instantiate_contract = null;
    
                        /**
                         * GenMsgs execute_contract.
                         * @member {cosmwasm.wasm.v1.IMsgExecuteContract|null|undefined} execute_contract
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @instance
                         */
                        GenMsgs.prototype.execute_contract = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GenMsgs sum.
                         * @member {"store_code"|"instantiate_contract"|"execute_contract"|undefined} sum
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @instance
                         */
                        Object.defineProperty(GenMsgs.prototype, "sum", {
                            get: $util.oneOfGetter($oneOfFields = ["store_code", "instantiate_contract", "execute_contract"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Encodes the specified GenMsgs message. Does not implicitly {@link cosmwasm.wasm.v1.GenesisState.GenMsgs.verify|verify} messages.
                         * @function encode
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @static
                         * @param {cosmwasm.wasm.v1.GenesisState.IGenMsgs} message GenMsgs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenMsgs.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.store_code != null && Object.hasOwnProperty.call(message, "store_code"))
                                $root.cosmwasm.wasm.v1.MsgStoreCode.encode(message.store_code, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.instantiate_contract != null && Object.hasOwnProperty.call(message, "instantiate_contract"))
                                $root.cosmwasm.wasm.v1.MsgInstantiateContract.encode(message.instantiate_contract, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.execute_contract != null && Object.hasOwnProperty.call(message, "execute_contract"))
                                $root.cosmwasm.wasm.v1.MsgExecuteContract.encode(message.execute_contract, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenMsgs message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.GenesisState.GenMsgs.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @static
                         * @param {cosmwasm.wasm.v1.GenesisState.IGenMsgs} message GenMsgs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenMsgs.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenMsgs message from the specified reader or buffer.
                         * @function decode
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {cosmwasm.wasm.v1.GenesisState.GenMsgs} GenMsgs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenMsgs.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.GenesisState.GenMsgs();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.store_code = $root.cosmwasm.wasm.v1.MsgStoreCode.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.instantiate_contract = $root.cosmwasm.wasm.v1.MsgInstantiateContract.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.execute_contract = $root.cosmwasm.wasm.v1.MsgExecuteContract.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenMsgs message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {cosmwasm.wasm.v1.GenesisState.GenMsgs} GenMsgs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenMsgs.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenMsgs message.
                         * @function verify
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenMsgs.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.store_code != null && message.hasOwnProperty("store_code")) {
                                properties.sum = 1;
                                {
                                    var error = $root.cosmwasm.wasm.v1.MsgStoreCode.verify(message.store_code);
                                    if (error)
                                        return "store_code." + error;
                                }
                            }
                            if (message.instantiate_contract != null && message.hasOwnProperty("instantiate_contract")) {
                                if (properties.sum === 1)
                                    return "sum: multiple values";
                                properties.sum = 1;
                                {
                                    var error = $root.cosmwasm.wasm.v1.MsgInstantiateContract.verify(message.instantiate_contract);
                                    if (error)
                                        return "instantiate_contract." + error;
                                }
                            }
                            if (message.execute_contract != null && message.hasOwnProperty("execute_contract")) {
                                if (properties.sum === 1)
                                    return "sum: multiple values";
                                properties.sum = 1;
                                {
                                    var error = $root.cosmwasm.wasm.v1.MsgExecuteContract.verify(message.execute_contract);
                                    if (error)
                                        return "execute_contract." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenMsgs message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {cosmwasm.wasm.v1.GenesisState.GenMsgs} GenMsgs
                         */
                        GenMsgs.fromObject = function fromObject(object) {
                            if (object instanceof $root.cosmwasm.wasm.v1.GenesisState.GenMsgs)
                                return object;
                            var message = new $root.cosmwasm.wasm.v1.GenesisState.GenMsgs();
                            if (object.store_code != null) {
                                if (typeof object.store_code !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.GenesisState.GenMsgs.store_code: object expected");
                                message.store_code = $root.cosmwasm.wasm.v1.MsgStoreCode.fromObject(object.store_code);
                            }
                            if (object.instantiate_contract != null) {
                                if (typeof object.instantiate_contract !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.GenesisState.GenMsgs.instantiate_contract: object expected");
                                message.instantiate_contract = $root.cosmwasm.wasm.v1.MsgInstantiateContract.fromObject(object.instantiate_contract);
                            }
                            if (object.execute_contract != null) {
                                if (typeof object.execute_contract !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.GenesisState.GenMsgs.execute_contract: object expected");
                                message.execute_contract = $root.cosmwasm.wasm.v1.MsgExecuteContract.fromObject(object.execute_contract);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenMsgs message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @static
                         * @param {cosmwasm.wasm.v1.GenesisState.GenMsgs} message GenMsgs
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenMsgs.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.store_code != null && message.hasOwnProperty("store_code")) {
                                object.store_code = $root.cosmwasm.wasm.v1.MsgStoreCode.toObject(message.store_code, options);
                                if (options.oneofs)
                                    object.sum = "store_code";
                            }
                            if (message.instantiate_contract != null && message.hasOwnProperty("instantiate_contract")) {
                                object.instantiate_contract = $root.cosmwasm.wasm.v1.MsgInstantiateContract.toObject(message.instantiate_contract, options);
                                if (options.oneofs)
                                    object.sum = "instantiate_contract";
                            }
                            if (message.execute_contract != null && message.hasOwnProperty("execute_contract")) {
                                object.execute_contract = $root.cosmwasm.wasm.v1.MsgExecuteContract.toObject(message.execute_contract, options);
                                if (options.oneofs)
                                    object.sum = "execute_contract";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenMsgs to JSON.
                         * @function toJSON
                         * @memberof cosmwasm.wasm.v1.GenesisState.GenMsgs
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenMsgs.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenMsgs;
                    })();
    
                    return GenesisState;
                })();
    
                v1.Code = (function() {
    
                    /**
                     * Properties of a Code.
                     * @memberof cosmwasm.wasm.v1
                     * @interface ICode
                     * @property {Long|null} [code_id] Code code_id
                     * @property {cosmwasm.wasm.v1.ICodeInfo|null} [code_info] Code code_info
                     * @property {Uint8Array|null} [code_bytes] Code code_bytes
                     * @property {boolean|null} [pinned] Code pinned
                     */
    
                    /**
                     * Constructs a new Code.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a Code.
                     * @implements ICode
                     * @constructor
                     * @param {cosmwasm.wasm.v1.ICode=} [properties] Properties to set
                     */
                    function Code(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Code code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.Code
                     * @instance
                     */
                    Code.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * Code code_info.
                     * @member {cosmwasm.wasm.v1.ICodeInfo|null|undefined} code_info
                     * @memberof cosmwasm.wasm.v1.Code
                     * @instance
                     */
                    Code.prototype.code_info = null;
    
                    /**
                     * Code code_bytes.
                     * @member {Uint8Array} code_bytes
                     * @memberof cosmwasm.wasm.v1.Code
                     * @instance
                     */
                    Code.prototype.code_bytes = $util.newBuffer([]);
    
                    /**
                     * Code pinned.
                     * @member {boolean} pinned
                     * @memberof cosmwasm.wasm.v1.Code
                     * @instance
                     */
                    Code.prototype.pinned = false;
    
                    /**
                     * Encodes the specified Code message. Does not implicitly {@link cosmwasm.wasm.v1.Code.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.Code
                     * @static
                     * @param {cosmwasm.wasm.v1.ICode} message Code message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Code.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.code_id);
                        if (message.code_info != null && Object.hasOwnProperty.call(message, "code_info"))
                            $root.cosmwasm.wasm.v1.CodeInfo.encode(message.code_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.code_bytes != null && Object.hasOwnProperty.call(message, "code_bytes"))
                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.code_bytes);
                        if (message.pinned != null && Object.hasOwnProperty.call(message, "pinned"))
                            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.pinned);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Code message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.Code.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.Code
                     * @static
                     * @param {cosmwasm.wasm.v1.ICode} message Code message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Code.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Code message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.Code
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.Code} Code
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Code.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.Code();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_id = reader.uint64();
                                break;
                            case 2:
                                message.code_info = $root.cosmwasm.wasm.v1.CodeInfo.decode(reader, reader.uint32());
                                break;
                            case 3:
                                message.code_bytes = reader.bytes();
                                break;
                            case 4:
                                message.pinned = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Code message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.Code
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.Code} Code
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Code.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Code message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.Code
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Code.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.code_info != null && message.hasOwnProperty("code_info")) {
                            var error = $root.cosmwasm.wasm.v1.CodeInfo.verify(message.code_info);
                            if (error)
                                return "code_info." + error;
                        }
                        if (message.code_bytes != null && message.hasOwnProperty("code_bytes"))
                            if (!(message.code_bytes && typeof message.code_bytes.length === "number" || $util.isString(message.code_bytes)))
                                return "code_bytes: buffer expected";
                        if (message.pinned != null && message.hasOwnProperty("pinned"))
                            if (typeof message.pinned !== "boolean")
                                return "pinned: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a Code message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.Code
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.Code} Code
                     */
                    Code.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.Code)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.Code();
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.code_info != null) {
                            if (typeof object.code_info !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.Code.code_info: object expected");
                            message.code_info = $root.cosmwasm.wasm.v1.CodeInfo.fromObject(object.code_info);
                        }
                        if (object.code_bytes != null)
                            if (typeof object.code_bytes === "string")
                                $util.base64.decode(object.code_bytes, message.code_bytes = $util.newBuffer($util.base64.length(object.code_bytes)), 0);
                            else if (object.code_bytes.length)
                                message.code_bytes = object.code_bytes;
                        if (object.pinned != null)
                            message.pinned = Boolean(object.pinned);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Code message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.Code
                     * @static
                     * @param {cosmwasm.wasm.v1.Code} message Code
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Code.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.code_info = null;
                            if (options.bytes === String)
                                object.code_bytes = "";
                            else {
                                object.code_bytes = [];
                                if (options.bytes !== Array)
                                    object.code_bytes = $util.newBuffer(object.code_bytes);
                            }
                            object.pinned = false;
                        }
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.code_info != null && message.hasOwnProperty("code_info"))
                            object.code_info = $root.cosmwasm.wasm.v1.CodeInfo.toObject(message.code_info, options);
                        if (message.code_bytes != null && message.hasOwnProperty("code_bytes"))
                            object.code_bytes = options.bytes === String ? $util.base64.encode(message.code_bytes, 0, message.code_bytes.length) : options.bytes === Array ? Array.prototype.slice.call(message.code_bytes) : message.code_bytes;
                        if (message.pinned != null && message.hasOwnProperty("pinned"))
                            object.pinned = message.pinned;
                        return object;
                    };
    
                    /**
                     * Converts this Code to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.Code
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Code.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Code;
                })();
    
                v1.Contract = (function() {
    
                    /**
                     * Properties of a Contract.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IContract
                     * @property {string|null} [contract_address] Contract contract_address
                     * @property {cosmwasm.wasm.v1.IContractInfo|null} [contract_info] Contract contract_info
                     * @property {Array.<cosmwasm.wasm.v1.IModel>|null} [contract_state] Contract contract_state
                     */
    
                    /**
                     * Constructs a new Contract.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a Contract.
                     * @implements IContract
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IContract=} [properties] Properties to set
                     */
                    function Contract(properties) {
                        this.contract_state = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Contract contract_address.
                     * @member {string} contract_address
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @instance
                     */
                    Contract.prototype.contract_address = "";
    
                    /**
                     * Contract contract_info.
                     * @member {cosmwasm.wasm.v1.IContractInfo|null|undefined} contract_info
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @instance
                     */
                    Contract.prototype.contract_info = null;
    
                    /**
                     * Contract contract_state.
                     * @member {Array.<cosmwasm.wasm.v1.IModel>} contract_state
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @instance
                     */
                    Contract.prototype.contract_state = $util.emptyArray;
    
                    /**
                     * Encodes the specified Contract message. Does not implicitly {@link cosmwasm.wasm.v1.Contract.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @static
                     * @param {cosmwasm.wasm.v1.IContract} message Contract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Contract.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.contract_address != null && Object.hasOwnProperty.call(message, "contract_address"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.contract_address);
                        if (message.contract_info != null && Object.hasOwnProperty.call(message, "contract_info"))
                            $root.cosmwasm.wasm.v1.ContractInfo.encode(message.contract_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.contract_state != null && message.contract_state.length)
                            for (var i = 0; i < message.contract_state.length; ++i)
                                $root.cosmwasm.wasm.v1.Model.encode(message.contract_state[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Contract message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.Contract.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @static
                     * @param {cosmwasm.wasm.v1.IContract} message Contract message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Contract.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Contract message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.Contract} Contract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Contract.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.Contract();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.contract_address = reader.string();
                                break;
                            case 2:
                                message.contract_info = $root.cosmwasm.wasm.v1.ContractInfo.decode(reader, reader.uint32());
                                break;
                            case 3:
                                if (!(message.contract_state && message.contract_state.length))
                                    message.contract_state = [];
                                message.contract_state.push($root.cosmwasm.wasm.v1.Model.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Contract message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.Contract} Contract
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Contract.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Contract message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Contract.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.contract_address != null && message.hasOwnProperty("contract_address"))
                            if (!$util.isString(message.contract_address))
                                return "contract_address: string expected";
                        if (message.contract_info != null && message.hasOwnProperty("contract_info")) {
                            var error = $root.cosmwasm.wasm.v1.ContractInfo.verify(message.contract_info);
                            if (error)
                                return "contract_info." + error;
                        }
                        if (message.contract_state != null && message.hasOwnProperty("contract_state")) {
                            if (!Array.isArray(message.contract_state))
                                return "contract_state: array expected";
                            for (var i = 0; i < message.contract_state.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.Model.verify(message.contract_state[i]);
                                if (error)
                                    return "contract_state." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Contract message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.Contract} Contract
                     */
                    Contract.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.Contract)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.Contract();
                        if (object.contract_address != null)
                            message.contract_address = String(object.contract_address);
                        if (object.contract_info != null) {
                            if (typeof object.contract_info !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.Contract.contract_info: object expected");
                            message.contract_info = $root.cosmwasm.wasm.v1.ContractInfo.fromObject(object.contract_info);
                        }
                        if (object.contract_state) {
                            if (!Array.isArray(object.contract_state))
                                throw TypeError(".cosmwasm.wasm.v1.Contract.contract_state: array expected");
                            message.contract_state = [];
                            for (var i = 0; i < object.contract_state.length; ++i) {
                                if (typeof object.contract_state[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.Contract.contract_state: object expected");
                                message.contract_state[i] = $root.cosmwasm.wasm.v1.Model.fromObject(object.contract_state[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Contract message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @static
                     * @param {cosmwasm.wasm.v1.Contract} message Contract
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Contract.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.contract_state = [];
                        if (options.defaults) {
                            object.contract_address = "";
                            object.contract_info = null;
                        }
                        if (message.contract_address != null && message.hasOwnProperty("contract_address"))
                            object.contract_address = message.contract_address;
                        if (message.contract_info != null && message.hasOwnProperty("contract_info"))
                            object.contract_info = $root.cosmwasm.wasm.v1.ContractInfo.toObject(message.contract_info, options);
                        if (message.contract_state && message.contract_state.length) {
                            object.contract_state = [];
                            for (var j = 0; j < message.contract_state.length; ++j)
                                object.contract_state[j] = $root.cosmwasm.wasm.v1.Model.toObject(message.contract_state[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Contract to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.Contract
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Contract.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Contract;
                })();
    
                v1.Sequence = (function() {
    
                    /**
                     * Properties of a Sequence.
                     * @memberof cosmwasm.wasm.v1
                     * @interface ISequence
                     * @property {Uint8Array|null} [id_key] Sequence id_key
                     * @property {Long|null} [value] Sequence value
                     */
    
                    /**
                     * Constructs a new Sequence.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a Sequence.
                     * @implements ISequence
                     * @constructor
                     * @param {cosmwasm.wasm.v1.ISequence=} [properties] Properties to set
                     */
                    function Sequence(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Sequence id_key.
                     * @member {Uint8Array} id_key
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @instance
                     */
                    Sequence.prototype.id_key = $util.newBuffer([]);
    
                    /**
                     * Sequence value.
                     * @member {Long} value
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @instance
                     */
                    Sequence.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * Encodes the specified Sequence message. Does not implicitly {@link cosmwasm.wasm.v1.Sequence.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @static
                     * @param {cosmwasm.wasm.v1.ISequence} message Sequence message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Sequence.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.id_key != null && Object.hasOwnProperty.call(message, "id_key"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.id_key);
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.value);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Sequence message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.Sequence.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @static
                     * @param {cosmwasm.wasm.v1.ISequence} message Sequence message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Sequence.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Sequence message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.Sequence} Sequence
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Sequence.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.Sequence();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.id_key = reader.bytes();
                                break;
                            case 2:
                                message.value = reader.uint64();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Sequence message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.Sequence} Sequence
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Sequence.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Sequence message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Sequence.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.id_key != null && message.hasOwnProperty("id_key"))
                            if (!(message.id_key && typeof message.id_key.length === "number" || $util.isString(message.id_key)))
                                return "id_key: buffer expected";
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                                return "value: integer|Long expected";
                        return null;
                    };
    
                    /**
                     * Creates a Sequence message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.Sequence} Sequence
                     */
                    Sequence.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.Sequence)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.Sequence();
                        if (object.id_key != null)
                            if (typeof object.id_key === "string")
                                $util.base64.decode(object.id_key, message.id_key = $util.newBuffer($util.base64.length(object.id_key)), 0);
                            else if (object.id_key.length)
                                message.id_key = object.id_key;
                        if (object.value != null)
                            if ($util.Long)
                                (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                            else if (typeof object.value === "string")
                                message.value = parseInt(object.value, 10);
                            else if (typeof object.value === "number")
                                message.value = object.value;
                            else if (typeof object.value === "object")
                                message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Sequence message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @static
                     * @param {cosmwasm.wasm.v1.Sequence} message Sequence
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Sequence.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if (options.bytes === String)
                                object.id_key = "";
                            else {
                                object.id_key = [];
                                if (options.bytes !== Array)
                                    object.id_key = $util.newBuffer(object.id_key);
                            }
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.value = options.longs === String ? "0" : 0;
                        }
                        if (message.id_key != null && message.hasOwnProperty("id_key"))
                            object.id_key = options.bytes === String ? $util.base64.encode(message.id_key, 0, message.id_key.length) : options.bytes === Array ? Array.prototype.slice.call(message.id_key) : message.id_key;
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (typeof message.value === "number")
                                object.value = options.longs === String ? String(message.value) : message.value;
                            else
                                object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                        return object;
                    };
    
                    /**
                     * Converts this Sequence to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.Sequence
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Sequence.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Sequence;
                })();
    
                v1.StoreCodeProposal = (function() {
    
                    /**
                     * Properties of a StoreCodeProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IStoreCodeProposal
                     * @property {string|null} [title] StoreCodeProposal title
                     * @property {string|null} [description] StoreCodeProposal description
                     * @property {string|null} [run_as] StoreCodeProposal run_as
                     * @property {Uint8Array|null} [wasm_byte_code] StoreCodeProposal wasm_byte_code
                     * @property {cosmwasm.wasm.v1.IAccessConfig|null} [instantiate_permission] StoreCodeProposal instantiate_permission
                     */
    
                    /**
                     * Constructs a new StoreCodeProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a StoreCodeProposal.
                     * @implements IStoreCodeProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IStoreCodeProposal=} [properties] Properties to set
                     */
                    function StoreCodeProposal(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * StoreCodeProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @instance
                     */
                    StoreCodeProposal.prototype.title = "";
    
                    /**
                     * StoreCodeProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @instance
                     */
                    StoreCodeProposal.prototype.description = "";
    
                    /**
                     * StoreCodeProposal run_as.
                     * @member {string} run_as
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @instance
                     */
                    StoreCodeProposal.prototype.run_as = "";
    
                    /**
                     * StoreCodeProposal wasm_byte_code.
                     * @member {Uint8Array} wasm_byte_code
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @instance
                     */
                    StoreCodeProposal.prototype.wasm_byte_code = $util.newBuffer([]);
    
                    /**
                     * StoreCodeProposal instantiate_permission.
                     * @member {cosmwasm.wasm.v1.IAccessConfig|null|undefined} instantiate_permission
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @instance
                     */
                    StoreCodeProposal.prototype.instantiate_permission = null;
    
                    /**
                     * Encodes the specified StoreCodeProposal message. Does not implicitly {@link cosmwasm.wasm.v1.StoreCodeProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IStoreCodeProposal} message StoreCodeProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StoreCodeProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.run_as != null && Object.hasOwnProperty.call(message, "run_as"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.run_as);
                        if (message.wasm_byte_code != null && Object.hasOwnProperty.call(message, "wasm_byte_code"))
                            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.wasm_byte_code);
                        if (message.instantiate_permission != null && Object.hasOwnProperty.call(message, "instantiate_permission"))
                            $root.cosmwasm.wasm.v1.AccessConfig.encode(message.instantiate_permission, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified StoreCodeProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.StoreCodeProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IStoreCodeProposal} message StoreCodeProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    StoreCodeProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a StoreCodeProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.StoreCodeProposal} StoreCodeProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StoreCodeProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.StoreCodeProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                message.run_as = reader.string();
                                break;
                            case 4:
                                message.wasm_byte_code = reader.bytes();
                                break;
                            case 7:
                                message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a StoreCodeProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.StoreCodeProposal} StoreCodeProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    StoreCodeProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a StoreCodeProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    StoreCodeProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.run_as != null && message.hasOwnProperty("run_as"))
                            if (!$util.isString(message.run_as))
                                return "run_as: string expected";
                        if (message.wasm_byte_code != null && message.hasOwnProperty("wasm_byte_code"))
                            if (!(message.wasm_byte_code && typeof message.wasm_byte_code.length === "number" || $util.isString(message.wasm_byte_code)))
                                return "wasm_byte_code: buffer expected";
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission")) {
                            var error = $root.cosmwasm.wasm.v1.AccessConfig.verify(message.instantiate_permission);
                            if (error)
                                return "instantiate_permission." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a StoreCodeProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.StoreCodeProposal} StoreCodeProposal
                     */
                    StoreCodeProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.StoreCodeProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.StoreCodeProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.run_as != null)
                            message.run_as = String(object.run_as);
                        if (object.wasm_byte_code != null)
                            if (typeof object.wasm_byte_code === "string")
                                $util.base64.decode(object.wasm_byte_code, message.wasm_byte_code = $util.newBuffer($util.base64.length(object.wasm_byte_code)), 0);
                            else if (object.wasm_byte_code.length)
                                message.wasm_byte_code = object.wasm_byte_code;
                        if (object.instantiate_permission != null) {
                            if (typeof object.instantiate_permission !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.StoreCodeProposal.instantiate_permission: object expected");
                            message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.fromObject(object.instantiate_permission);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a StoreCodeProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.StoreCodeProposal} message StoreCodeProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    StoreCodeProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                            object.run_as = "";
                            if (options.bytes === String)
                                object.wasm_byte_code = "";
                            else {
                                object.wasm_byte_code = [];
                                if (options.bytes !== Array)
                                    object.wasm_byte_code = $util.newBuffer(object.wasm_byte_code);
                            }
                            object.instantiate_permission = null;
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.run_as != null && message.hasOwnProperty("run_as"))
                            object.run_as = message.run_as;
                        if (message.wasm_byte_code != null && message.hasOwnProperty("wasm_byte_code"))
                            object.wasm_byte_code = options.bytes === String ? $util.base64.encode(message.wasm_byte_code, 0, message.wasm_byte_code.length) : options.bytes === Array ? Array.prototype.slice.call(message.wasm_byte_code) : message.wasm_byte_code;
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission"))
                            object.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.toObject(message.instantiate_permission, options);
                        return object;
                    };
    
                    /**
                     * Converts this StoreCodeProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.StoreCodeProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    StoreCodeProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return StoreCodeProposal;
                })();
    
                v1.InstantiateContractProposal = (function() {
    
                    /**
                     * Properties of an InstantiateContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IInstantiateContractProposal
                     * @property {string|null} [title] InstantiateContractProposal title
                     * @property {string|null} [description] InstantiateContractProposal description
                     * @property {string|null} [run_as] InstantiateContractProposal run_as
                     * @property {string|null} [admin] InstantiateContractProposal admin
                     * @property {Long|null} [code_id] InstantiateContractProposal code_id
                     * @property {string|null} [label] InstantiateContractProposal label
                     * @property {Uint8Array|null} [msg] InstantiateContractProposal msg
                     * @property {Array.<cosmos.base.v1beta1.ICoin>|null} [funds] InstantiateContractProposal funds
                     */
    
                    /**
                     * Constructs a new InstantiateContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an InstantiateContractProposal.
                     * @implements IInstantiateContractProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IInstantiateContractProposal=} [properties] Properties to set
                     */
                    function InstantiateContractProposal(properties) {
                        this.funds = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * InstantiateContractProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.title = "";
    
                    /**
                     * InstantiateContractProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.description = "";
    
                    /**
                     * InstantiateContractProposal run_as.
                     * @member {string} run_as
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.run_as = "";
    
                    /**
                     * InstantiateContractProposal admin.
                     * @member {string} admin
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.admin = "";
    
                    /**
                     * InstantiateContractProposal code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * InstantiateContractProposal label.
                     * @member {string} label
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.label = "";
    
                    /**
                     * InstantiateContractProposal msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * InstantiateContractProposal funds.
                     * @member {Array.<cosmos.base.v1beta1.ICoin>} funds
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     */
                    InstantiateContractProposal.prototype.funds = $util.emptyArray;
    
                    /**
                     * Encodes the specified InstantiateContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.InstantiateContractProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IInstantiateContractProposal} message InstantiateContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    InstantiateContractProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.run_as != null && Object.hasOwnProperty.call(message, "run_as"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.run_as);
                        if (message.admin != null && Object.hasOwnProperty.call(message, "admin"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.admin);
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.code_id);
                        if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.label);
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.msg);
                        if (message.funds != null && message.funds.length)
                            for (var i = 0; i < message.funds.length; ++i)
                                $root.cosmos.base.v1beta1.Coin.encode(message.funds[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified InstantiateContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.InstantiateContractProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IInstantiateContractProposal} message InstantiateContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    InstantiateContractProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an InstantiateContractProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.InstantiateContractProposal} InstantiateContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    InstantiateContractProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.InstantiateContractProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                message.run_as = reader.string();
                                break;
                            case 4:
                                message.admin = reader.string();
                                break;
                            case 5:
                                message.code_id = reader.uint64();
                                break;
                            case 6:
                                message.label = reader.string();
                                break;
                            case 7:
                                message.msg = reader.bytes();
                                break;
                            case 8:
                                if (!(message.funds && message.funds.length))
                                    message.funds = [];
                                message.funds.push($root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an InstantiateContractProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.InstantiateContractProposal} InstantiateContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    InstantiateContractProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an InstantiateContractProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    InstantiateContractProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.run_as != null && message.hasOwnProperty("run_as"))
                            if (!$util.isString(message.run_as))
                                return "run_as: string expected";
                        if (message.admin != null && message.hasOwnProperty("admin"))
                            if (!$util.isString(message.admin))
                                return "admin: string expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.label != null && message.hasOwnProperty("label"))
                            if (!$util.isString(message.label))
                                return "label: string expected";
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        if (message.funds != null && message.hasOwnProperty("funds")) {
                            if (!Array.isArray(message.funds))
                                return "funds: array expected";
                            for (var i = 0; i < message.funds.length; ++i) {
                                var error = $root.cosmos.base.v1beta1.Coin.verify(message.funds[i]);
                                if (error)
                                    return "funds." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an InstantiateContractProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.InstantiateContractProposal} InstantiateContractProposal
                     */
                    InstantiateContractProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.InstantiateContractProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.InstantiateContractProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.run_as != null)
                            message.run_as = String(object.run_as);
                        if (object.admin != null)
                            message.admin = String(object.admin);
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.label != null)
                            message.label = String(object.label);
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        if (object.funds) {
                            if (!Array.isArray(object.funds))
                                throw TypeError(".cosmwasm.wasm.v1.InstantiateContractProposal.funds: array expected");
                            message.funds = [];
                            for (var i = 0; i < object.funds.length; ++i) {
                                if (typeof object.funds[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.InstantiateContractProposal.funds: object expected");
                                message.funds[i] = $root.cosmos.base.v1beta1.Coin.fromObject(object.funds[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an InstantiateContractProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.InstantiateContractProposal} message InstantiateContractProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    InstantiateContractProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.funds = [];
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                            object.run_as = "";
                            object.admin = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.label = "";
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.run_as != null && message.hasOwnProperty("run_as"))
                            object.run_as = message.run_as;
                        if (message.admin != null && message.hasOwnProperty("admin"))
                            object.admin = message.admin;
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.label != null && message.hasOwnProperty("label"))
                            object.label = message.label;
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        if (message.funds && message.funds.length) {
                            object.funds = [];
                            for (var j = 0; j < message.funds.length; ++j)
                                object.funds[j] = $root.cosmos.base.v1beta1.Coin.toObject(message.funds[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this InstantiateContractProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.InstantiateContractProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    InstantiateContractProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return InstantiateContractProposal;
                })();
    
                v1.MigrateContractProposal = (function() {
    
                    /**
                     * Properties of a MigrateContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMigrateContractProposal
                     * @property {string|null} [title] MigrateContractProposal title
                     * @property {string|null} [description] MigrateContractProposal description
                     * @property {string|null} [contract] MigrateContractProposal contract
                     * @property {Long|null} [code_id] MigrateContractProposal code_id
                     * @property {Uint8Array|null} [msg] MigrateContractProposal msg
                     */
    
                    /**
                     * Constructs a new MigrateContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MigrateContractProposal.
                     * @implements IMigrateContractProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMigrateContractProposal=} [properties] Properties to set
                     */
                    function MigrateContractProposal(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MigrateContractProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @instance
                     */
                    MigrateContractProposal.prototype.title = "";
    
                    /**
                     * MigrateContractProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @instance
                     */
                    MigrateContractProposal.prototype.description = "";
    
                    /**
                     * MigrateContractProposal contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @instance
                     */
                    MigrateContractProposal.prototype.contract = "";
    
                    /**
                     * MigrateContractProposal code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @instance
                     */
                    MigrateContractProposal.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * MigrateContractProposal msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @instance
                     */
                    MigrateContractProposal.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified MigrateContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.MigrateContractProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IMigrateContractProposal} message MigrateContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MigrateContractProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.contract);
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.code_id);
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.msg);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MigrateContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MigrateContractProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IMigrateContractProposal} message MigrateContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MigrateContractProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MigrateContractProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MigrateContractProposal} MigrateContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MigrateContractProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MigrateContractProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 4:
                                message.contract = reader.string();
                                break;
                            case 5:
                                message.code_id = reader.uint64();
                                break;
                            case 6:
                                message.msg = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MigrateContractProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MigrateContractProposal} MigrateContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MigrateContractProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MigrateContractProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MigrateContractProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a MigrateContractProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MigrateContractProposal} MigrateContractProposal
                     */
                    MigrateContractProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MigrateContractProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MigrateContractProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MigrateContractProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.MigrateContractProposal} message MigrateContractProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MigrateContractProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                            object.contract = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        return object;
                    };
    
                    /**
                     * Converts this MigrateContractProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MigrateContractProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MigrateContractProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MigrateContractProposal;
                })();
    
                v1.SudoContractProposal = (function() {
    
                    /**
                     * Properties of a SudoContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface ISudoContractProposal
                     * @property {string|null} [title] SudoContractProposal title
                     * @property {string|null} [description] SudoContractProposal description
                     * @property {string|null} [contract] SudoContractProposal contract
                     * @property {Uint8Array|null} [msg] SudoContractProposal msg
                     */
    
                    /**
                     * Constructs a new SudoContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a SudoContractProposal.
                     * @implements ISudoContractProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.ISudoContractProposal=} [properties] Properties to set
                     */
                    function SudoContractProposal(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SudoContractProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @instance
                     */
                    SudoContractProposal.prototype.title = "";
    
                    /**
                     * SudoContractProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @instance
                     */
                    SudoContractProposal.prototype.description = "";
    
                    /**
                     * SudoContractProposal contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @instance
                     */
                    SudoContractProposal.prototype.contract = "";
    
                    /**
                     * SudoContractProposal msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @instance
                     */
                    SudoContractProposal.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified SudoContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.SudoContractProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.ISudoContractProposal} message SudoContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SudoContractProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.contract);
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.msg);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SudoContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.SudoContractProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.ISudoContractProposal} message SudoContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SudoContractProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SudoContractProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.SudoContractProposal} SudoContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SudoContractProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.SudoContractProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                message.contract = reader.string();
                                break;
                            case 4:
                                message.msg = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SudoContractProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.SudoContractProposal} SudoContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SudoContractProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SudoContractProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SudoContractProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a SudoContractProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.SudoContractProposal} SudoContractProposal
                     */
                    SudoContractProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.SudoContractProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.SudoContractProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SudoContractProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.SudoContractProposal} message SudoContractProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SudoContractProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                            object.contract = "";
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        return object;
                    };
    
                    /**
                     * Converts this SudoContractProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.SudoContractProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SudoContractProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return SudoContractProposal;
                })();
    
                v1.ExecuteContractProposal = (function() {
    
                    /**
                     * Properties of an ExecuteContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IExecuteContractProposal
                     * @property {string|null} [title] ExecuteContractProposal title
                     * @property {string|null} [description] ExecuteContractProposal description
                     * @property {string|null} [run_as] ExecuteContractProposal run_as
                     * @property {string|null} [contract] ExecuteContractProposal contract
                     * @property {Uint8Array|null} [msg] ExecuteContractProposal msg
                     * @property {Array.<cosmos.base.v1beta1.ICoin>|null} [funds] ExecuteContractProposal funds
                     */
    
                    /**
                     * Constructs a new ExecuteContractProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an ExecuteContractProposal.
                     * @implements IExecuteContractProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IExecuteContractProposal=} [properties] Properties to set
                     */
                    function ExecuteContractProposal(properties) {
                        this.funds = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExecuteContractProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @instance
                     */
                    ExecuteContractProposal.prototype.title = "";
    
                    /**
                     * ExecuteContractProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @instance
                     */
                    ExecuteContractProposal.prototype.description = "";
    
                    /**
                     * ExecuteContractProposal run_as.
                     * @member {string} run_as
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @instance
                     */
                    ExecuteContractProposal.prototype.run_as = "";
    
                    /**
                     * ExecuteContractProposal contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @instance
                     */
                    ExecuteContractProposal.prototype.contract = "";
    
                    /**
                     * ExecuteContractProposal msg.
                     * @member {Uint8Array} msg
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @instance
                     */
                    ExecuteContractProposal.prototype.msg = $util.newBuffer([]);
    
                    /**
                     * ExecuteContractProposal funds.
                     * @member {Array.<cosmos.base.v1beta1.ICoin>} funds
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @instance
                     */
                    ExecuteContractProposal.prototype.funds = $util.emptyArray;
    
                    /**
                     * Encodes the specified ExecuteContractProposal message. Does not implicitly {@link cosmwasm.wasm.v1.ExecuteContractProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IExecuteContractProposal} message ExecuteContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExecuteContractProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.run_as != null && Object.hasOwnProperty.call(message, "run_as"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.run_as);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.contract);
                        if (message.msg != null && Object.hasOwnProperty.call(message, "msg"))
                            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.msg);
                        if (message.funds != null && message.funds.length)
                            for (var i = 0; i < message.funds.length; ++i)
                                $root.cosmos.base.v1beta1.Coin.encode(message.funds[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExecuteContractProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ExecuteContractProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IExecuteContractProposal} message ExecuteContractProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExecuteContractProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExecuteContractProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.ExecuteContractProposal} ExecuteContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExecuteContractProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.ExecuteContractProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                message.run_as = reader.string();
                                break;
                            case 4:
                                message.contract = reader.string();
                                break;
                            case 5:
                                message.msg = reader.bytes();
                                break;
                            case 6:
                                if (!(message.funds && message.funds.length))
                                    message.funds = [];
                                message.funds.push($root.cosmos.base.v1beta1.Coin.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExecuteContractProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.ExecuteContractProposal} ExecuteContractProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExecuteContractProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExecuteContractProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExecuteContractProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.run_as != null && message.hasOwnProperty("run_as"))
                            if (!$util.isString(message.run_as))
                                return "run_as: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            if (!(message.msg && typeof message.msg.length === "number" || $util.isString(message.msg)))
                                return "msg: buffer expected";
                        if (message.funds != null && message.hasOwnProperty("funds")) {
                            if (!Array.isArray(message.funds))
                                return "funds: array expected";
                            for (var i = 0; i < message.funds.length; ++i) {
                                var error = $root.cosmos.base.v1beta1.Coin.verify(message.funds[i]);
                                if (error)
                                    return "funds." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExecuteContractProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.ExecuteContractProposal} ExecuteContractProposal
                     */
                    ExecuteContractProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.ExecuteContractProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.ExecuteContractProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.run_as != null)
                            message.run_as = String(object.run_as);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        if (object.msg != null)
                            if (typeof object.msg === "string")
                                $util.base64.decode(object.msg, message.msg = $util.newBuffer($util.base64.length(object.msg)), 0);
                            else if (object.msg.length)
                                message.msg = object.msg;
                        if (object.funds) {
                            if (!Array.isArray(object.funds))
                                throw TypeError(".cosmwasm.wasm.v1.ExecuteContractProposal.funds: array expected");
                            message.funds = [];
                            for (var i = 0; i < object.funds.length; ++i) {
                                if (typeof object.funds[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.ExecuteContractProposal.funds: object expected");
                                message.funds[i] = $root.cosmos.base.v1beta1.Coin.fromObject(object.funds[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExecuteContractProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.ExecuteContractProposal} message ExecuteContractProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExecuteContractProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.funds = [];
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                            object.run_as = "";
                            object.contract = "";
                            if (options.bytes === String)
                                object.msg = "";
                            else {
                                object.msg = [];
                                if (options.bytes !== Array)
                                    object.msg = $util.newBuffer(object.msg);
                            }
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.run_as != null && message.hasOwnProperty("run_as"))
                            object.run_as = message.run_as;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        if (message.msg != null && message.hasOwnProperty("msg"))
                            object.msg = options.bytes === String ? $util.base64.encode(message.msg, 0, message.msg.length) : options.bytes === Array ? Array.prototype.slice.call(message.msg) : message.msg;
                        if (message.funds && message.funds.length) {
                            object.funds = [];
                            for (var j = 0; j < message.funds.length; ++j)
                                object.funds[j] = $root.cosmos.base.v1beta1.Coin.toObject(message.funds[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this ExecuteContractProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.ExecuteContractProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExecuteContractProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExecuteContractProposal;
                })();
    
                v1.UpdateAdminProposal = (function() {
    
                    /**
                     * Properties of an UpdateAdminProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IUpdateAdminProposal
                     * @property {string|null} [title] UpdateAdminProposal title
                     * @property {string|null} [description] UpdateAdminProposal description
                     * @property {string|null} [new_admin] UpdateAdminProposal new_admin
                     * @property {string|null} [contract] UpdateAdminProposal contract
                     */
    
                    /**
                     * Constructs a new UpdateAdminProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an UpdateAdminProposal.
                     * @implements IUpdateAdminProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IUpdateAdminProposal=} [properties] Properties to set
                     */
                    function UpdateAdminProposal(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateAdminProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @instance
                     */
                    UpdateAdminProposal.prototype.title = "";
    
                    /**
                     * UpdateAdminProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @instance
                     */
                    UpdateAdminProposal.prototype.description = "";
    
                    /**
                     * UpdateAdminProposal new_admin.
                     * @member {string} new_admin
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @instance
                     */
                    UpdateAdminProposal.prototype.new_admin = "";
    
                    /**
                     * UpdateAdminProposal contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @instance
                     */
                    UpdateAdminProposal.prototype.contract = "";
    
                    /**
                     * Encodes the specified UpdateAdminProposal message. Does not implicitly {@link cosmwasm.wasm.v1.UpdateAdminProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IUpdateAdminProposal} message UpdateAdminProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateAdminProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.new_admin != null && Object.hasOwnProperty.call(message, "new_admin"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.new_admin);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.contract);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateAdminProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.UpdateAdminProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IUpdateAdminProposal} message UpdateAdminProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateAdminProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateAdminProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.UpdateAdminProposal} UpdateAdminProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateAdminProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.UpdateAdminProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                message.new_admin = reader.string();
                                break;
                            case 4:
                                message.contract = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateAdminProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.UpdateAdminProposal} UpdateAdminProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateAdminProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateAdminProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateAdminProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.new_admin != null && message.hasOwnProperty("new_admin"))
                            if (!$util.isString(message.new_admin))
                                return "new_admin: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an UpdateAdminProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.UpdateAdminProposal} UpdateAdminProposal
                     */
                    UpdateAdminProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.UpdateAdminProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.UpdateAdminProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.new_admin != null)
                            message.new_admin = String(object.new_admin);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateAdminProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.UpdateAdminProposal} message UpdateAdminProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateAdminProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                            object.new_admin = "";
                            object.contract = "";
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.new_admin != null && message.hasOwnProperty("new_admin"))
                            object.new_admin = message.new_admin;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        return object;
                    };
    
                    /**
                     * Converts this UpdateAdminProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.UpdateAdminProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateAdminProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return UpdateAdminProposal;
                })();
    
                v1.ClearAdminProposal = (function() {
    
                    /**
                     * Properties of a ClearAdminProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IClearAdminProposal
                     * @property {string|null} [title] ClearAdminProposal title
                     * @property {string|null} [description] ClearAdminProposal description
                     * @property {string|null} [contract] ClearAdminProposal contract
                     */
    
                    /**
                     * Constructs a new ClearAdminProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a ClearAdminProposal.
                     * @implements IClearAdminProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IClearAdminProposal=} [properties] Properties to set
                     */
                    function ClearAdminProposal(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ClearAdminProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @instance
                     */
                    ClearAdminProposal.prototype.title = "";
    
                    /**
                     * ClearAdminProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @instance
                     */
                    ClearAdminProposal.prototype.description = "";
    
                    /**
                     * ClearAdminProposal contract.
                     * @member {string} contract
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @instance
                     */
                    ClearAdminProposal.prototype.contract = "";
    
                    /**
                     * Encodes the specified ClearAdminProposal message. Does not implicitly {@link cosmwasm.wasm.v1.ClearAdminProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IClearAdminProposal} message ClearAdminProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClearAdminProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.contract != null && Object.hasOwnProperty.call(message, "contract"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.contract);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ClearAdminProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.ClearAdminProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IClearAdminProposal} message ClearAdminProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ClearAdminProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ClearAdminProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.ClearAdminProposal} ClearAdminProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClearAdminProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.ClearAdminProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                message.contract = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ClearAdminProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.ClearAdminProposal} ClearAdminProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ClearAdminProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ClearAdminProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ClearAdminProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            if (!$util.isString(message.contract))
                                return "contract: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ClearAdminProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.ClearAdminProposal} ClearAdminProposal
                     */
                    ClearAdminProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.ClearAdminProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.ClearAdminProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.contract != null)
                            message.contract = String(object.contract);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ClearAdminProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.ClearAdminProposal} message ClearAdminProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ClearAdminProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                            object.contract = "";
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.contract != null && message.hasOwnProperty("contract"))
                            object.contract = message.contract;
                        return object;
                    };
    
                    /**
                     * Converts this ClearAdminProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.ClearAdminProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ClearAdminProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ClearAdminProposal;
                })();
    
                v1.PinCodesProposal = (function() {
    
                    /**
                     * Properties of a PinCodesProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IPinCodesProposal
                     * @property {string|null} [title] PinCodesProposal title
                     * @property {string|null} [description] PinCodesProposal description
                     * @property {Array.<Long>|null} [code_ids] PinCodesProposal code_ids
                     */
    
                    /**
                     * Constructs a new PinCodesProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a PinCodesProposal.
                     * @implements IPinCodesProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IPinCodesProposal=} [properties] Properties to set
                     */
                    function PinCodesProposal(properties) {
                        this.code_ids = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PinCodesProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @instance
                     */
                    PinCodesProposal.prototype.title = "";
    
                    /**
                     * PinCodesProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @instance
                     */
                    PinCodesProposal.prototype.description = "";
    
                    /**
                     * PinCodesProposal code_ids.
                     * @member {Array.<Long>} code_ids
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @instance
                     */
                    PinCodesProposal.prototype.code_ids = $util.emptyArray;
    
                    /**
                     * Encodes the specified PinCodesProposal message. Does not implicitly {@link cosmwasm.wasm.v1.PinCodesProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IPinCodesProposal} message PinCodesProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PinCodesProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.code_ids != null && message.code_ids.length) {
                            writer.uint32(/* id 3, wireType 2 =*/26).fork();
                            for (var i = 0; i < message.code_ids.length; ++i)
                                writer.uint64(message.code_ids[i]);
                            writer.ldelim();
                        }
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PinCodesProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.PinCodesProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IPinCodesProposal} message PinCodesProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PinCodesProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PinCodesProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.PinCodesProposal} PinCodesProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PinCodesProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.PinCodesProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                if (!(message.code_ids && message.code_ids.length))
                                    message.code_ids = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.code_ids.push(reader.uint64());
                                } else
                                    message.code_ids.push(reader.uint64());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PinCodesProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.PinCodesProposal} PinCodesProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PinCodesProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PinCodesProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PinCodesProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.code_ids != null && message.hasOwnProperty("code_ids")) {
                            if (!Array.isArray(message.code_ids))
                                return "code_ids: array expected";
                            for (var i = 0; i < message.code_ids.length; ++i)
                                if (!$util.isInteger(message.code_ids[i]) && !(message.code_ids[i] && $util.isInteger(message.code_ids[i].low) && $util.isInteger(message.code_ids[i].high)))
                                    return "code_ids: integer|Long[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a PinCodesProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.PinCodesProposal} PinCodesProposal
                     */
                    PinCodesProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.PinCodesProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.PinCodesProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.code_ids) {
                            if (!Array.isArray(object.code_ids))
                                throw TypeError(".cosmwasm.wasm.v1.PinCodesProposal.code_ids: array expected");
                            message.code_ids = [];
                            for (var i = 0; i < object.code_ids.length; ++i)
                                if ($util.Long)
                                    (message.code_ids[i] = $util.Long.fromValue(object.code_ids[i])).unsigned = true;
                                else if (typeof object.code_ids[i] === "string")
                                    message.code_ids[i] = parseInt(object.code_ids[i], 10);
                                else if (typeof object.code_ids[i] === "number")
                                    message.code_ids[i] = object.code_ids[i];
                                else if (typeof object.code_ids[i] === "object")
                                    message.code_ids[i] = new $util.LongBits(object.code_ids[i].low >>> 0, object.code_ids[i].high >>> 0).toNumber(true);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PinCodesProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.PinCodesProposal} message PinCodesProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PinCodesProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.code_ids = [];
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.code_ids && message.code_ids.length) {
                            object.code_ids = [];
                            for (var j = 0; j < message.code_ids.length; ++j)
                                if (typeof message.code_ids[j] === "number")
                                    object.code_ids[j] = options.longs === String ? String(message.code_ids[j]) : message.code_ids[j];
                                else
                                    object.code_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.code_ids[j]) : options.longs === Number ? new $util.LongBits(message.code_ids[j].low >>> 0, message.code_ids[j].high >>> 0).toNumber(true) : message.code_ids[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this PinCodesProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.PinCodesProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PinCodesProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return PinCodesProposal;
                })();
    
                v1.UnpinCodesProposal = (function() {
    
                    /**
                     * Properties of an UnpinCodesProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IUnpinCodesProposal
                     * @property {string|null} [title] UnpinCodesProposal title
                     * @property {string|null} [description] UnpinCodesProposal description
                     * @property {Array.<Long>|null} [code_ids] UnpinCodesProposal code_ids
                     */
    
                    /**
                     * Constructs a new UnpinCodesProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an UnpinCodesProposal.
                     * @implements IUnpinCodesProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IUnpinCodesProposal=} [properties] Properties to set
                     */
                    function UnpinCodesProposal(properties) {
                        this.code_ids = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UnpinCodesProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @instance
                     */
                    UnpinCodesProposal.prototype.title = "";
    
                    /**
                     * UnpinCodesProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @instance
                     */
                    UnpinCodesProposal.prototype.description = "";
    
                    /**
                     * UnpinCodesProposal code_ids.
                     * @member {Array.<Long>} code_ids
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @instance
                     */
                    UnpinCodesProposal.prototype.code_ids = $util.emptyArray;
    
                    /**
                     * Encodes the specified UnpinCodesProposal message. Does not implicitly {@link cosmwasm.wasm.v1.UnpinCodesProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IUnpinCodesProposal} message UnpinCodesProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UnpinCodesProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.code_ids != null && message.code_ids.length) {
                            writer.uint32(/* id 3, wireType 2 =*/26).fork();
                            for (var i = 0; i < message.code_ids.length; ++i)
                                writer.uint64(message.code_ids[i]);
                            writer.ldelim();
                        }
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UnpinCodesProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.UnpinCodesProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IUnpinCodesProposal} message UnpinCodesProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UnpinCodesProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UnpinCodesProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.UnpinCodesProposal} UnpinCodesProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UnpinCodesProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.UnpinCodesProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                if (!(message.code_ids && message.code_ids.length))
                                    message.code_ids = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.code_ids.push(reader.uint64());
                                } else
                                    message.code_ids.push(reader.uint64());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UnpinCodesProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.UnpinCodesProposal} UnpinCodesProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UnpinCodesProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UnpinCodesProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UnpinCodesProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.code_ids != null && message.hasOwnProperty("code_ids")) {
                            if (!Array.isArray(message.code_ids))
                                return "code_ids: array expected";
                            for (var i = 0; i < message.code_ids.length; ++i)
                                if (!$util.isInteger(message.code_ids[i]) && !(message.code_ids[i] && $util.isInteger(message.code_ids[i].low) && $util.isInteger(message.code_ids[i].high)))
                                    return "code_ids: integer|Long[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UnpinCodesProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.UnpinCodesProposal} UnpinCodesProposal
                     */
                    UnpinCodesProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.UnpinCodesProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.UnpinCodesProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.code_ids) {
                            if (!Array.isArray(object.code_ids))
                                throw TypeError(".cosmwasm.wasm.v1.UnpinCodesProposal.code_ids: array expected");
                            message.code_ids = [];
                            for (var i = 0; i < object.code_ids.length; ++i)
                                if ($util.Long)
                                    (message.code_ids[i] = $util.Long.fromValue(object.code_ids[i])).unsigned = true;
                                else if (typeof object.code_ids[i] === "string")
                                    message.code_ids[i] = parseInt(object.code_ids[i], 10);
                                else if (typeof object.code_ids[i] === "number")
                                    message.code_ids[i] = object.code_ids[i];
                                else if (typeof object.code_ids[i] === "object")
                                    message.code_ids[i] = new $util.LongBits(object.code_ids[i].low >>> 0, object.code_ids[i].high >>> 0).toNumber(true);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UnpinCodesProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.UnpinCodesProposal} message UnpinCodesProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UnpinCodesProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.code_ids = [];
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.code_ids && message.code_ids.length) {
                            object.code_ids = [];
                            for (var j = 0; j < message.code_ids.length; ++j)
                                if (typeof message.code_ids[j] === "number")
                                    object.code_ids[j] = options.longs === String ? String(message.code_ids[j]) : message.code_ids[j];
                                else
                                    object.code_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.code_ids[j]) : options.longs === Number ? new $util.LongBits(message.code_ids[j].low >>> 0, message.code_ids[j].high >>> 0).toNumber(true) : message.code_ids[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this UnpinCodesProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.UnpinCodesProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UnpinCodesProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return UnpinCodesProposal;
                })();
    
                v1.AccessConfigUpdate = (function() {
    
                    /**
                     * Properties of an AccessConfigUpdate.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IAccessConfigUpdate
                     * @property {Long|null} [code_id] AccessConfigUpdate code_id
                     * @property {cosmwasm.wasm.v1.IAccessConfig|null} [instantiate_permission] AccessConfigUpdate instantiate_permission
                     */
    
                    /**
                     * Constructs a new AccessConfigUpdate.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an AccessConfigUpdate.
                     * @implements IAccessConfigUpdate
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IAccessConfigUpdate=} [properties] Properties to set
                     */
                    function AccessConfigUpdate(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AccessConfigUpdate code_id.
                     * @member {Long} code_id
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @instance
                     */
                    AccessConfigUpdate.prototype.code_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * AccessConfigUpdate instantiate_permission.
                     * @member {cosmwasm.wasm.v1.IAccessConfig|null|undefined} instantiate_permission
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @instance
                     */
                    AccessConfigUpdate.prototype.instantiate_permission = null;
    
                    /**
                     * Encodes the specified AccessConfigUpdate message. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfigUpdate.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @static
                     * @param {cosmwasm.wasm.v1.IAccessConfigUpdate} message AccessConfigUpdate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AccessConfigUpdate.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.code_id != null && Object.hasOwnProperty.call(message, "code_id"))
                            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.code_id);
                        if (message.instantiate_permission != null && Object.hasOwnProperty.call(message, "instantiate_permission"))
                            $root.cosmwasm.wasm.v1.AccessConfig.encode(message.instantiate_permission, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AccessConfigUpdate message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.AccessConfigUpdate.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @static
                     * @param {cosmwasm.wasm.v1.IAccessConfigUpdate} message AccessConfigUpdate message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AccessConfigUpdate.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AccessConfigUpdate message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.AccessConfigUpdate} AccessConfigUpdate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AccessConfigUpdate.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.AccessConfigUpdate();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.code_id = reader.uint64();
                                break;
                            case 2:
                                message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AccessConfigUpdate message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.AccessConfigUpdate} AccessConfigUpdate
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AccessConfigUpdate.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AccessConfigUpdate message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AccessConfigUpdate.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (!$util.isInteger(message.code_id) && !(message.code_id && $util.isInteger(message.code_id.low) && $util.isInteger(message.code_id.high)))
                                return "code_id: integer|Long expected";
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission")) {
                            var error = $root.cosmwasm.wasm.v1.AccessConfig.verify(message.instantiate_permission);
                            if (error)
                                return "instantiate_permission." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AccessConfigUpdate message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.AccessConfigUpdate} AccessConfigUpdate
                     */
                    AccessConfigUpdate.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.AccessConfigUpdate)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.AccessConfigUpdate();
                        if (object.code_id != null)
                            if ($util.Long)
                                (message.code_id = $util.Long.fromValue(object.code_id)).unsigned = true;
                            else if (typeof object.code_id === "string")
                                message.code_id = parseInt(object.code_id, 10);
                            else if (typeof object.code_id === "number")
                                message.code_id = object.code_id;
                            else if (typeof object.code_id === "object")
                                message.code_id = new $util.LongBits(object.code_id.low >>> 0, object.code_id.high >>> 0).toNumber(true);
                        if (object.instantiate_permission != null) {
                            if (typeof object.instantiate_permission !== "object")
                                throw TypeError(".cosmwasm.wasm.v1.AccessConfigUpdate.instantiate_permission: object expected");
                            message.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.fromObject(object.instantiate_permission);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AccessConfigUpdate message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @static
                     * @param {cosmwasm.wasm.v1.AccessConfigUpdate} message AccessConfigUpdate
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AccessConfigUpdate.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.code_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.code_id = options.longs === String ? "0" : 0;
                            object.instantiate_permission = null;
                        }
                        if (message.code_id != null && message.hasOwnProperty("code_id"))
                            if (typeof message.code_id === "number")
                                object.code_id = options.longs === String ? String(message.code_id) : message.code_id;
                            else
                                object.code_id = options.longs === String ? $util.Long.prototype.toString.call(message.code_id) : options.longs === Number ? new $util.LongBits(message.code_id.low >>> 0, message.code_id.high >>> 0).toNumber(true) : message.code_id;
                        if (message.instantiate_permission != null && message.hasOwnProperty("instantiate_permission"))
                            object.instantiate_permission = $root.cosmwasm.wasm.v1.AccessConfig.toObject(message.instantiate_permission, options);
                        return object;
                    };
    
                    /**
                     * Converts this AccessConfigUpdate to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.AccessConfigUpdate
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AccessConfigUpdate.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return AccessConfigUpdate;
                })();
    
                v1.UpdateInstantiateConfigProposal = (function() {
    
                    /**
                     * Properties of an UpdateInstantiateConfigProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IUpdateInstantiateConfigProposal
                     * @property {string|null} [title] UpdateInstantiateConfigProposal title
                     * @property {string|null} [description] UpdateInstantiateConfigProposal description
                     * @property {Array.<cosmwasm.wasm.v1.IAccessConfigUpdate>|null} [access_config_updates] UpdateInstantiateConfigProposal access_config_updates
                     */
    
                    /**
                     * Constructs a new UpdateInstantiateConfigProposal.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents an UpdateInstantiateConfigProposal.
                     * @implements IUpdateInstantiateConfigProposal
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IUpdateInstantiateConfigProposal=} [properties] Properties to set
                     */
                    function UpdateInstantiateConfigProposal(properties) {
                        this.access_config_updates = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateInstantiateConfigProposal title.
                     * @member {string} title
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @instance
                     */
                    UpdateInstantiateConfigProposal.prototype.title = "";
    
                    /**
                     * UpdateInstantiateConfigProposal description.
                     * @member {string} description
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @instance
                     */
                    UpdateInstantiateConfigProposal.prototype.description = "";
    
                    /**
                     * UpdateInstantiateConfigProposal access_config_updates.
                     * @member {Array.<cosmwasm.wasm.v1.IAccessConfigUpdate>} access_config_updates
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @instance
                     */
                    UpdateInstantiateConfigProposal.prototype.access_config_updates = $util.emptyArray;
    
                    /**
                     * Encodes the specified UpdateInstantiateConfigProposal message. Does not implicitly {@link cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IUpdateInstantiateConfigProposal} message UpdateInstantiateConfigProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateInstantiateConfigProposal.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.title);
                        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                        if (message.access_config_updates != null && message.access_config_updates.length)
                            for (var i = 0; i < message.access_config_updates.length; ++i)
                                $root.cosmwasm.wasm.v1.AccessConfigUpdate.encode(message.access_config_updates[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateInstantiateConfigProposal message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.IUpdateInstantiateConfigProposal} message UpdateInstantiateConfigProposal message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateInstantiateConfigProposal.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateInstantiateConfigProposal message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.UpdateInstantiateConfigProposal} UpdateInstantiateConfigProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateInstantiateConfigProposal.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.UpdateInstantiateConfigProposal();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.title = reader.string();
                                break;
                            case 2:
                                message.description = reader.string();
                                break;
                            case 3:
                                if (!(message.access_config_updates && message.access_config_updates.length))
                                    message.access_config_updates = [];
                                message.access_config_updates.push($root.cosmwasm.wasm.v1.AccessConfigUpdate.decode(reader, reader.uint32()));
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateInstantiateConfigProposal message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.UpdateInstantiateConfigProposal} UpdateInstantiateConfigProposal
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateInstantiateConfigProposal.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateInstantiateConfigProposal message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateInstantiateConfigProposal.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.title != null && message.hasOwnProperty("title"))
                            if (!$util.isString(message.title))
                                return "title: string expected";
                        if (message.description != null && message.hasOwnProperty("description"))
                            if (!$util.isString(message.description))
                                return "description: string expected";
                        if (message.access_config_updates != null && message.hasOwnProperty("access_config_updates")) {
                            if (!Array.isArray(message.access_config_updates))
                                return "access_config_updates: array expected";
                            for (var i = 0; i < message.access_config_updates.length; ++i) {
                                var error = $root.cosmwasm.wasm.v1.AccessConfigUpdate.verify(message.access_config_updates[i]);
                                if (error)
                                    return "access_config_updates." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateInstantiateConfigProposal message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.UpdateInstantiateConfigProposal} UpdateInstantiateConfigProposal
                     */
                    UpdateInstantiateConfigProposal.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.UpdateInstantiateConfigProposal();
                        if (object.title != null)
                            message.title = String(object.title);
                        if (object.description != null)
                            message.description = String(object.description);
                        if (object.access_config_updates) {
                            if (!Array.isArray(object.access_config_updates))
                                throw TypeError(".cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates: array expected");
                            message.access_config_updates = [];
                            for (var i = 0; i < object.access_config_updates.length; ++i) {
                                if (typeof object.access_config_updates[i] !== "object")
                                    throw TypeError(".cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates: object expected");
                                message.access_config_updates[i] = $root.cosmwasm.wasm.v1.AccessConfigUpdate.fromObject(object.access_config_updates[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateInstantiateConfigProposal message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @static
                     * @param {cosmwasm.wasm.v1.UpdateInstantiateConfigProposal} message UpdateInstantiateConfigProposal
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateInstantiateConfigProposal.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.access_config_updates = [];
                        if (options.defaults) {
                            object.title = "";
                            object.description = "";
                        }
                        if (message.title != null && message.hasOwnProperty("title"))
                            object.title = message.title;
                        if (message.description != null && message.hasOwnProperty("description"))
                            object.description = message.description;
                        if (message.access_config_updates && message.access_config_updates.length) {
                            object.access_config_updates = [];
                            for (var j = 0; j < message.access_config_updates.length; ++j)
                                object.access_config_updates[j] = $root.cosmwasm.wasm.v1.AccessConfigUpdate.toObject(message.access_config_updates[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this UpdateInstantiateConfigProposal to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateInstantiateConfigProposal.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return UpdateInstantiateConfigProposal;
                })();
    
                v1.MsgIBCSend = (function() {
    
                    /**
                     * Properties of a MsgIBCSend.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgIBCSend
                     * @property {string|null} [channel] MsgIBCSend channel
                     * @property {Long|null} [timeout_height] MsgIBCSend timeout_height
                     * @property {Long|null} [timeout_timestamp] MsgIBCSend timeout_timestamp
                     * @property {Uint8Array|null} [data] MsgIBCSend data
                     */
    
                    /**
                     * Constructs a new MsgIBCSend.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgIBCSend.
                     * @implements IMsgIBCSend
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgIBCSend=} [properties] Properties to set
                     */
                    function MsgIBCSend(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgIBCSend channel.
                     * @member {string} channel
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @instance
                     */
                    MsgIBCSend.prototype.channel = "";
    
                    /**
                     * MsgIBCSend timeout_height.
                     * @member {Long} timeout_height
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @instance
                     */
                    MsgIBCSend.prototype.timeout_height = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * MsgIBCSend timeout_timestamp.
                     * @member {Long} timeout_timestamp
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @instance
                     */
                    MsgIBCSend.prototype.timeout_timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                    /**
                     * MsgIBCSend data.
                     * @member {Uint8Array} data
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @instance
                     */
                    MsgIBCSend.prototype.data = $util.newBuffer([]);
    
                    /**
                     * Encodes the specified MsgIBCSend message. Does not implicitly {@link cosmwasm.wasm.v1.MsgIBCSend.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgIBCSend} message MsgIBCSend message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgIBCSend.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.channel);
                        if (message.timeout_height != null && Object.hasOwnProperty.call(message, "timeout_height"))
                            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.timeout_height);
                        if (message.timeout_timestamp != null && Object.hasOwnProperty.call(message, "timeout_timestamp"))
                            writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.timeout_timestamp);
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.data);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgIBCSend message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgIBCSend.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgIBCSend} message MsgIBCSend message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgIBCSend.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgIBCSend message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgIBCSend} MsgIBCSend
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgIBCSend.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgIBCSend();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2:
                                message.channel = reader.string();
                                break;
                            case 4:
                                message.timeout_height = reader.uint64();
                                break;
                            case 5:
                                message.timeout_timestamp = reader.uint64();
                                break;
                            case 6:
                                message.data = reader.bytes();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgIBCSend message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgIBCSend} MsgIBCSend
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgIBCSend.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgIBCSend message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgIBCSend.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            if (!$util.isString(message.channel))
                                return "channel: string expected";
                        if (message.timeout_height != null && message.hasOwnProperty("timeout_height"))
                            if (!$util.isInteger(message.timeout_height) && !(message.timeout_height && $util.isInteger(message.timeout_height.low) && $util.isInteger(message.timeout_height.high)))
                                return "timeout_height: integer|Long expected";
                        if (message.timeout_timestamp != null && message.hasOwnProperty("timeout_timestamp"))
                            if (!$util.isInteger(message.timeout_timestamp) && !(message.timeout_timestamp && $util.isInteger(message.timeout_timestamp.low) && $util.isInteger(message.timeout_timestamp.high)))
                                return "timeout_timestamp: integer|Long expected";
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgIBCSend message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgIBCSend} MsgIBCSend
                     */
                    MsgIBCSend.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgIBCSend)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgIBCSend();
                        if (object.channel != null)
                            message.channel = String(object.channel);
                        if (object.timeout_height != null)
                            if ($util.Long)
                                (message.timeout_height = $util.Long.fromValue(object.timeout_height)).unsigned = true;
                            else if (typeof object.timeout_height === "string")
                                message.timeout_height = parseInt(object.timeout_height, 10);
                            else if (typeof object.timeout_height === "number")
                                message.timeout_height = object.timeout_height;
                            else if (typeof object.timeout_height === "object")
                                message.timeout_height = new $util.LongBits(object.timeout_height.low >>> 0, object.timeout_height.high >>> 0).toNumber(true);
                        if (object.timeout_timestamp != null)
                            if ($util.Long)
                                (message.timeout_timestamp = $util.Long.fromValue(object.timeout_timestamp)).unsigned = true;
                            else if (typeof object.timeout_timestamp === "string")
                                message.timeout_timestamp = parseInt(object.timeout_timestamp, 10);
                            else if (typeof object.timeout_timestamp === "number")
                                message.timeout_timestamp = object.timeout_timestamp;
                            else if (typeof object.timeout_timestamp === "object")
                                message.timeout_timestamp = new $util.LongBits(object.timeout_timestamp.low >>> 0, object.timeout_timestamp.high >>> 0).toNumber(true);
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length)
                                message.data = object.data;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgIBCSend message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgIBCSend} message MsgIBCSend
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgIBCSend.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.channel = "";
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.timeout_height = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.timeout_height = options.longs === String ? "0" : 0;
                            if ($util.Long) {
                                var long = new $util.Long(0, 0, true);
                                object.timeout_timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                            } else
                                object.timeout_timestamp = options.longs === String ? "0" : 0;
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                        }
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            object.channel = message.channel;
                        if (message.timeout_height != null && message.hasOwnProperty("timeout_height"))
                            if (typeof message.timeout_height === "number")
                                object.timeout_height = options.longs === String ? String(message.timeout_height) : message.timeout_height;
                            else
                                object.timeout_height = options.longs === String ? $util.Long.prototype.toString.call(message.timeout_height) : options.longs === Number ? new $util.LongBits(message.timeout_height.low >>> 0, message.timeout_height.high >>> 0).toNumber(true) : message.timeout_height;
                        if (message.timeout_timestamp != null && message.hasOwnProperty("timeout_timestamp"))
                            if (typeof message.timeout_timestamp === "number")
                                object.timeout_timestamp = options.longs === String ? String(message.timeout_timestamp) : message.timeout_timestamp;
                            else
                                object.timeout_timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timeout_timestamp) : options.longs === Number ? new $util.LongBits(message.timeout_timestamp.low >>> 0, message.timeout_timestamp.high >>> 0).toNumber(true) : message.timeout_timestamp;
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        return object;
                    };
    
                    /**
                     * Converts this MsgIBCSend to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgIBCSend
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgIBCSend.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgIBCSend;
                })();
    
                v1.MsgIBCCloseChannel = (function() {
    
                    /**
                     * Properties of a MsgIBCCloseChannel.
                     * @memberof cosmwasm.wasm.v1
                     * @interface IMsgIBCCloseChannel
                     * @property {string|null} [channel] MsgIBCCloseChannel channel
                     */
    
                    /**
                     * Constructs a new MsgIBCCloseChannel.
                     * @memberof cosmwasm.wasm.v1
                     * @classdesc Represents a MsgIBCCloseChannel.
                     * @implements IMsgIBCCloseChannel
                     * @constructor
                     * @param {cosmwasm.wasm.v1.IMsgIBCCloseChannel=} [properties] Properties to set
                     */
                    function MsgIBCCloseChannel(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MsgIBCCloseChannel channel.
                     * @member {string} channel
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @instance
                     */
                    MsgIBCCloseChannel.prototype.channel = "";
    
                    /**
                     * Encodes the specified MsgIBCCloseChannel message. Does not implicitly {@link cosmwasm.wasm.v1.MsgIBCCloseChannel.verify|verify} messages.
                     * @function encode
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgIBCCloseChannel} message MsgIBCCloseChannel message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgIBCCloseChannel.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.channel);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MsgIBCCloseChannel message, length delimited. Does not implicitly {@link cosmwasm.wasm.v1.MsgIBCCloseChannel.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @static
                     * @param {cosmwasm.wasm.v1.IMsgIBCCloseChannel} message MsgIBCCloseChannel message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MsgIBCCloseChannel.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MsgIBCCloseChannel message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmwasm.wasm.v1.MsgIBCCloseChannel} MsgIBCCloseChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgIBCCloseChannel.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmwasm.wasm.v1.MsgIBCCloseChannel();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 2:
                                message.channel = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MsgIBCCloseChannel message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmwasm.wasm.v1.MsgIBCCloseChannel} MsgIBCCloseChannel
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MsgIBCCloseChannel.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MsgIBCCloseChannel message.
                     * @function verify
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MsgIBCCloseChannel.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            if (!$util.isString(message.channel))
                                return "channel: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a MsgIBCCloseChannel message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmwasm.wasm.v1.MsgIBCCloseChannel} MsgIBCCloseChannel
                     */
                    MsgIBCCloseChannel.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmwasm.wasm.v1.MsgIBCCloseChannel)
                            return object;
                        var message = new $root.cosmwasm.wasm.v1.MsgIBCCloseChannel();
                        if (object.channel != null)
                            message.channel = String(object.channel);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MsgIBCCloseChannel message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @static
                     * @param {cosmwasm.wasm.v1.MsgIBCCloseChannel} message MsgIBCCloseChannel
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MsgIBCCloseChannel.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.channel = "";
                        if (message.channel != null && message.hasOwnProperty("channel"))
                            object.channel = message.channel;
                        return object;
                    };
    
                    /**
                     * Converts this MsgIBCCloseChannel to JSON.
                     * @function toJSON
                     * @memberof cosmwasm.wasm.v1.MsgIBCCloseChannel
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MsgIBCCloseChannel.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return MsgIBCCloseChannel;
                })();
    
                return v1;
            })();
    
            return wasm;
        })();
    
        return cosmwasm;
    })();
    
    $root.gogoproto = (function() {
    
        /**
         * Namespace gogoproto.
         * @exports gogoproto
         * @namespace
         */
        var gogoproto = {};
    
        return gogoproto;
    })();
    
    $root.cosmos_proto = (function() {
    
        /**
         * Namespace cosmos_proto.
         * @exports cosmos_proto
         * @namespace
         */
        var cosmos_proto = {};
    
        return cosmos_proto;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [public_dependency] FileDescriptorProto public_dependency
                 * @property {Array.<number>|null} [weak_dependency] FileDescriptorProto weak_dependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [message_type] FileDescriptorProto message_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] FileDescriptorProto enum_type
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [source_code_info] FileDescriptorProto source_code_info
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.public_dependency = [];
                    this.weak_dependency = [];
                    this.message_type = [];
                    this.enum_type = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto public_dependency.
                 * @member {Array.<number>} public_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.public_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weak_dependency.
                 * @member {Array.<number>} weak_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weak_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto message_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} message_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.message_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto source_code_info.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} source_code_info
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.source_code_info = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.message_type != null && message.message_type.length)
                        for (var i = 0; i < message.message_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.message_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.source_code_info != null && Object.hasOwnProperty.call(message, "source_code_info"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.source_code_info, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.public_dependency != null && message.public_dependency.length)
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.public_dependency[i]);
                    if (message.weak_dependency != null && message.weak_dependency.length)
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weak_dependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.public_dependency && message.public_dependency.length))
                                message.public_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.public_dependency.push(reader.int32());
                            } else
                                message.public_dependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weak_dependency && message.weak_dependency.length))
                                message.weak_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weak_dependency.push(reader.int32());
                            } else
                                message.weak_dependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.message_type && message.message_type.length))
                                message.message_type = [];
                            message.message_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.source_code_info = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.public_dependency != null && message.hasOwnProperty("public_dependency")) {
                        if (!Array.isArray(message.public_dependency))
                            return "public_dependency: array expected";
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            if (!$util.isInteger(message.public_dependency[i]))
                                return "public_dependency: integer[] expected";
                    }
                    if (message.weak_dependency != null && message.hasOwnProperty("weak_dependency")) {
                        if (!Array.isArray(message.weak_dependency))
                            return "weak_dependency: array expected";
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            if (!$util.isInteger(message.weak_dependency[i]))
                                return "weak_dependency: integer[] expected";
                    }
                    if (message.message_type != null && message.hasOwnProperty("message_type")) {
                        if (!Array.isArray(message.message_type))
                            return "message_type: array expected";
                        for (var i = 0; i < message.message_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.message_type[i]);
                            if (error)
                                return "message_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.source_code_info);
                        if (error)
                            return "source_code_info." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.public_dependency) {
                        if (!Array.isArray(object.public_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.public_dependency: array expected");
                        message.public_dependency = [];
                        for (var i = 0; i < object.public_dependency.length; ++i)
                            message.public_dependency[i] = object.public_dependency[i] | 0;
                    }
                    if (object.weak_dependency) {
                        if (!Array.isArray(object.weak_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weak_dependency: array expected");
                        message.weak_dependency = [];
                        for (var i = 0; i < object.weak_dependency.length; ++i)
                            message.weak_dependency[i] = object.weak_dependency[i] | 0;
                    }
                    if (object.message_type) {
                        if (!Array.isArray(object.message_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.message_type: array expected");
                        message.message_type = [];
                        for (var i = 0; i < object.message_type.length; ++i) {
                            if (typeof object.message_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.message_type: object expected");
                            message.message_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.message_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.source_code_info != null) {
                        if (typeof object.source_code_info !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.source_code_info: object expected");
                        message.source_code_info = $root.google.protobuf.SourceCodeInfo.fromObject(object.source_code_info);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.message_type = [];
                        object.enum_type = [];
                        object.service = [];
                        object.extension = [];
                        object.public_dependency = [];
                        object.weak_dependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.source_code_info = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.message_type && message.message_type.length) {
                        object.message_type = [];
                        for (var j = 0; j < message.message_type.length; ++j)
                            object.message_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.message_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        object.source_code_info = $root.google.protobuf.SourceCodeInfo.toObject(message.source_code_info, options);
                    if (message.public_dependency && message.public_dependency.length) {
                        object.public_dependency = [];
                        for (var j = 0; j < message.public_dependency.length; ++j)
                            object.public_dependency[j] = message.public_dependency[j];
                    }
                    if (message.weak_dependency && message.weak_dependency.length) {
                        object.weak_dependency = [];
                        for (var j = 0; j < message.weak_dependency.length; ++j)
                            object.weak_dependency[j] = message.weak_dependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nested_type] DescriptorProto nested_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] DescriptorProto enum_type
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extension_range] DescriptorProto extension_range
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneof_decl] DescriptorProto oneof_decl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reserved_range] DescriptorProto reserved_range
                 * @property {Array.<string>|null} [reserved_name] DescriptorProto reserved_name
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nested_type = [];
                    this.enum_type = [];
                    this.extension_range = [];
                    this.oneof_decl = [];
                    this.reserved_range = [];
                    this.reserved_name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nested_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nested_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nested_type = $util.emptyArray;
    
                /**
                 * DescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * DescriptorProto extension_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extension_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension_range = $util.emptyArray;
    
                /**
                 * DescriptorProto oneof_decl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneof_decl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneof_decl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reserved_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reserved_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_range = $util.emptyArray;
    
                /**
                 * DescriptorProto reserved_name.
                 * @member {Array.<string>} reserved_name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_name = $util.emptyArray;
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nested_type != null && message.nested_type.length)
                        for (var i = 0; i < message.nested_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nested_type[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extension_range != null && message.extension_range.length)
                        for (var i = 0; i < message.extension_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extension_range[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneof_decl != null && message.oneof_decl.length)
                        for (var i = 0; i < message.oneof_decl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneof_decl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reserved_range != null && message.reserved_range.length)
                        for (var i = 0; i < message.reserved_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reserved_range[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reserved_name != null && message.reserved_name.length)
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reserved_name[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nested_type && message.nested_type.length))
                                message.nested_type = [];
                            message.nested_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extension_range && message.extension_range.length))
                                message.extension_range = [];
                            message.extension_range.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneof_decl && message.oneof_decl.length))
                                message.oneof_decl = [];
                            message.oneof_decl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reserved_range && message.reserved_range.length))
                                message.reserved_range = [];
                            message.reserved_range.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reserved_name && message.reserved_name.length))
                                message.reserved_name = [];
                            message.reserved_name.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nested_type != null && message.hasOwnProperty("nested_type")) {
                        if (!Array.isArray(message.nested_type))
                            return "nested_type: array expected";
                        for (var i = 0; i < message.nested_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nested_type[i]);
                            if (error)
                                return "nested_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.extension_range != null && message.hasOwnProperty("extension_range")) {
                        if (!Array.isArray(message.extension_range))
                            return "extension_range: array expected";
                        for (var i = 0; i < message.extension_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extension_range[i]);
                            if (error)
                                return "extension_range." + error;
                        }
                    }
                    if (message.oneof_decl != null && message.hasOwnProperty("oneof_decl")) {
                        if (!Array.isArray(message.oneof_decl))
                            return "oneof_decl: array expected";
                        for (var i = 0; i < message.oneof_decl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneof_decl[i]);
                            if (error)
                                return "oneof_decl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reserved_range != null && message.hasOwnProperty("reserved_range")) {
                        if (!Array.isArray(message.reserved_range))
                            return "reserved_range: array expected";
                        for (var i = 0; i < message.reserved_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reserved_range[i]);
                            if (error)
                                return "reserved_range." + error;
                        }
                    }
                    if (message.reserved_name != null && message.hasOwnProperty("reserved_name")) {
                        if (!Array.isArray(message.reserved_name))
                            return "reserved_name: array expected";
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            if (!$util.isString(message.reserved_name[i]))
                                return "reserved_name: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nested_type) {
                        if (!Array.isArray(object.nested_type))
                            throw TypeError(".google.protobuf.DescriptorProto.nested_type: array expected");
                        message.nested_type = [];
                        for (var i = 0; i < object.nested_type.length; ++i) {
                            if (typeof object.nested_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nested_type: object expected");
                            message.nested_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nested_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.DescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.extension_range) {
                        if (!Array.isArray(object.extension_range))
                            throw TypeError(".google.protobuf.DescriptorProto.extension_range: array expected");
                        message.extension_range = [];
                        for (var i = 0; i < object.extension_range.length; ++i) {
                            if (typeof object.extension_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension_range: object expected");
                            message.extension_range[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extension_range[i]);
                        }
                    }
                    if (object.oneof_decl) {
                        if (!Array.isArray(object.oneof_decl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: array expected");
                        message.oneof_decl = [];
                        for (var i = 0; i < object.oneof_decl.length; ++i) {
                            if (typeof object.oneof_decl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: object expected");
                            message.oneof_decl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneof_decl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reserved_range) {
                        if (!Array.isArray(object.reserved_range))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_range: array expected");
                        message.reserved_range = [];
                        for (var i = 0; i < object.reserved_range.length; ++i) {
                            if (typeof object.reserved_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reserved_range: object expected");
                            message.reserved_range[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reserved_range[i]);
                        }
                    }
                    if (object.reserved_name) {
                        if (!Array.isArray(object.reserved_name))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_name: array expected");
                        message.reserved_name = [];
                        for (var i = 0; i < object.reserved_name.length; ++i)
                            message.reserved_name[i] = String(object.reserved_name[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nested_type = [];
                        object.enum_type = [];
                        object.extension_range = [];
                        object.extension = [];
                        object.oneof_decl = [];
                        object.reserved_range = [];
                        object.reserved_name = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nested_type && message.nested_type.length) {
                        object.nested_type = [];
                        for (var j = 0; j < message.nested_type.length; ++j)
                            object.nested_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.nested_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.extension_range && message.extension_range.length) {
                        object.extension_range = [];
                        for (var j = 0; j < message.extension_range.length; ++j)
                            object.extension_range[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extension_range[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneof_decl && message.oneof_decl.length) {
                        object.oneof_decl = [];
                        for (var j = 0; j < message.oneof_decl.length; ++j)
                            object.oneof_decl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneof_decl[j], options);
                    }
                    if (message.reserved_range && message.reserved_range.length) {
                        object.reserved_range = [];
                        for (var j = 0; j < message.reserved_range.length; ++j)
                            object.reserved_range[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reserved_range[j], options);
                    }
                    if (message.reserved_name && message.reserved_name.length) {
                        object.reserved_name = [];
                        for (var j = 0; j < message.reserved_name.length; ++j)
                            object.reserved_name[j] = message.reserved_name[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [type_name] FieldDescriptorProto type_name
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [default_value] FieldDescriptorProto default_value
                 * @property {number|null} [oneof_index] FieldDescriptorProto oneof_index
                 * @property {string|null} [json_name] FieldDescriptorProto json_name
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto type_name.
                 * @member {string} type_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type_name = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto default_value.
                 * @member {string} default_value
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.default_value = "";
    
                /**
                 * FieldDescriptorProto oneof_index.
                 * @member {number} oneof_index
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneof_index = 0;
    
                /**
                 * FieldDescriptorProto json_name.
                 * @member {string} json_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.json_name = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.type_name != null && Object.hasOwnProperty.call(message, "type_name"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.type_name);
                    if (message.default_value != null && Object.hasOwnProperty.call(message, "default_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.default_value);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneof_index != null && Object.hasOwnProperty.call(message, "oneof_index"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneof_index);
                    if (message.json_name != null && Object.hasOwnProperty.call(message, "json_name"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.json_name);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.type_name = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.default_value = reader.string();
                            break;
                        case 9:
                            message.oneof_index = reader.int32();
                            break;
                        case 10:
                            message.json_name = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        if (!$util.isString(message.type_name))
                            return "type_name: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        if (!$util.isString(message.default_value))
                            return "default_value: string expected";
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        if (!$util.isInteger(message.oneof_index))
                            return "oneof_index: integer expected";
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        if (!$util.isString(message.json_name))
                            return "json_name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.type_name != null)
                        message.type_name = String(object.type_name);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.default_value != null)
                        message.default_value = String(object.default_value);
                    if (object.oneof_index != null)
                        message.oneof_index = object.oneof_index | 0;
                    if (object.json_name != null)
                        message.json_name = String(object.json_name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.type_name = "";
                        object.default_value = "";
                        object.options = null;
                        object.oneof_index = 0;
                        object.json_name = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        object.type_name = message.type_name;
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        object.default_value = message.default_value;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        object.oneof_index = message.oneof_index;
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        object.json_name = message.json_name;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [input_type] MethodDescriptorProto input_type
                 * @property {string|null} [output_type] MethodDescriptorProto output_type
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [client_streaming] MethodDescriptorProto client_streaming
                 * @property {boolean|null} [server_streaming] MethodDescriptorProto server_streaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto input_type.
                 * @member {string} input_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.input_type = "";
    
                /**
                 * MethodDescriptorProto output_type.
                 * @member {string} output_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.output_type = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto client_streaming.
                 * @member {boolean} client_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.client_streaming = false;
    
                /**
                 * MethodDescriptorProto server_streaming.
                 * @member {boolean} server_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.server_streaming = false;
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.input_type != null && Object.hasOwnProperty.call(message, "input_type"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.input_type);
                    if (message.output_type != null && Object.hasOwnProperty.call(message, "output_type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.output_type);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.client_streaming != null && Object.hasOwnProperty.call(message, "client_streaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.client_streaming);
                    if (message.server_streaming != null && Object.hasOwnProperty.call(message, "server_streaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.server_streaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.input_type = reader.string();
                            break;
                        case 3:
                            message.output_type = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.client_streaming = reader.bool();
                            break;
                        case 6:
                            message.server_streaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        if (!$util.isString(message.input_type))
                            return "input_type: string expected";
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        if (!$util.isString(message.output_type))
                            return "output_type: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        if (typeof message.client_streaming !== "boolean")
                            return "client_streaming: boolean expected";
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        if (typeof message.server_streaming !== "boolean")
                            return "server_streaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.input_type != null)
                        message.input_type = String(object.input_type);
                    if (object.output_type != null)
                        message.output_type = String(object.output_type);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.client_streaming != null)
                        message.client_streaming = Boolean(object.client_streaming);
                    if (object.server_streaming != null)
                        message.server_streaming = Boolean(object.server_streaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.input_type = "";
                        object.output_type = "";
                        object.options = null;
                        object.client_streaming = false;
                        object.server_streaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        object.input_type = message.input_type;
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        object.output_type = message.output_type;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        object.client_streaming = message.client_streaming;
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        object.server_streaming = message.server_streaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [java_package] FileOptions java_package
                 * @property {string|null} [java_outer_classname] FileOptions java_outer_classname
                 * @property {boolean|null} [java_multiple_files] FileOptions java_multiple_files
                 * @property {boolean|null} [java_generate_equals_and_hash] FileOptions java_generate_equals_and_hash
                 * @property {boolean|null} [java_string_check_utf8] FileOptions java_string_check_utf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimize_for] FileOptions optimize_for
                 * @property {string|null} [go_package] FileOptions go_package
                 * @property {boolean|null} [cc_generic_services] FileOptions cc_generic_services
                 * @property {boolean|null} [java_generic_services] FileOptions java_generic_services
                 * @property {boolean|null} [py_generic_services] FileOptions py_generic_services
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [cc_enable_arenas] FileOptions cc_enable_arenas
                 * @property {string|null} [objc_class_prefix] FileOptions objc_class_prefix
                 * @property {string|null} [csharp_namespace] FileOptions csharp_namespace
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FileOptions uninterpreted_option
                 * @property {boolean|null} [".gogoproto.goproto_getters_all"] FileOptions .gogoproto.goproto_getters_all
                 * @property {boolean|null} [".gogoproto.goproto_enum_prefix_all"] FileOptions .gogoproto.goproto_enum_prefix_all
                 * @property {boolean|null} [".gogoproto.goproto_stringer_all"] FileOptions .gogoproto.goproto_stringer_all
                 * @property {boolean|null} [".gogoproto.verbose_equal_all"] FileOptions .gogoproto.verbose_equal_all
                 * @property {boolean|null} [".gogoproto.face_all"] FileOptions .gogoproto.face_all
                 * @property {boolean|null} [".gogoproto.gostring_all"] FileOptions .gogoproto.gostring_all
                 * @property {boolean|null} [".gogoproto.populate_all"] FileOptions .gogoproto.populate_all
                 * @property {boolean|null} [".gogoproto.stringer_all"] FileOptions .gogoproto.stringer_all
                 * @property {boolean|null} [".gogoproto.onlyone_all"] FileOptions .gogoproto.onlyone_all
                 * @property {boolean|null} [".gogoproto.equal_all"] FileOptions .gogoproto.equal_all
                 * @property {boolean|null} [".gogoproto.description_all"] FileOptions .gogoproto.description_all
                 * @property {boolean|null} [".gogoproto.testgen_all"] FileOptions .gogoproto.testgen_all
                 * @property {boolean|null} [".gogoproto.benchgen_all"] FileOptions .gogoproto.benchgen_all
                 * @property {boolean|null} [".gogoproto.marshaler_all"] FileOptions .gogoproto.marshaler_all
                 * @property {boolean|null} [".gogoproto.unmarshaler_all"] FileOptions .gogoproto.unmarshaler_all
                 * @property {boolean|null} [".gogoproto.stable_marshaler_all"] FileOptions .gogoproto.stable_marshaler_all
                 * @property {boolean|null} [".gogoproto.sizer_all"] FileOptions .gogoproto.sizer_all
                 * @property {boolean|null} [".gogoproto.goproto_enum_stringer_all"] FileOptions .gogoproto.goproto_enum_stringer_all
                 * @property {boolean|null} [".gogoproto.enum_stringer_all"] FileOptions .gogoproto.enum_stringer_all
                 * @property {boolean|null} [".gogoproto.unsafe_marshaler_all"] FileOptions .gogoproto.unsafe_marshaler_all
                 * @property {boolean|null} [".gogoproto.unsafe_unmarshaler_all"] FileOptions .gogoproto.unsafe_unmarshaler_all
                 * @property {boolean|null} [".gogoproto.goproto_extensions_map_all"] FileOptions .gogoproto.goproto_extensions_map_all
                 * @property {boolean|null} [".gogoproto.goproto_unrecognized_all"] FileOptions .gogoproto.goproto_unrecognized_all
                 * @property {boolean|null} [".gogoproto.gogoproto_import"] FileOptions .gogoproto.gogoproto_import
                 * @property {boolean|null} [".gogoproto.protosizer_all"] FileOptions .gogoproto.protosizer_all
                 * @property {boolean|null} [".gogoproto.compare_all"] FileOptions .gogoproto.compare_all
                 * @property {boolean|null} [".gogoproto.typedecl_all"] FileOptions .gogoproto.typedecl_all
                 * @property {boolean|null} [".gogoproto.enumdecl_all"] FileOptions .gogoproto.enumdecl_all
                 * @property {boolean|null} [".gogoproto.goproto_registration"] FileOptions .gogoproto.goproto_registration
                 * @property {boolean|null} [".gogoproto.messagename_all"] FileOptions .gogoproto.messagename_all
                 * @property {boolean|null} [".gogoproto.goproto_sizecache_all"] FileOptions .gogoproto.goproto_sizecache_all
                 * @property {boolean|null} [".gogoproto.goproto_unkeyed_all"] FileOptions .gogoproto.goproto_unkeyed_all
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions java_package.
                 * @member {string} java_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_package = "";
    
                /**
                 * FileOptions java_outer_classname.
                 * @member {string} java_outer_classname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_outer_classname = "";
    
                /**
                 * FileOptions java_multiple_files.
                 * @member {boolean} java_multiple_files
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_multiple_files = false;
    
                /**
                 * FileOptions java_generate_equals_and_hash.
                 * @member {boolean} java_generate_equals_and_hash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generate_equals_and_hash = false;
    
                /**
                 * FileOptions java_string_check_utf8.
                 * @member {boolean} java_string_check_utf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_string_check_utf8 = false;
    
                /**
                 * FileOptions optimize_for.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimize_for
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimize_for = 1;
    
                /**
                 * FileOptions go_package.
                 * @member {string} go_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.go_package = "";
    
                /**
                 * FileOptions cc_generic_services.
                 * @member {boolean} cc_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_generic_services = false;
    
                /**
                 * FileOptions java_generic_services.
                 * @member {boolean} java_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generic_services = false;
    
                /**
                 * FileOptions py_generic_services.
                 * @member {boolean} py_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.py_generic_services = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions cc_enable_arenas.
                 * @member {boolean} cc_enable_arenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_enable_arenas = false;
    
                /**
                 * FileOptions objc_class_prefix.
                 * @member {string} objc_class_prefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objc_class_prefix = "";
    
                /**
                 * FileOptions csharp_namespace.
                 * @member {string} csharp_namespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharp_namespace = "";
    
                /**
                 * FileOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FileOptions .gogoproto.goproto_getters_all.
                 * @member {boolean} .gogoproto.goproto_getters_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_getters_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_enum_prefix_all.
                 * @member {boolean} .gogoproto.goproto_enum_prefix_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_enum_prefix_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_stringer_all.
                 * @member {boolean} .gogoproto.goproto_stringer_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_stringer_all"] = false;
    
                /**
                 * FileOptions .gogoproto.verbose_equal_all.
                 * @member {boolean} .gogoproto.verbose_equal_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.verbose_equal_all"] = false;
    
                /**
                 * FileOptions .gogoproto.face_all.
                 * @member {boolean} .gogoproto.face_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.face_all"] = false;
    
                /**
                 * FileOptions .gogoproto.gostring_all.
                 * @member {boolean} .gogoproto.gostring_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.gostring_all"] = false;
    
                /**
                 * FileOptions .gogoproto.populate_all.
                 * @member {boolean} .gogoproto.populate_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.populate_all"] = false;
    
                /**
                 * FileOptions .gogoproto.stringer_all.
                 * @member {boolean} .gogoproto.stringer_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.stringer_all"] = false;
    
                /**
                 * FileOptions .gogoproto.onlyone_all.
                 * @member {boolean} .gogoproto.onlyone_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.onlyone_all"] = false;
    
                /**
                 * FileOptions .gogoproto.equal_all.
                 * @member {boolean} .gogoproto.equal_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.equal_all"] = false;
    
                /**
                 * FileOptions .gogoproto.description_all.
                 * @member {boolean} .gogoproto.description_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.description_all"] = false;
    
                /**
                 * FileOptions .gogoproto.testgen_all.
                 * @member {boolean} .gogoproto.testgen_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.testgen_all"] = false;
    
                /**
                 * FileOptions .gogoproto.benchgen_all.
                 * @member {boolean} .gogoproto.benchgen_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.benchgen_all"] = false;
    
                /**
                 * FileOptions .gogoproto.marshaler_all.
                 * @member {boolean} .gogoproto.marshaler_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.marshaler_all"] = false;
    
                /**
                 * FileOptions .gogoproto.unmarshaler_all.
                 * @member {boolean} .gogoproto.unmarshaler_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.unmarshaler_all"] = false;
    
                /**
                 * FileOptions .gogoproto.stable_marshaler_all.
                 * @member {boolean} .gogoproto.stable_marshaler_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.stable_marshaler_all"] = false;
    
                /**
                 * FileOptions .gogoproto.sizer_all.
                 * @member {boolean} .gogoproto.sizer_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.sizer_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_enum_stringer_all.
                 * @member {boolean} .gogoproto.goproto_enum_stringer_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_enum_stringer_all"] = false;
    
                /**
                 * FileOptions .gogoproto.enum_stringer_all.
                 * @member {boolean} .gogoproto.enum_stringer_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.enum_stringer_all"] = false;
    
                /**
                 * FileOptions .gogoproto.unsafe_marshaler_all.
                 * @member {boolean} .gogoproto.unsafe_marshaler_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.unsafe_marshaler_all"] = false;
    
                /**
                 * FileOptions .gogoproto.unsafe_unmarshaler_all.
                 * @member {boolean} .gogoproto.unsafe_unmarshaler_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.unsafe_unmarshaler_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_extensions_map_all.
                 * @member {boolean} .gogoproto.goproto_extensions_map_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_extensions_map_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_unrecognized_all.
                 * @member {boolean} .gogoproto.goproto_unrecognized_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_unrecognized_all"] = false;
    
                /**
                 * FileOptions .gogoproto.gogoproto_import.
                 * @member {boolean} .gogoproto.gogoproto_import
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.gogoproto_import"] = false;
    
                /**
                 * FileOptions .gogoproto.protosizer_all.
                 * @member {boolean} .gogoproto.protosizer_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.protosizer_all"] = false;
    
                /**
                 * FileOptions .gogoproto.compare_all.
                 * @member {boolean} .gogoproto.compare_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.compare_all"] = false;
    
                /**
                 * FileOptions .gogoproto.typedecl_all.
                 * @member {boolean} .gogoproto.typedecl_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.typedecl_all"] = false;
    
                /**
                 * FileOptions .gogoproto.enumdecl_all.
                 * @member {boolean} .gogoproto.enumdecl_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.enumdecl_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_registration.
                 * @member {boolean} .gogoproto.goproto_registration
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_registration"] = false;
    
                /**
                 * FileOptions .gogoproto.messagename_all.
                 * @member {boolean} .gogoproto.messagename_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.messagename_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_sizecache_all.
                 * @member {boolean} .gogoproto.goproto_sizecache_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_sizecache_all"] = false;
    
                /**
                 * FileOptions .gogoproto.goproto_unkeyed_all.
                 * @member {boolean} .gogoproto.goproto_unkeyed_all
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".gogoproto.goproto_unkeyed_all"] = false;
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.java_package != null && Object.hasOwnProperty.call(message, "java_package"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.java_package);
                    if (message.java_outer_classname != null && Object.hasOwnProperty.call(message, "java_outer_classname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.java_outer_classname);
                    if (message.optimize_for != null && Object.hasOwnProperty.call(message, "optimize_for"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimize_for);
                    if (message.java_multiple_files != null && Object.hasOwnProperty.call(message, "java_multiple_files"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.java_multiple_files);
                    if (message.go_package != null && Object.hasOwnProperty.call(message, "go_package"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.go_package);
                    if (message.cc_generic_services != null && Object.hasOwnProperty.call(message, "cc_generic_services"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.cc_generic_services);
                    if (message.java_generic_services != null && Object.hasOwnProperty.call(message, "java_generic_services"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.java_generic_services);
                    if (message.py_generic_services != null && Object.hasOwnProperty.call(message, "py_generic_services"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.py_generic_services);
                    if (message.java_generate_equals_and_hash != null && Object.hasOwnProperty.call(message, "java_generate_equals_and_hash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.java_generate_equals_and_hash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.java_string_check_utf8 != null && Object.hasOwnProperty.call(message, "java_string_check_utf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.java_string_check_utf8);
                    if (message.cc_enable_arenas != null && Object.hasOwnProperty.call(message, "cc_enable_arenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.cc_enable_arenas);
                    if (message.objc_class_prefix != null && Object.hasOwnProperty.call(message, "objc_class_prefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objc_class_prefix);
                    if (message.csharp_namespace != null && Object.hasOwnProperty.call(message, "csharp_namespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharp_namespace);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".gogoproto.goproto_getters_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_getters_all"))
                        writer.uint32(/* id 63001, wireType 0 =*/504008).bool(message[".gogoproto.goproto_getters_all"]);
                    if (message[".gogoproto.goproto_enum_prefix_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_prefix_all"))
                        writer.uint32(/* id 63002, wireType 0 =*/504016).bool(message[".gogoproto.goproto_enum_prefix_all"]);
                    if (message[".gogoproto.goproto_stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_stringer_all"))
                        writer.uint32(/* id 63003, wireType 0 =*/504024).bool(message[".gogoproto.goproto_stringer_all"]);
                    if (message[".gogoproto.verbose_equal_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.verbose_equal_all"))
                        writer.uint32(/* id 63004, wireType 0 =*/504032).bool(message[".gogoproto.verbose_equal_all"]);
                    if (message[".gogoproto.face_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.face_all"))
                        writer.uint32(/* id 63005, wireType 0 =*/504040).bool(message[".gogoproto.face_all"]);
                    if (message[".gogoproto.gostring_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.gostring_all"))
                        writer.uint32(/* id 63006, wireType 0 =*/504048).bool(message[".gogoproto.gostring_all"]);
                    if (message[".gogoproto.populate_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.populate_all"))
                        writer.uint32(/* id 63007, wireType 0 =*/504056).bool(message[".gogoproto.populate_all"]);
                    if (message[".gogoproto.stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stringer_all"))
                        writer.uint32(/* id 63008, wireType 0 =*/504064).bool(message[".gogoproto.stringer_all"]);
                    if (message[".gogoproto.onlyone_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.onlyone_all"))
                        writer.uint32(/* id 63009, wireType 0 =*/504072).bool(message[".gogoproto.onlyone_all"]);
                    if (message[".gogoproto.equal_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.equal_all"))
                        writer.uint32(/* id 63013, wireType 0 =*/504104).bool(message[".gogoproto.equal_all"]);
                    if (message[".gogoproto.description_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.description_all"))
                        writer.uint32(/* id 63014, wireType 0 =*/504112).bool(message[".gogoproto.description_all"]);
                    if (message[".gogoproto.testgen_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.testgen_all"))
                        writer.uint32(/* id 63015, wireType 0 =*/504120).bool(message[".gogoproto.testgen_all"]);
                    if (message[".gogoproto.benchgen_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.benchgen_all"))
                        writer.uint32(/* id 63016, wireType 0 =*/504128).bool(message[".gogoproto.benchgen_all"]);
                    if (message[".gogoproto.marshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.marshaler_all"))
                        writer.uint32(/* id 63017, wireType 0 =*/504136).bool(message[".gogoproto.marshaler_all"]);
                    if (message[".gogoproto.unmarshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unmarshaler_all"))
                        writer.uint32(/* id 63018, wireType 0 =*/504144).bool(message[".gogoproto.unmarshaler_all"]);
                    if (message[".gogoproto.stable_marshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stable_marshaler_all"))
                        writer.uint32(/* id 63019, wireType 0 =*/504152).bool(message[".gogoproto.stable_marshaler_all"]);
                    if (message[".gogoproto.sizer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.sizer_all"))
                        writer.uint32(/* id 63020, wireType 0 =*/504160).bool(message[".gogoproto.sizer_all"]);
                    if (message[".gogoproto.goproto_enum_stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_stringer_all"))
                        writer.uint32(/* id 63021, wireType 0 =*/504168).bool(message[".gogoproto.goproto_enum_stringer_all"]);
                    if (message[".gogoproto.enum_stringer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enum_stringer_all"))
                        writer.uint32(/* id 63022, wireType 0 =*/504176).bool(message[".gogoproto.enum_stringer_all"]);
                    if (message[".gogoproto.unsafe_marshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_marshaler_all"))
                        writer.uint32(/* id 63023, wireType 0 =*/504184).bool(message[".gogoproto.unsafe_marshaler_all"]);
                    if (message[".gogoproto.unsafe_unmarshaler_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_unmarshaler_all"))
                        writer.uint32(/* id 63024, wireType 0 =*/504192).bool(message[".gogoproto.unsafe_unmarshaler_all"]);
                    if (message[".gogoproto.goproto_extensions_map_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_extensions_map_all"))
                        writer.uint32(/* id 63025, wireType 0 =*/504200).bool(message[".gogoproto.goproto_extensions_map_all"]);
                    if (message[".gogoproto.goproto_unrecognized_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unrecognized_all"))
                        writer.uint32(/* id 63026, wireType 0 =*/504208).bool(message[".gogoproto.goproto_unrecognized_all"]);
                    if (message[".gogoproto.gogoproto_import"] != null && Object.hasOwnProperty.call(message, ".gogoproto.gogoproto_import"))
                        writer.uint32(/* id 63027, wireType 0 =*/504216).bool(message[".gogoproto.gogoproto_import"]);
                    if (message[".gogoproto.protosizer_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.protosizer_all"))
                        writer.uint32(/* id 63028, wireType 0 =*/504224).bool(message[".gogoproto.protosizer_all"]);
                    if (message[".gogoproto.compare_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.compare_all"))
                        writer.uint32(/* id 63029, wireType 0 =*/504232).bool(message[".gogoproto.compare_all"]);
                    if (message[".gogoproto.typedecl_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.typedecl_all"))
                        writer.uint32(/* id 63030, wireType 0 =*/504240).bool(message[".gogoproto.typedecl_all"]);
                    if (message[".gogoproto.enumdecl_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enumdecl_all"))
                        writer.uint32(/* id 63031, wireType 0 =*/504248).bool(message[".gogoproto.enumdecl_all"]);
                    if (message[".gogoproto.goproto_registration"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_registration"))
                        writer.uint32(/* id 63032, wireType 0 =*/504256).bool(message[".gogoproto.goproto_registration"]);
                    if (message[".gogoproto.messagename_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.messagename_all"))
                        writer.uint32(/* id 63033, wireType 0 =*/504264).bool(message[".gogoproto.messagename_all"]);
                    if (message[".gogoproto.goproto_sizecache_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_sizecache_all"))
                        writer.uint32(/* id 63034, wireType 0 =*/504272).bool(message[".gogoproto.goproto_sizecache_all"]);
                    if (message[".gogoproto.goproto_unkeyed_all"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unkeyed_all"))
                        writer.uint32(/* id 63035, wireType 0 =*/504280).bool(message[".gogoproto.goproto_unkeyed_all"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.java_package = reader.string();
                            break;
                        case 8:
                            message.java_outer_classname = reader.string();
                            break;
                        case 10:
                            message.java_multiple_files = reader.bool();
                            break;
                        case 20:
                            message.java_generate_equals_and_hash = reader.bool();
                            break;
                        case 27:
                            message.java_string_check_utf8 = reader.bool();
                            break;
                        case 9:
                            message.optimize_for = reader.int32();
                            break;
                        case 11:
                            message.go_package = reader.string();
                            break;
                        case 16:
                            message.cc_generic_services = reader.bool();
                            break;
                        case 17:
                            message.java_generic_services = reader.bool();
                            break;
                        case 18:
                            message.py_generic_services = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.cc_enable_arenas = reader.bool();
                            break;
                        case 36:
                            message.objc_class_prefix = reader.string();
                            break;
                        case 37:
                            message.csharp_namespace = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 63001:
                            message[".gogoproto.goproto_getters_all"] = reader.bool();
                            break;
                        case 63002:
                            message[".gogoproto.goproto_enum_prefix_all"] = reader.bool();
                            break;
                        case 63003:
                            message[".gogoproto.goproto_stringer_all"] = reader.bool();
                            break;
                        case 63004:
                            message[".gogoproto.verbose_equal_all"] = reader.bool();
                            break;
                        case 63005:
                            message[".gogoproto.face_all"] = reader.bool();
                            break;
                        case 63006:
                            message[".gogoproto.gostring_all"] = reader.bool();
                            break;
                        case 63007:
                            message[".gogoproto.populate_all"] = reader.bool();
                            break;
                        case 63008:
                            message[".gogoproto.stringer_all"] = reader.bool();
                            break;
                        case 63009:
                            message[".gogoproto.onlyone_all"] = reader.bool();
                            break;
                        case 63013:
                            message[".gogoproto.equal_all"] = reader.bool();
                            break;
                        case 63014:
                            message[".gogoproto.description_all"] = reader.bool();
                            break;
                        case 63015:
                            message[".gogoproto.testgen_all"] = reader.bool();
                            break;
                        case 63016:
                            message[".gogoproto.benchgen_all"] = reader.bool();
                            break;
                        case 63017:
                            message[".gogoproto.marshaler_all"] = reader.bool();
                            break;
                        case 63018:
                            message[".gogoproto.unmarshaler_all"] = reader.bool();
                            break;
                        case 63019:
                            message[".gogoproto.stable_marshaler_all"] = reader.bool();
                            break;
                        case 63020:
                            message[".gogoproto.sizer_all"] = reader.bool();
                            break;
                        case 63021:
                            message[".gogoproto.goproto_enum_stringer_all"] = reader.bool();
                            break;
                        case 63022:
                            message[".gogoproto.enum_stringer_all"] = reader.bool();
                            break;
                        case 63023:
                            message[".gogoproto.unsafe_marshaler_all"] = reader.bool();
                            break;
                        case 63024:
                            message[".gogoproto.unsafe_unmarshaler_all"] = reader.bool();
                            break;
                        case 63025:
                            message[".gogoproto.goproto_extensions_map_all"] = reader.bool();
                            break;
                        case 63026:
                            message[".gogoproto.goproto_unrecognized_all"] = reader.bool();
                            break;
                        case 63027:
                            message[".gogoproto.gogoproto_import"] = reader.bool();
                            break;
                        case 63028:
                            message[".gogoproto.protosizer_all"] = reader.bool();
                            break;
                        case 63029:
                            message[".gogoproto.compare_all"] = reader.bool();
                            break;
                        case 63030:
                            message[".gogoproto.typedecl_all"] = reader.bool();
                            break;
                        case 63031:
                            message[".gogoproto.enumdecl_all"] = reader.bool();
                            break;
                        case 63032:
                            message[".gogoproto.goproto_registration"] = reader.bool();
                            break;
                        case 63033:
                            message[".gogoproto.messagename_all"] = reader.bool();
                            break;
                        case 63034:
                            message[".gogoproto.goproto_sizecache_all"] = reader.bool();
                            break;
                        case 63035:
                            message[".gogoproto.goproto_unkeyed_all"] = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        if (!$util.isString(message.java_package))
                            return "java_package: string expected";
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        if (!$util.isString(message.java_outer_classname))
                            return "java_outer_classname: string expected";
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        if (typeof message.java_multiple_files !== "boolean")
                            return "java_multiple_files: boolean expected";
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        if (typeof message.java_generate_equals_and_hash !== "boolean")
                            return "java_generate_equals_and_hash: boolean expected";
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        if (typeof message.java_string_check_utf8 !== "boolean")
                            return "java_string_check_utf8: boolean expected";
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        switch (message.optimize_for) {
                        default:
                            return "optimize_for: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        if (!$util.isString(message.go_package))
                            return "go_package: string expected";
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        if (typeof message.cc_generic_services !== "boolean")
                            return "cc_generic_services: boolean expected";
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        if (typeof message.java_generic_services !== "boolean")
                            return "java_generic_services: boolean expected";
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        if (typeof message.py_generic_services !== "boolean")
                            return "py_generic_services: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        if (typeof message.cc_enable_arenas !== "boolean")
                            return "cc_enable_arenas: boolean expected";
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        if (!$util.isString(message.objc_class_prefix))
                            return "objc_class_prefix: string expected";
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        if (!$util.isString(message.csharp_namespace))
                            return "csharp_namespace: string expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".gogoproto.goproto_getters_all"] != null && message.hasOwnProperty(".gogoproto.goproto_getters_all"))
                        if (typeof message[".gogoproto.goproto_getters_all"] !== "boolean")
                            return ".gogoproto.goproto_getters_all: boolean expected";
                    if (message[".gogoproto.goproto_enum_prefix_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix_all"))
                        if (typeof message[".gogoproto.goproto_enum_prefix_all"] !== "boolean")
                            return ".gogoproto.goproto_enum_prefix_all: boolean expected";
                    if (message[".gogoproto.goproto_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer_all"))
                        if (typeof message[".gogoproto.goproto_stringer_all"] !== "boolean")
                            return ".gogoproto.goproto_stringer_all: boolean expected";
                    if (message[".gogoproto.verbose_equal_all"] != null && message.hasOwnProperty(".gogoproto.verbose_equal_all"))
                        if (typeof message[".gogoproto.verbose_equal_all"] !== "boolean")
                            return ".gogoproto.verbose_equal_all: boolean expected";
                    if (message[".gogoproto.face_all"] != null && message.hasOwnProperty(".gogoproto.face_all"))
                        if (typeof message[".gogoproto.face_all"] !== "boolean")
                            return ".gogoproto.face_all: boolean expected";
                    if (message[".gogoproto.gostring_all"] != null && message.hasOwnProperty(".gogoproto.gostring_all"))
                        if (typeof message[".gogoproto.gostring_all"] !== "boolean")
                            return ".gogoproto.gostring_all: boolean expected";
                    if (message[".gogoproto.populate_all"] != null && message.hasOwnProperty(".gogoproto.populate_all"))
                        if (typeof message[".gogoproto.populate_all"] !== "boolean")
                            return ".gogoproto.populate_all: boolean expected";
                    if (message[".gogoproto.stringer_all"] != null && message.hasOwnProperty(".gogoproto.stringer_all"))
                        if (typeof message[".gogoproto.stringer_all"] !== "boolean")
                            return ".gogoproto.stringer_all: boolean expected";
                    if (message[".gogoproto.onlyone_all"] != null && message.hasOwnProperty(".gogoproto.onlyone_all"))
                        if (typeof message[".gogoproto.onlyone_all"] !== "boolean")
                            return ".gogoproto.onlyone_all: boolean expected";
                    if (message[".gogoproto.equal_all"] != null && message.hasOwnProperty(".gogoproto.equal_all"))
                        if (typeof message[".gogoproto.equal_all"] !== "boolean")
                            return ".gogoproto.equal_all: boolean expected";
                    if (message[".gogoproto.description_all"] != null && message.hasOwnProperty(".gogoproto.description_all"))
                        if (typeof message[".gogoproto.description_all"] !== "boolean")
                            return ".gogoproto.description_all: boolean expected";
                    if (message[".gogoproto.testgen_all"] != null && message.hasOwnProperty(".gogoproto.testgen_all"))
                        if (typeof message[".gogoproto.testgen_all"] !== "boolean")
                            return ".gogoproto.testgen_all: boolean expected";
                    if (message[".gogoproto.benchgen_all"] != null && message.hasOwnProperty(".gogoproto.benchgen_all"))
                        if (typeof message[".gogoproto.benchgen_all"] !== "boolean")
                            return ".gogoproto.benchgen_all: boolean expected";
                    if (message[".gogoproto.marshaler_all"] != null && message.hasOwnProperty(".gogoproto.marshaler_all"))
                        if (typeof message[".gogoproto.marshaler_all"] !== "boolean")
                            return ".gogoproto.marshaler_all: boolean expected";
                    if (message[".gogoproto.unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unmarshaler_all"))
                        if (typeof message[".gogoproto.unmarshaler_all"] !== "boolean")
                            return ".gogoproto.unmarshaler_all: boolean expected";
                    if (message[".gogoproto.stable_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler_all"))
                        if (typeof message[".gogoproto.stable_marshaler_all"] !== "boolean")
                            return ".gogoproto.stable_marshaler_all: boolean expected";
                    if (message[".gogoproto.sizer_all"] != null && message.hasOwnProperty(".gogoproto.sizer_all"))
                        if (typeof message[".gogoproto.sizer_all"] !== "boolean")
                            return ".gogoproto.sizer_all: boolean expected";
                    if (message[".gogoproto.goproto_enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer_all"))
                        if (typeof message[".gogoproto.goproto_enum_stringer_all"] !== "boolean")
                            return ".gogoproto.goproto_enum_stringer_all: boolean expected";
                    if (message[".gogoproto.enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.enum_stringer_all"))
                        if (typeof message[".gogoproto.enum_stringer_all"] !== "boolean")
                            return ".gogoproto.enum_stringer_all: boolean expected";
                    if (message[".gogoproto.unsafe_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler_all"))
                        if (typeof message[".gogoproto.unsafe_marshaler_all"] !== "boolean")
                            return ".gogoproto.unsafe_marshaler_all: boolean expected";
                    if (message[".gogoproto.unsafe_unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler_all"))
                        if (typeof message[".gogoproto.unsafe_unmarshaler_all"] !== "boolean")
                            return ".gogoproto.unsafe_unmarshaler_all: boolean expected";
                    if (message[".gogoproto.goproto_extensions_map_all"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map_all"))
                        if (typeof message[".gogoproto.goproto_extensions_map_all"] !== "boolean")
                            return ".gogoproto.goproto_extensions_map_all: boolean expected";
                    if (message[".gogoproto.goproto_unrecognized_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized_all"))
                        if (typeof message[".gogoproto.goproto_unrecognized_all"] !== "boolean")
                            return ".gogoproto.goproto_unrecognized_all: boolean expected";
                    if (message[".gogoproto.gogoproto_import"] != null && message.hasOwnProperty(".gogoproto.gogoproto_import"))
                        if (typeof message[".gogoproto.gogoproto_import"] !== "boolean")
                            return ".gogoproto.gogoproto_import: boolean expected";
                    if (message[".gogoproto.protosizer_all"] != null && message.hasOwnProperty(".gogoproto.protosizer_all"))
                        if (typeof message[".gogoproto.protosizer_all"] !== "boolean")
                            return ".gogoproto.protosizer_all: boolean expected";
                    if (message[".gogoproto.compare_all"] != null && message.hasOwnProperty(".gogoproto.compare_all"))
                        if (typeof message[".gogoproto.compare_all"] !== "boolean")
                            return ".gogoproto.compare_all: boolean expected";
                    if (message[".gogoproto.typedecl_all"] != null && message.hasOwnProperty(".gogoproto.typedecl_all"))
                        if (typeof message[".gogoproto.typedecl_all"] !== "boolean")
                            return ".gogoproto.typedecl_all: boolean expected";
                    if (message[".gogoproto.enumdecl_all"] != null && message.hasOwnProperty(".gogoproto.enumdecl_all"))
                        if (typeof message[".gogoproto.enumdecl_all"] !== "boolean")
                            return ".gogoproto.enumdecl_all: boolean expected";
                    if (message[".gogoproto.goproto_registration"] != null && message.hasOwnProperty(".gogoproto.goproto_registration"))
                        if (typeof message[".gogoproto.goproto_registration"] !== "boolean")
                            return ".gogoproto.goproto_registration: boolean expected";
                    if (message[".gogoproto.messagename_all"] != null && message.hasOwnProperty(".gogoproto.messagename_all"))
                        if (typeof message[".gogoproto.messagename_all"] !== "boolean")
                            return ".gogoproto.messagename_all: boolean expected";
                    if (message[".gogoproto.goproto_sizecache_all"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache_all"))
                        if (typeof message[".gogoproto.goproto_sizecache_all"] !== "boolean")
                            return ".gogoproto.goproto_sizecache_all: boolean expected";
                    if (message[".gogoproto.goproto_unkeyed_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed_all"))
                        if (typeof message[".gogoproto.goproto_unkeyed_all"] !== "boolean")
                            return ".gogoproto.goproto_unkeyed_all: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.java_package != null)
                        message.java_package = String(object.java_package);
                    if (object.java_outer_classname != null)
                        message.java_outer_classname = String(object.java_outer_classname);
                    if (object.java_multiple_files != null)
                        message.java_multiple_files = Boolean(object.java_multiple_files);
                    if (object.java_generate_equals_and_hash != null)
                        message.java_generate_equals_and_hash = Boolean(object.java_generate_equals_and_hash);
                    if (object.java_string_check_utf8 != null)
                        message.java_string_check_utf8 = Boolean(object.java_string_check_utf8);
                    switch (object.optimize_for) {
                    case "SPEED":
                    case 1:
                        message.optimize_for = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimize_for = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimize_for = 3;
                        break;
                    }
                    if (object.go_package != null)
                        message.go_package = String(object.go_package);
                    if (object.cc_generic_services != null)
                        message.cc_generic_services = Boolean(object.cc_generic_services);
                    if (object.java_generic_services != null)
                        message.java_generic_services = Boolean(object.java_generic_services);
                    if (object.py_generic_services != null)
                        message.py_generic_services = Boolean(object.py_generic_services);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.cc_enable_arenas != null)
                        message.cc_enable_arenas = Boolean(object.cc_enable_arenas);
                    if (object.objc_class_prefix != null)
                        message.objc_class_prefix = String(object.objc_class_prefix);
                    if (object.csharp_namespace != null)
                        message.csharp_namespace = String(object.csharp_namespace);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".gogoproto.goproto_getters_all"] != null)
                        message[".gogoproto.goproto_getters_all"] = Boolean(object[".gogoproto.goproto_getters_all"]);
                    if (object[".gogoproto.goproto_enum_prefix_all"] != null)
                        message[".gogoproto.goproto_enum_prefix_all"] = Boolean(object[".gogoproto.goproto_enum_prefix_all"]);
                    if (object[".gogoproto.goproto_stringer_all"] != null)
                        message[".gogoproto.goproto_stringer_all"] = Boolean(object[".gogoproto.goproto_stringer_all"]);
                    if (object[".gogoproto.verbose_equal_all"] != null)
                        message[".gogoproto.verbose_equal_all"] = Boolean(object[".gogoproto.verbose_equal_all"]);
                    if (object[".gogoproto.face_all"] != null)
                        message[".gogoproto.face_all"] = Boolean(object[".gogoproto.face_all"]);
                    if (object[".gogoproto.gostring_all"] != null)
                        message[".gogoproto.gostring_all"] = Boolean(object[".gogoproto.gostring_all"]);
                    if (object[".gogoproto.populate_all"] != null)
                        message[".gogoproto.populate_all"] = Boolean(object[".gogoproto.populate_all"]);
                    if (object[".gogoproto.stringer_all"] != null)
                        message[".gogoproto.stringer_all"] = Boolean(object[".gogoproto.stringer_all"]);
                    if (object[".gogoproto.onlyone_all"] != null)
                        message[".gogoproto.onlyone_all"] = Boolean(object[".gogoproto.onlyone_all"]);
                    if (object[".gogoproto.equal_all"] != null)
                        message[".gogoproto.equal_all"] = Boolean(object[".gogoproto.equal_all"]);
                    if (object[".gogoproto.description_all"] != null)
                        message[".gogoproto.description_all"] = Boolean(object[".gogoproto.description_all"]);
                    if (object[".gogoproto.testgen_all"] != null)
                        message[".gogoproto.testgen_all"] = Boolean(object[".gogoproto.testgen_all"]);
                    if (object[".gogoproto.benchgen_all"] != null)
                        message[".gogoproto.benchgen_all"] = Boolean(object[".gogoproto.benchgen_all"]);
                    if (object[".gogoproto.marshaler_all"] != null)
                        message[".gogoproto.marshaler_all"] = Boolean(object[".gogoproto.marshaler_all"]);
                    if (object[".gogoproto.unmarshaler_all"] != null)
                        message[".gogoproto.unmarshaler_all"] = Boolean(object[".gogoproto.unmarshaler_all"]);
                    if (object[".gogoproto.stable_marshaler_all"] != null)
                        message[".gogoproto.stable_marshaler_all"] = Boolean(object[".gogoproto.stable_marshaler_all"]);
                    if (object[".gogoproto.sizer_all"] != null)
                        message[".gogoproto.sizer_all"] = Boolean(object[".gogoproto.sizer_all"]);
                    if (object[".gogoproto.goproto_enum_stringer_all"] != null)
                        message[".gogoproto.goproto_enum_stringer_all"] = Boolean(object[".gogoproto.goproto_enum_stringer_all"]);
                    if (object[".gogoproto.enum_stringer_all"] != null)
                        message[".gogoproto.enum_stringer_all"] = Boolean(object[".gogoproto.enum_stringer_all"]);
                    if (object[".gogoproto.unsafe_marshaler_all"] != null)
                        message[".gogoproto.unsafe_marshaler_all"] = Boolean(object[".gogoproto.unsafe_marshaler_all"]);
                    if (object[".gogoproto.unsafe_unmarshaler_all"] != null)
                        message[".gogoproto.unsafe_unmarshaler_all"] = Boolean(object[".gogoproto.unsafe_unmarshaler_all"]);
                    if (object[".gogoproto.goproto_extensions_map_all"] != null)
                        message[".gogoproto.goproto_extensions_map_all"] = Boolean(object[".gogoproto.goproto_extensions_map_all"]);
                    if (object[".gogoproto.goproto_unrecognized_all"] != null)
                        message[".gogoproto.goproto_unrecognized_all"] = Boolean(object[".gogoproto.goproto_unrecognized_all"]);
                    if (object[".gogoproto.gogoproto_import"] != null)
                        message[".gogoproto.gogoproto_import"] = Boolean(object[".gogoproto.gogoproto_import"]);
                    if (object[".gogoproto.protosizer_all"] != null)
                        message[".gogoproto.protosizer_all"] = Boolean(object[".gogoproto.protosizer_all"]);
                    if (object[".gogoproto.compare_all"] != null)
                        message[".gogoproto.compare_all"] = Boolean(object[".gogoproto.compare_all"]);
                    if (object[".gogoproto.typedecl_all"] != null)
                        message[".gogoproto.typedecl_all"] = Boolean(object[".gogoproto.typedecl_all"]);
                    if (object[".gogoproto.enumdecl_all"] != null)
                        message[".gogoproto.enumdecl_all"] = Boolean(object[".gogoproto.enumdecl_all"]);
                    if (object[".gogoproto.goproto_registration"] != null)
                        message[".gogoproto.goproto_registration"] = Boolean(object[".gogoproto.goproto_registration"]);
                    if (object[".gogoproto.messagename_all"] != null)
                        message[".gogoproto.messagename_all"] = Boolean(object[".gogoproto.messagename_all"]);
                    if (object[".gogoproto.goproto_sizecache_all"] != null)
                        message[".gogoproto.goproto_sizecache_all"] = Boolean(object[".gogoproto.goproto_sizecache_all"]);
                    if (object[".gogoproto.goproto_unkeyed_all"] != null)
                        message[".gogoproto.goproto_unkeyed_all"] = Boolean(object[".gogoproto.goproto_unkeyed_all"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.java_package = "";
                        object.java_outer_classname = "";
                        object.optimize_for = options.enums === String ? "SPEED" : 1;
                        object.java_multiple_files = false;
                        object.go_package = "";
                        object.cc_generic_services = false;
                        object.java_generic_services = false;
                        object.py_generic_services = false;
                        object.java_generate_equals_and_hash = false;
                        object.deprecated = false;
                        object.java_string_check_utf8 = false;
                        object.cc_enable_arenas = false;
                        object.objc_class_prefix = "";
                        object.csharp_namespace = "";
                        object[".gogoproto.goproto_getters_all"] = false;
                        object[".gogoproto.goproto_enum_prefix_all"] = false;
                        object[".gogoproto.goproto_stringer_all"] = false;
                        object[".gogoproto.verbose_equal_all"] = false;
                        object[".gogoproto.face_all"] = false;
                        object[".gogoproto.gostring_all"] = false;
                        object[".gogoproto.populate_all"] = false;
                        object[".gogoproto.stringer_all"] = false;
                        object[".gogoproto.onlyone_all"] = false;
                        object[".gogoproto.equal_all"] = false;
                        object[".gogoproto.description_all"] = false;
                        object[".gogoproto.testgen_all"] = false;
                        object[".gogoproto.benchgen_all"] = false;
                        object[".gogoproto.marshaler_all"] = false;
                        object[".gogoproto.unmarshaler_all"] = false;
                        object[".gogoproto.stable_marshaler_all"] = false;
                        object[".gogoproto.sizer_all"] = false;
                        object[".gogoproto.goproto_enum_stringer_all"] = false;
                        object[".gogoproto.enum_stringer_all"] = false;
                        object[".gogoproto.unsafe_marshaler_all"] = false;
                        object[".gogoproto.unsafe_unmarshaler_all"] = false;
                        object[".gogoproto.goproto_extensions_map_all"] = false;
                        object[".gogoproto.goproto_unrecognized_all"] = false;
                        object[".gogoproto.gogoproto_import"] = false;
                        object[".gogoproto.protosizer_all"] = false;
                        object[".gogoproto.compare_all"] = false;
                        object[".gogoproto.typedecl_all"] = false;
                        object[".gogoproto.enumdecl_all"] = false;
                        object[".gogoproto.goproto_registration"] = false;
                        object[".gogoproto.messagename_all"] = false;
                        object[".gogoproto.goproto_sizecache_all"] = false;
                        object[".gogoproto.goproto_unkeyed_all"] = false;
                    }
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        object.java_package = message.java_package;
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        object.java_outer_classname = message.java_outer_classname;
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        object.optimize_for = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] : message.optimize_for;
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        object.java_multiple_files = message.java_multiple_files;
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        object.go_package = message.go_package;
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        object.cc_generic_services = message.cc_generic_services;
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        object.java_generic_services = message.java_generic_services;
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        object.py_generic_services = message.py_generic_services;
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        object.java_generate_equals_and_hash = message.java_generate_equals_and_hash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        object.java_string_check_utf8 = message.java_string_check_utf8;
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        object.cc_enable_arenas = message.cc_enable_arenas;
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        object.objc_class_prefix = message.objc_class_prefix;
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        object.csharp_namespace = message.csharp_namespace;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".gogoproto.goproto_getters_all"] != null && message.hasOwnProperty(".gogoproto.goproto_getters_all"))
                        object[".gogoproto.goproto_getters_all"] = message[".gogoproto.goproto_getters_all"];
                    if (message[".gogoproto.goproto_enum_prefix_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix_all"))
                        object[".gogoproto.goproto_enum_prefix_all"] = message[".gogoproto.goproto_enum_prefix_all"];
                    if (message[".gogoproto.goproto_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer_all"))
                        object[".gogoproto.goproto_stringer_all"] = message[".gogoproto.goproto_stringer_all"];
                    if (message[".gogoproto.verbose_equal_all"] != null && message.hasOwnProperty(".gogoproto.verbose_equal_all"))
                        object[".gogoproto.verbose_equal_all"] = message[".gogoproto.verbose_equal_all"];
                    if (message[".gogoproto.face_all"] != null && message.hasOwnProperty(".gogoproto.face_all"))
                        object[".gogoproto.face_all"] = message[".gogoproto.face_all"];
                    if (message[".gogoproto.gostring_all"] != null && message.hasOwnProperty(".gogoproto.gostring_all"))
                        object[".gogoproto.gostring_all"] = message[".gogoproto.gostring_all"];
                    if (message[".gogoproto.populate_all"] != null && message.hasOwnProperty(".gogoproto.populate_all"))
                        object[".gogoproto.populate_all"] = message[".gogoproto.populate_all"];
                    if (message[".gogoproto.stringer_all"] != null && message.hasOwnProperty(".gogoproto.stringer_all"))
                        object[".gogoproto.stringer_all"] = message[".gogoproto.stringer_all"];
                    if (message[".gogoproto.onlyone_all"] != null && message.hasOwnProperty(".gogoproto.onlyone_all"))
                        object[".gogoproto.onlyone_all"] = message[".gogoproto.onlyone_all"];
                    if (message[".gogoproto.equal_all"] != null && message.hasOwnProperty(".gogoproto.equal_all"))
                        object[".gogoproto.equal_all"] = message[".gogoproto.equal_all"];
                    if (message[".gogoproto.description_all"] != null && message.hasOwnProperty(".gogoproto.description_all"))
                        object[".gogoproto.description_all"] = message[".gogoproto.description_all"];
                    if (message[".gogoproto.testgen_all"] != null && message.hasOwnProperty(".gogoproto.testgen_all"))
                        object[".gogoproto.testgen_all"] = message[".gogoproto.testgen_all"];
                    if (message[".gogoproto.benchgen_all"] != null && message.hasOwnProperty(".gogoproto.benchgen_all"))
                        object[".gogoproto.benchgen_all"] = message[".gogoproto.benchgen_all"];
                    if (message[".gogoproto.marshaler_all"] != null && message.hasOwnProperty(".gogoproto.marshaler_all"))
                        object[".gogoproto.marshaler_all"] = message[".gogoproto.marshaler_all"];
                    if (message[".gogoproto.unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unmarshaler_all"))
                        object[".gogoproto.unmarshaler_all"] = message[".gogoproto.unmarshaler_all"];
                    if (message[".gogoproto.stable_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler_all"))
                        object[".gogoproto.stable_marshaler_all"] = message[".gogoproto.stable_marshaler_all"];
                    if (message[".gogoproto.sizer_all"] != null && message.hasOwnProperty(".gogoproto.sizer_all"))
                        object[".gogoproto.sizer_all"] = message[".gogoproto.sizer_all"];
                    if (message[".gogoproto.goproto_enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer_all"))
                        object[".gogoproto.goproto_enum_stringer_all"] = message[".gogoproto.goproto_enum_stringer_all"];
                    if (message[".gogoproto.enum_stringer_all"] != null && message.hasOwnProperty(".gogoproto.enum_stringer_all"))
                        object[".gogoproto.enum_stringer_all"] = message[".gogoproto.enum_stringer_all"];
                    if (message[".gogoproto.unsafe_marshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler_all"))
                        object[".gogoproto.unsafe_marshaler_all"] = message[".gogoproto.unsafe_marshaler_all"];
                    if (message[".gogoproto.unsafe_unmarshaler_all"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler_all"))
                        object[".gogoproto.unsafe_unmarshaler_all"] = message[".gogoproto.unsafe_unmarshaler_all"];
                    if (message[".gogoproto.goproto_extensions_map_all"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map_all"))
                        object[".gogoproto.goproto_extensions_map_all"] = message[".gogoproto.goproto_extensions_map_all"];
                    if (message[".gogoproto.goproto_unrecognized_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized_all"))
                        object[".gogoproto.goproto_unrecognized_all"] = message[".gogoproto.goproto_unrecognized_all"];
                    if (message[".gogoproto.gogoproto_import"] != null && message.hasOwnProperty(".gogoproto.gogoproto_import"))
                        object[".gogoproto.gogoproto_import"] = message[".gogoproto.gogoproto_import"];
                    if (message[".gogoproto.protosizer_all"] != null && message.hasOwnProperty(".gogoproto.protosizer_all"))
                        object[".gogoproto.protosizer_all"] = message[".gogoproto.protosizer_all"];
                    if (message[".gogoproto.compare_all"] != null && message.hasOwnProperty(".gogoproto.compare_all"))
                        object[".gogoproto.compare_all"] = message[".gogoproto.compare_all"];
                    if (message[".gogoproto.typedecl_all"] != null && message.hasOwnProperty(".gogoproto.typedecl_all"))
                        object[".gogoproto.typedecl_all"] = message[".gogoproto.typedecl_all"];
                    if (message[".gogoproto.enumdecl_all"] != null && message.hasOwnProperty(".gogoproto.enumdecl_all"))
                        object[".gogoproto.enumdecl_all"] = message[".gogoproto.enumdecl_all"];
                    if (message[".gogoproto.goproto_registration"] != null && message.hasOwnProperty(".gogoproto.goproto_registration"))
                        object[".gogoproto.goproto_registration"] = message[".gogoproto.goproto_registration"];
                    if (message[".gogoproto.messagename_all"] != null && message.hasOwnProperty(".gogoproto.messagename_all"))
                        object[".gogoproto.messagename_all"] = message[".gogoproto.messagename_all"];
                    if (message[".gogoproto.goproto_sizecache_all"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache_all"))
                        object[".gogoproto.goproto_sizecache_all"] = message[".gogoproto.goproto_sizecache_all"];
                    if (message[".gogoproto.goproto_unkeyed_all"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed_all"))
                        object[".gogoproto.goproto_unkeyed_all"] = message[".gogoproto.goproto_unkeyed_all"];
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [message_set_wire_format] MessageOptions message_set_wire_format
                 * @property {boolean|null} [no_standard_descriptor_accessor] MessageOptions no_standard_descriptor_accessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [map_entry] MessageOptions map_entry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MessageOptions uninterpreted_option
                 * @property {boolean|null} [".gogoproto.goproto_getters"] MessageOptions .gogoproto.goproto_getters
                 * @property {boolean|null} [".gogoproto.goproto_stringer"] MessageOptions .gogoproto.goproto_stringer
                 * @property {boolean|null} [".gogoproto.verbose_equal"] MessageOptions .gogoproto.verbose_equal
                 * @property {boolean|null} [".gogoproto.face"] MessageOptions .gogoproto.face
                 * @property {boolean|null} [".gogoproto.gostring"] MessageOptions .gogoproto.gostring
                 * @property {boolean|null} [".gogoproto.populate"] MessageOptions .gogoproto.populate
                 * @property {boolean|null} [".gogoproto.stringer"] MessageOptions .gogoproto.stringer
                 * @property {boolean|null} [".gogoproto.onlyone"] MessageOptions .gogoproto.onlyone
                 * @property {boolean|null} [".gogoproto.equal"] MessageOptions .gogoproto.equal
                 * @property {boolean|null} [".gogoproto.description"] MessageOptions .gogoproto.description
                 * @property {boolean|null} [".gogoproto.testgen"] MessageOptions .gogoproto.testgen
                 * @property {boolean|null} [".gogoproto.benchgen"] MessageOptions .gogoproto.benchgen
                 * @property {boolean|null} [".gogoproto.marshaler"] MessageOptions .gogoproto.marshaler
                 * @property {boolean|null} [".gogoproto.unmarshaler"] MessageOptions .gogoproto.unmarshaler
                 * @property {boolean|null} [".gogoproto.stable_marshaler"] MessageOptions .gogoproto.stable_marshaler
                 * @property {boolean|null} [".gogoproto.sizer"] MessageOptions .gogoproto.sizer
                 * @property {boolean|null} [".gogoproto.unsafe_marshaler"] MessageOptions .gogoproto.unsafe_marshaler
                 * @property {boolean|null} [".gogoproto.unsafe_unmarshaler"] MessageOptions .gogoproto.unsafe_unmarshaler
                 * @property {boolean|null} [".gogoproto.goproto_extensions_map"] MessageOptions .gogoproto.goproto_extensions_map
                 * @property {boolean|null} [".gogoproto.goproto_unrecognized"] MessageOptions .gogoproto.goproto_unrecognized
                 * @property {boolean|null} [".gogoproto.protosizer"] MessageOptions .gogoproto.protosizer
                 * @property {boolean|null} [".gogoproto.compare"] MessageOptions .gogoproto.compare
                 * @property {boolean|null} [".gogoproto.typedecl"] MessageOptions .gogoproto.typedecl
                 * @property {boolean|null} [".gogoproto.messagename"] MessageOptions .gogoproto.messagename
                 * @property {boolean|null} [".gogoproto.goproto_sizecache"] MessageOptions .gogoproto.goproto_sizecache
                 * @property {boolean|null} [".gogoproto.goproto_unkeyed"] MessageOptions .gogoproto.goproto_unkeyed
                 * @property {string|null} [".cosmos_proto.interface_type"] MessageOptions .cosmos_proto.interface_type
                 * @property {string|null} [".cosmos_proto.implements_interface"] MessageOptions .cosmos_proto.implements_interface
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions message_set_wire_format.
                 * @member {boolean} message_set_wire_format
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.message_set_wire_format = false;
    
                /**
                 * MessageOptions no_standard_descriptor_accessor.
                 * @member {boolean} no_standard_descriptor_accessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.no_standard_descriptor_accessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions map_entry.
                 * @member {boolean} map_entry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.map_entry = false;
    
                /**
                 * MessageOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * MessageOptions .gogoproto.goproto_getters.
                 * @member {boolean} .gogoproto.goproto_getters
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.goproto_getters"] = false;
    
                /**
                 * MessageOptions .gogoproto.goproto_stringer.
                 * @member {boolean} .gogoproto.goproto_stringer
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.goproto_stringer"] = false;
    
                /**
                 * MessageOptions .gogoproto.verbose_equal.
                 * @member {boolean} .gogoproto.verbose_equal
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.verbose_equal"] = false;
    
                /**
                 * MessageOptions .gogoproto.face.
                 * @member {boolean} .gogoproto.face
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.face"] = false;
    
                /**
                 * MessageOptions .gogoproto.gostring.
                 * @member {boolean} .gogoproto.gostring
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.gostring"] = false;
    
                /**
                 * MessageOptions .gogoproto.populate.
                 * @member {boolean} .gogoproto.populate
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.populate"] = false;
    
                /**
                 * MessageOptions .gogoproto.stringer.
                 * @member {boolean} .gogoproto.stringer
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.stringer"] = false;
    
                /**
                 * MessageOptions .gogoproto.onlyone.
                 * @member {boolean} .gogoproto.onlyone
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.onlyone"] = false;
    
                /**
                 * MessageOptions .gogoproto.equal.
                 * @member {boolean} .gogoproto.equal
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.equal"] = false;
    
                /**
                 * MessageOptions .gogoproto.description.
                 * @member {boolean} .gogoproto.description
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.description"] = false;
    
                /**
                 * MessageOptions .gogoproto.testgen.
                 * @member {boolean} .gogoproto.testgen
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.testgen"] = false;
    
                /**
                 * MessageOptions .gogoproto.benchgen.
                 * @member {boolean} .gogoproto.benchgen
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.benchgen"] = false;
    
                /**
                 * MessageOptions .gogoproto.marshaler.
                 * @member {boolean} .gogoproto.marshaler
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.marshaler"] = false;
    
                /**
                 * MessageOptions .gogoproto.unmarshaler.
                 * @member {boolean} .gogoproto.unmarshaler
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.unmarshaler"] = false;
    
                /**
                 * MessageOptions .gogoproto.stable_marshaler.
                 * @member {boolean} .gogoproto.stable_marshaler
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.stable_marshaler"] = false;
    
                /**
                 * MessageOptions .gogoproto.sizer.
                 * @member {boolean} .gogoproto.sizer
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.sizer"] = false;
    
                /**
                 * MessageOptions .gogoproto.unsafe_marshaler.
                 * @member {boolean} .gogoproto.unsafe_marshaler
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.unsafe_marshaler"] = false;
    
                /**
                 * MessageOptions .gogoproto.unsafe_unmarshaler.
                 * @member {boolean} .gogoproto.unsafe_unmarshaler
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.unsafe_unmarshaler"] = false;
    
                /**
                 * MessageOptions .gogoproto.goproto_extensions_map.
                 * @member {boolean} .gogoproto.goproto_extensions_map
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.goproto_extensions_map"] = false;
    
                /**
                 * MessageOptions .gogoproto.goproto_unrecognized.
                 * @member {boolean} .gogoproto.goproto_unrecognized
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.goproto_unrecognized"] = false;
    
                /**
                 * MessageOptions .gogoproto.protosizer.
                 * @member {boolean} .gogoproto.protosizer
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.protosizer"] = false;
    
                /**
                 * MessageOptions .gogoproto.compare.
                 * @member {boolean} .gogoproto.compare
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.compare"] = false;
    
                /**
                 * MessageOptions .gogoproto.typedecl.
                 * @member {boolean} .gogoproto.typedecl
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.typedecl"] = false;
    
                /**
                 * MessageOptions .gogoproto.messagename.
                 * @member {boolean} .gogoproto.messagename
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.messagename"] = false;
    
                /**
                 * MessageOptions .gogoproto.goproto_sizecache.
                 * @member {boolean} .gogoproto.goproto_sizecache
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.goproto_sizecache"] = false;
    
                /**
                 * MessageOptions .gogoproto.goproto_unkeyed.
                 * @member {boolean} .gogoproto.goproto_unkeyed
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".gogoproto.goproto_unkeyed"] = false;
    
                /**
                 * MessageOptions .cosmos_proto.interface_type.
                 * @member {string} .cosmos_proto.interface_type
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".cosmos_proto.interface_type"] = "";
    
                /**
                 * MessageOptions .cosmos_proto.implements_interface.
                 * @member {string} .cosmos_proto.implements_interface
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".cosmos_proto.implements_interface"] = "";
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.message_set_wire_format != null && Object.hasOwnProperty.call(message, "message_set_wire_format"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.message_set_wire_format);
                    if (message.no_standard_descriptor_accessor != null && Object.hasOwnProperty.call(message, "no_standard_descriptor_accessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.no_standard_descriptor_accessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.map_entry != null && Object.hasOwnProperty.call(message, "map_entry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.map_entry);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".gogoproto.goproto_getters"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_getters"))
                        writer.uint32(/* id 64001, wireType 0 =*/512008).bool(message[".gogoproto.goproto_getters"]);
                    if (message[".gogoproto.goproto_stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_stringer"))
                        writer.uint32(/* id 64003, wireType 0 =*/512024).bool(message[".gogoproto.goproto_stringer"]);
                    if (message[".gogoproto.verbose_equal"] != null && Object.hasOwnProperty.call(message, ".gogoproto.verbose_equal"))
                        writer.uint32(/* id 64004, wireType 0 =*/512032).bool(message[".gogoproto.verbose_equal"]);
                    if (message[".gogoproto.face"] != null && Object.hasOwnProperty.call(message, ".gogoproto.face"))
                        writer.uint32(/* id 64005, wireType 0 =*/512040).bool(message[".gogoproto.face"]);
                    if (message[".gogoproto.gostring"] != null && Object.hasOwnProperty.call(message, ".gogoproto.gostring"))
                        writer.uint32(/* id 64006, wireType 0 =*/512048).bool(message[".gogoproto.gostring"]);
                    if (message[".gogoproto.populate"] != null && Object.hasOwnProperty.call(message, ".gogoproto.populate"))
                        writer.uint32(/* id 64007, wireType 0 =*/512056).bool(message[".gogoproto.populate"]);
                    if (message[".gogoproto.onlyone"] != null && Object.hasOwnProperty.call(message, ".gogoproto.onlyone"))
                        writer.uint32(/* id 64009, wireType 0 =*/512072).bool(message[".gogoproto.onlyone"]);
                    if (message[".gogoproto.equal"] != null && Object.hasOwnProperty.call(message, ".gogoproto.equal"))
                        writer.uint32(/* id 64013, wireType 0 =*/512104).bool(message[".gogoproto.equal"]);
                    if (message[".gogoproto.description"] != null && Object.hasOwnProperty.call(message, ".gogoproto.description"))
                        writer.uint32(/* id 64014, wireType 0 =*/512112).bool(message[".gogoproto.description"]);
                    if (message[".gogoproto.testgen"] != null && Object.hasOwnProperty.call(message, ".gogoproto.testgen"))
                        writer.uint32(/* id 64015, wireType 0 =*/512120).bool(message[".gogoproto.testgen"]);
                    if (message[".gogoproto.benchgen"] != null && Object.hasOwnProperty.call(message, ".gogoproto.benchgen"))
                        writer.uint32(/* id 64016, wireType 0 =*/512128).bool(message[".gogoproto.benchgen"]);
                    if (message[".gogoproto.marshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.marshaler"))
                        writer.uint32(/* id 64017, wireType 0 =*/512136).bool(message[".gogoproto.marshaler"]);
                    if (message[".gogoproto.unmarshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unmarshaler"))
                        writer.uint32(/* id 64018, wireType 0 =*/512144).bool(message[".gogoproto.unmarshaler"]);
                    if (message[".gogoproto.stable_marshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stable_marshaler"))
                        writer.uint32(/* id 64019, wireType 0 =*/512152).bool(message[".gogoproto.stable_marshaler"]);
                    if (message[".gogoproto.sizer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.sizer"))
                        writer.uint32(/* id 64020, wireType 0 =*/512160).bool(message[".gogoproto.sizer"]);
                    if (message[".gogoproto.unsafe_marshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_marshaler"))
                        writer.uint32(/* id 64023, wireType 0 =*/512184).bool(message[".gogoproto.unsafe_marshaler"]);
                    if (message[".gogoproto.unsafe_unmarshaler"] != null && Object.hasOwnProperty.call(message, ".gogoproto.unsafe_unmarshaler"))
                        writer.uint32(/* id 64024, wireType 0 =*/512192).bool(message[".gogoproto.unsafe_unmarshaler"]);
                    if (message[".gogoproto.goproto_extensions_map"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_extensions_map"))
                        writer.uint32(/* id 64025, wireType 0 =*/512200).bool(message[".gogoproto.goproto_extensions_map"]);
                    if (message[".gogoproto.goproto_unrecognized"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unrecognized"))
                        writer.uint32(/* id 64026, wireType 0 =*/512208).bool(message[".gogoproto.goproto_unrecognized"]);
                    if (message[".gogoproto.protosizer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.protosizer"))
                        writer.uint32(/* id 64028, wireType 0 =*/512224).bool(message[".gogoproto.protosizer"]);
                    if (message[".gogoproto.compare"] != null && Object.hasOwnProperty.call(message, ".gogoproto.compare"))
                        writer.uint32(/* id 64029, wireType 0 =*/512232).bool(message[".gogoproto.compare"]);
                    if (message[".gogoproto.typedecl"] != null && Object.hasOwnProperty.call(message, ".gogoproto.typedecl"))
                        writer.uint32(/* id 64030, wireType 0 =*/512240).bool(message[".gogoproto.typedecl"]);
                    if (message[".gogoproto.messagename"] != null && Object.hasOwnProperty.call(message, ".gogoproto.messagename"))
                        writer.uint32(/* id 64033, wireType 0 =*/512264).bool(message[".gogoproto.messagename"]);
                    if (message[".gogoproto.goproto_sizecache"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_sizecache"))
                        writer.uint32(/* id 64034, wireType 0 =*/512272).bool(message[".gogoproto.goproto_sizecache"]);
                    if (message[".gogoproto.goproto_unkeyed"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_unkeyed"))
                        writer.uint32(/* id 64035, wireType 0 =*/512280).bool(message[".gogoproto.goproto_unkeyed"]);
                    if (message[".gogoproto.stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stringer"))
                        writer.uint32(/* id 67008, wireType 0 =*/536064).bool(message[".gogoproto.stringer"]);
                    if (message[".cosmos_proto.interface_type"] != null && Object.hasOwnProperty.call(message, ".cosmos_proto.interface_type"))
                        writer.uint32(/* id 93001, wireType 2 =*/744010).string(message[".cosmos_proto.interface_type"]);
                    if (message[".cosmos_proto.implements_interface"] != null && Object.hasOwnProperty.call(message, ".cosmos_proto.implements_interface"))
                        writer.uint32(/* id 93002, wireType 2 =*/744018).string(message[".cosmos_proto.implements_interface"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.message_set_wire_format = reader.bool();
                            break;
                        case 2:
                            message.no_standard_descriptor_accessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.map_entry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 64001:
                            message[".gogoproto.goproto_getters"] = reader.bool();
                            break;
                        case 64003:
                            message[".gogoproto.goproto_stringer"] = reader.bool();
                            break;
                        case 64004:
                            message[".gogoproto.verbose_equal"] = reader.bool();
                            break;
                        case 64005:
                            message[".gogoproto.face"] = reader.bool();
                            break;
                        case 64006:
                            message[".gogoproto.gostring"] = reader.bool();
                            break;
                        case 64007:
                            message[".gogoproto.populate"] = reader.bool();
                            break;
                        case 67008:
                            message[".gogoproto.stringer"] = reader.bool();
                            break;
                        case 64009:
                            message[".gogoproto.onlyone"] = reader.bool();
                            break;
                        case 64013:
                            message[".gogoproto.equal"] = reader.bool();
                            break;
                        case 64014:
                            message[".gogoproto.description"] = reader.bool();
                            break;
                        case 64015:
                            message[".gogoproto.testgen"] = reader.bool();
                            break;
                        case 64016:
                            message[".gogoproto.benchgen"] = reader.bool();
                            break;
                        case 64017:
                            message[".gogoproto.marshaler"] = reader.bool();
                            break;
                        case 64018:
                            message[".gogoproto.unmarshaler"] = reader.bool();
                            break;
                        case 64019:
                            message[".gogoproto.stable_marshaler"] = reader.bool();
                            break;
                        case 64020:
                            message[".gogoproto.sizer"] = reader.bool();
                            break;
                        case 64023:
                            message[".gogoproto.unsafe_marshaler"] = reader.bool();
                            break;
                        case 64024:
                            message[".gogoproto.unsafe_unmarshaler"] = reader.bool();
                            break;
                        case 64025:
                            message[".gogoproto.goproto_extensions_map"] = reader.bool();
                            break;
                        case 64026:
                            message[".gogoproto.goproto_unrecognized"] = reader.bool();
                            break;
                        case 64028:
                            message[".gogoproto.protosizer"] = reader.bool();
                            break;
                        case 64029:
                            message[".gogoproto.compare"] = reader.bool();
                            break;
                        case 64030:
                            message[".gogoproto.typedecl"] = reader.bool();
                            break;
                        case 64033:
                            message[".gogoproto.messagename"] = reader.bool();
                            break;
                        case 64034:
                            message[".gogoproto.goproto_sizecache"] = reader.bool();
                            break;
                        case 64035:
                            message[".gogoproto.goproto_unkeyed"] = reader.bool();
                            break;
                        case 93001:
                            message[".cosmos_proto.interface_type"] = reader.string();
                            break;
                        case 93002:
                            message[".cosmos_proto.implements_interface"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        if (typeof message.message_set_wire_format !== "boolean")
                            return "message_set_wire_format: boolean expected";
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        if (typeof message.no_standard_descriptor_accessor !== "boolean")
                            return "no_standard_descriptor_accessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        if (typeof message.map_entry !== "boolean")
                            return "map_entry: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".gogoproto.goproto_getters"] != null && message.hasOwnProperty(".gogoproto.goproto_getters"))
                        if (typeof message[".gogoproto.goproto_getters"] !== "boolean")
                            return ".gogoproto.goproto_getters: boolean expected";
                    if (message[".gogoproto.goproto_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer"))
                        if (typeof message[".gogoproto.goproto_stringer"] !== "boolean")
                            return ".gogoproto.goproto_stringer: boolean expected";
                    if (message[".gogoproto.verbose_equal"] != null && message.hasOwnProperty(".gogoproto.verbose_equal"))
                        if (typeof message[".gogoproto.verbose_equal"] !== "boolean")
                            return ".gogoproto.verbose_equal: boolean expected";
                    if (message[".gogoproto.face"] != null && message.hasOwnProperty(".gogoproto.face"))
                        if (typeof message[".gogoproto.face"] !== "boolean")
                            return ".gogoproto.face: boolean expected";
                    if (message[".gogoproto.gostring"] != null && message.hasOwnProperty(".gogoproto.gostring"))
                        if (typeof message[".gogoproto.gostring"] !== "boolean")
                            return ".gogoproto.gostring: boolean expected";
                    if (message[".gogoproto.populate"] != null && message.hasOwnProperty(".gogoproto.populate"))
                        if (typeof message[".gogoproto.populate"] !== "boolean")
                            return ".gogoproto.populate: boolean expected";
                    if (message[".gogoproto.stringer"] != null && message.hasOwnProperty(".gogoproto.stringer"))
                        if (typeof message[".gogoproto.stringer"] !== "boolean")
                            return ".gogoproto.stringer: boolean expected";
                    if (message[".gogoproto.onlyone"] != null && message.hasOwnProperty(".gogoproto.onlyone"))
                        if (typeof message[".gogoproto.onlyone"] !== "boolean")
                            return ".gogoproto.onlyone: boolean expected";
                    if (message[".gogoproto.equal"] != null && message.hasOwnProperty(".gogoproto.equal"))
                        if (typeof message[".gogoproto.equal"] !== "boolean")
                            return ".gogoproto.equal: boolean expected";
                    if (message[".gogoproto.description"] != null && message.hasOwnProperty(".gogoproto.description"))
                        if (typeof message[".gogoproto.description"] !== "boolean")
                            return ".gogoproto.description: boolean expected";
                    if (message[".gogoproto.testgen"] != null && message.hasOwnProperty(".gogoproto.testgen"))
                        if (typeof message[".gogoproto.testgen"] !== "boolean")
                            return ".gogoproto.testgen: boolean expected";
                    if (message[".gogoproto.benchgen"] != null && message.hasOwnProperty(".gogoproto.benchgen"))
                        if (typeof message[".gogoproto.benchgen"] !== "boolean")
                            return ".gogoproto.benchgen: boolean expected";
                    if (message[".gogoproto.marshaler"] != null && message.hasOwnProperty(".gogoproto.marshaler"))
                        if (typeof message[".gogoproto.marshaler"] !== "boolean")
                            return ".gogoproto.marshaler: boolean expected";
                    if (message[".gogoproto.unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unmarshaler"))
                        if (typeof message[".gogoproto.unmarshaler"] !== "boolean")
                            return ".gogoproto.unmarshaler: boolean expected";
                    if (message[".gogoproto.stable_marshaler"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler"))
                        if (typeof message[".gogoproto.stable_marshaler"] !== "boolean")
                            return ".gogoproto.stable_marshaler: boolean expected";
                    if (message[".gogoproto.sizer"] != null && message.hasOwnProperty(".gogoproto.sizer"))
                        if (typeof message[".gogoproto.sizer"] !== "boolean")
                            return ".gogoproto.sizer: boolean expected";
                    if (message[".gogoproto.unsafe_marshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler"))
                        if (typeof message[".gogoproto.unsafe_marshaler"] !== "boolean")
                            return ".gogoproto.unsafe_marshaler: boolean expected";
                    if (message[".gogoproto.unsafe_unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler"))
                        if (typeof message[".gogoproto.unsafe_unmarshaler"] !== "boolean")
                            return ".gogoproto.unsafe_unmarshaler: boolean expected";
                    if (message[".gogoproto.goproto_extensions_map"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map"))
                        if (typeof message[".gogoproto.goproto_extensions_map"] !== "boolean")
                            return ".gogoproto.goproto_extensions_map: boolean expected";
                    if (message[".gogoproto.goproto_unrecognized"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized"))
                        if (typeof message[".gogoproto.goproto_unrecognized"] !== "boolean")
                            return ".gogoproto.goproto_unrecognized: boolean expected";
                    if (message[".gogoproto.protosizer"] != null && message.hasOwnProperty(".gogoproto.protosizer"))
                        if (typeof message[".gogoproto.protosizer"] !== "boolean")
                            return ".gogoproto.protosizer: boolean expected";
                    if (message[".gogoproto.compare"] != null && message.hasOwnProperty(".gogoproto.compare"))
                        if (typeof message[".gogoproto.compare"] !== "boolean")
                            return ".gogoproto.compare: boolean expected";
                    if (message[".gogoproto.typedecl"] != null && message.hasOwnProperty(".gogoproto.typedecl"))
                        if (typeof message[".gogoproto.typedecl"] !== "boolean")
                            return ".gogoproto.typedecl: boolean expected";
                    if (message[".gogoproto.messagename"] != null && message.hasOwnProperty(".gogoproto.messagename"))
                        if (typeof message[".gogoproto.messagename"] !== "boolean")
                            return ".gogoproto.messagename: boolean expected";
                    if (message[".gogoproto.goproto_sizecache"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache"))
                        if (typeof message[".gogoproto.goproto_sizecache"] !== "boolean")
                            return ".gogoproto.goproto_sizecache: boolean expected";
                    if (message[".gogoproto.goproto_unkeyed"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed"))
                        if (typeof message[".gogoproto.goproto_unkeyed"] !== "boolean")
                            return ".gogoproto.goproto_unkeyed: boolean expected";
                    if (message[".cosmos_proto.interface_type"] != null && message.hasOwnProperty(".cosmos_proto.interface_type"))
                        if (!$util.isString(message[".cosmos_proto.interface_type"]))
                            return ".cosmos_proto.interface_type: string expected";
                    if (message[".cosmos_proto.implements_interface"] != null && message.hasOwnProperty(".cosmos_proto.implements_interface"))
                        if (!$util.isString(message[".cosmos_proto.implements_interface"]))
                            return ".cosmos_proto.implements_interface: string expected";
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.message_set_wire_format != null)
                        message.message_set_wire_format = Boolean(object.message_set_wire_format);
                    if (object.no_standard_descriptor_accessor != null)
                        message.no_standard_descriptor_accessor = Boolean(object.no_standard_descriptor_accessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.map_entry != null)
                        message.map_entry = Boolean(object.map_entry);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".gogoproto.goproto_getters"] != null)
                        message[".gogoproto.goproto_getters"] = Boolean(object[".gogoproto.goproto_getters"]);
                    if (object[".gogoproto.goproto_stringer"] != null)
                        message[".gogoproto.goproto_stringer"] = Boolean(object[".gogoproto.goproto_stringer"]);
                    if (object[".gogoproto.verbose_equal"] != null)
                        message[".gogoproto.verbose_equal"] = Boolean(object[".gogoproto.verbose_equal"]);
                    if (object[".gogoproto.face"] != null)
                        message[".gogoproto.face"] = Boolean(object[".gogoproto.face"]);
                    if (object[".gogoproto.gostring"] != null)
                        message[".gogoproto.gostring"] = Boolean(object[".gogoproto.gostring"]);
                    if (object[".gogoproto.populate"] != null)
                        message[".gogoproto.populate"] = Boolean(object[".gogoproto.populate"]);
                    if (object[".gogoproto.stringer"] != null)
                        message[".gogoproto.stringer"] = Boolean(object[".gogoproto.stringer"]);
                    if (object[".gogoproto.onlyone"] != null)
                        message[".gogoproto.onlyone"] = Boolean(object[".gogoproto.onlyone"]);
                    if (object[".gogoproto.equal"] != null)
                        message[".gogoproto.equal"] = Boolean(object[".gogoproto.equal"]);
                    if (object[".gogoproto.description"] != null)
                        message[".gogoproto.description"] = Boolean(object[".gogoproto.description"]);
                    if (object[".gogoproto.testgen"] != null)
                        message[".gogoproto.testgen"] = Boolean(object[".gogoproto.testgen"]);
                    if (object[".gogoproto.benchgen"] != null)
                        message[".gogoproto.benchgen"] = Boolean(object[".gogoproto.benchgen"]);
                    if (object[".gogoproto.marshaler"] != null)
                        message[".gogoproto.marshaler"] = Boolean(object[".gogoproto.marshaler"]);
                    if (object[".gogoproto.unmarshaler"] != null)
                        message[".gogoproto.unmarshaler"] = Boolean(object[".gogoproto.unmarshaler"]);
                    if (object[".gogoproto.stable_marshaler"] != null)
                        message[".gogoproto.stable_marshaler"] = Boolean(object[".gogoproto.stable_marshaler"]);
                    if (object[".gogoproto.sizer"] != null)
                        message[".gogoproto.sizer"] = Boolean(object[".gogoproto.sizer"]);
                    if (object[".gogoproto.unsafe_marshaler"] != null)
                        message[".gogoproto.unsafe_marshaler"] = Boolean(object[".gogoproto.unsafe_marshaler"]);
                    if (object[".gogoproto.unsafe_unmarshaler"] != null)
                        message[".gogoproto.unsafe_unmarshaler"] = Boolean(object[".gogoproto.unsafe_unmarshaler"]);
                    if (object[".gogoproto.goproto_extensions_map"] != null)
                        message[".gogoproto.goproto_extensions_map"] = Boolean(object[".gogoproto.goproto_extensions_map"]);
                    if (object[".gogoproto.goproto_unrecognized"] != null)
                        message[".gogoproto.goproto_unrecognized"] = Boolean(object[".gogoproto.goproto_unrecognized"]);
                    if (object[".gogoproto.protosizer"] != null)
                        message[".gogoproto.protosizer"] = Boolean(object[".gogoproto.protosizer"]);
                    if (object[".gogoproto.compare"] != null)
                        message[".gogoproto.compare"] = Boolean(object[".gogoproto.compare"]);
                    if (object[".gogoproto.typedecl"] != null)
                        message[".gogoproto.typedecl"] = Boolean(object[".gogoproto.typedecl"]);
                    if (object[".gogoproto.messagename"] != null)
                        message[".gogoproto.messagename"] = Boolean(object[".gogoproto.messagename"]);
                    if (object[".gogoproto.goproto_sizecache"] != null)
                        message[".gogoproto.goproto_sizecache"] = Boolean(object[".gogoproto.goproto_sizecache"]);
                    if (object[".gogoproto.goproto_unkeyed"] != null)
                        message[".gogoproto.goproto_unkeyed"] = Boolean(object[".gogoproto.goproto_unkeyed"]);
                    if (object[".cosmos_proto.interface_type"] != null)
                        message[".cosmos_proto.interface_type"] = String(object[".cosmos_proto.interface_type"]);
                    if (object[".cosmos_proto.implements_interface"] != null)
                        message[".cosmos_proto.implements_interface"] = String(object[".cosmos_proto.implements_interface"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.message_set_wire_format = false;
                        object.no_standard_descriptor_accessor = false;
                        object.deprecated = false;
                        object.map_entry = false;
                        object[".gogoproto.goproto_getters"] = false;
                        object[".gogoproto.goproto_stringer"] = false;
                        object[".gogoproto.verbose_equal"] = false;
                        object[".gogoproto.face"] = false;
                        object[".gogoproto.gostring"] = false;
                        object[".gogoproto.populate"] = false;
                        object[".gogoproto.onlyone"] = false;
                        object[".gogoproto.equal"] = false;
                        object[".gogoproto.description"] = false;
                        object[".gogoproto.testgen"] = false;
                        object[".gogoproto.benchgen"] = false;
                        object[".gogoproto.marshaler"] = false;
                        object[".gogoproto.unmarshaler"] = false;
                        object[".gogoproto.stable_marshaler"] = false;
                        object[".gogoproto.sizer"] = false;
                        object[".gogoproto.unsafe_marshaler"] = false;
                        object[".gogoproto.unsafe_unmarshaler"] = false;
                        object[".gogoproto.goproto_extensions_map"] = false;
                        object[".gogoproto.goproto_unrecognized"] = false;
                        object[".gogoproto.protosizer"] = false;
                        object[".gogoproto.compare"] = false;
                        object[".gogoproto.typedecl"] = false;
                        object[".gogoproto.messagename"] = false;
                        object[".gogoproto.goproto_sizecache"] = false;
                        object[".gogoproto.goproto_unkeyed"] = false;
                        object[".gogoproto.stringer"] = false;
                        object[".cosmos_proto.interface_type"] = "";
                        object[".cosmos_proto.implements_interface"] = "";
                    }
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        object.message_set_wire_format = message.message_set_wire_format;
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        object.no_standard_descriptor_accessor = message.no_standard_descriptor_accessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        object.map_entry = message.map_entry;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".gogoproto.goproto_getters"] != null && message.hasOwnProperty(".gogoproto.goproto_getters"))
                        object[".gogoproto.goproto_getters"] = message[".gogoproto.goproto_getters"];
                    if (message[".gogoproto.goproto_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_stringer"))
                        object[".gogoproto.goproto_stringer"] = message[".gogoproto.goproto_stringer"];
                    if (message[".gogoproto.verbose_equal"] != null && message.hasOwnProperty(".gogoproto.verbose_equal"))
                        object[".gogoproto.verbose_equal"] = message[".gogoproto.verbose_equal"];
                    if (message[".gogoproto.face"] != null && message.hasOwnProperty(".gogoproto.face"))
                        object[".gogoproto.face"] = message[".gogoproto.face"];
                    if (message[".gogoproto.gostring"] != null && message.hasOwnProperty(".gogoproto.gostring"))
                        object[".gogoproto.gostring"] = message[".gogoproto.gostring"];
                    if (message[".gogoproto.populate"] != null && message.hasOwnProperty(".gogoproto.populate"))
                        object[".gogoproto.populate"] = message[".gogoproto.populate"];
                    if (message[".gogoproto.onlyone"] != null && message.hasOwnProperty(".gogoproto.onlyone"))
                        object[".gogoproto.onlyone"] = message[".gogoproto.onlyone"];
                    if (message[".gogoproto.equal"] != null && message.hasOwnProperty(".gogoproto.equal"))
                        object[".gogoproto.equal"] = message[".gogoproto.equal"];
                    if (message[".gogoproto.description"] != null && message.hasOwnProperty(".gogoproto.description"))
                        object[".gogoproto.description"] = message[".gogoproto.description"];
                    if (message[".gogoproto.testgen"] != null && message.hasOwnProperty(".gogoproto.testgen"))
                        object[".gogoproto.testgen"] = message[".gogoproto.testgen"];
                    if (message[".gogoproto.benchgen"] != null && message.hasOwnProperty(".gogoproto.benchgen"))
                        object[".gogoproto.benchgen"] = message[".gogoproto.benchgen"];
                    if (message[".gogoproto.marshaler"] != null && message.hasOwnProperty(".gogoproto.marshaler"))
                        object[".gogoproto.marshaler"] = message[".gogoproto.marshaler"];
                    if (message[".gogoproto.unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unmarshaler"))
                        object[".gogoproto.unmarshaler"] = message[".gogoproto.unmarshaler"];
                    if (message[".gogoproto.stable_marshaler"] != null && message.hasOwnProperty(".gogoproto.stable_marshaler"))
                        object[".gogoproto.stable_marshaler"] = message[".gogoproto.stable_marshaler"];
                    if (message[".gogoproto.sizer"] != null && message.hasOwnProperty(".gogoproto.sizer"))
                        object[".gogoproto.sizer"] = message[".gogoproto.sizer"];
                    if (message[".gogoproto.unsafe_marshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_marshaler"))
                        object[".gogoproto.unsafe_marshaler"] = message[".gogoproto.unsafe_marshaler"];
                    if (message[".gogoproto.unsafe_unmarshaler"] != null && message.hasOwnProperty(".gogoproto.unsafe_unmarshaler"))
                        object[".gogoproto.unsafe_unmarshaler"] = message[".gogoproto.unsafe_unmarshaler"];
                    if (message[".gogoproto.goproto_extensions_map"] != null && message.hasOwnProperty(".gogoproto.goproto_extensions_map"))
                        object[".gogoproto.goproto_extensions_map"] = message[".gogoproto.goproto_extensions_map"];
                    if (message[".gogoproto.goproto_unrecognized"] != null && message.hasOwnProperty(".gogoproto.goproto_unrecognized"))
                        object[".gogoproto.goproto_unrecognized"] = message[".gogoproto.goproto_unrecognized"];
                    if (message[".gogoproto.protosizer"] != null && message.hasOwnProperty(".gogoproto.protosizer"))
                        object[".gogoproto.protosizer"] = message[".gogoproto.protosizer"];
                    if (message[".gogoproto.compare"] != null && message.hasOwnProperty(".gogoproto.compare"))
                        object[".gogoproto.compare"] = message[".gogoproto.compare"];
                    if (message[".gogoproto.typedecl"] != null && message.hasOwnProperty(".gogoproto.typedecl"))
                        object[".gogoproto.typedecl"] = message[".gogoproto.typedecl"];
                    if (message[".gogoproto.messagename"] != null && message.hasOwnProperty(".gogoproto.messagename"))
                        object[".gogoproto.messagename"] = message[".gogoproto.messagename"];
                    if (message[".gogoproto.goproto_sizecache"] != null && message.hasOwnProperty(".gogoproto.goproto_sizecache"))
                        object[".gogoproto.goproto_sizecache"] = message[".gogoproto.goproto_sizecache"];
                    if (message[".gogoproto.goproto_unkeyed"] != null && message.hasOwnProperty(".gogoproto.goproto_unkeyed"))
                        object[".gogoproto.goproto_unkeyed"] = message[".gogoproto.goproto_unkeyed"];
                    if (message[".gogoproto.stringer"] != null && message.hasOwnProperty(".gogoproto.stringer"))
                        object[".gogoproto.stringer"] = message[".gogoproto.stringer"];
                    if (message[".cosmos_proto.interface_type"] != null && message.hasOwnProperty(".cosmos_proto.interface_type"))
                        object[".cosmos_proto.interface_type"] = message[".cosmos_proto.interface_type"];
                    if (message[".cosmos_proto.implements_interface"] != null && message.hasOwnProperty(".cosmos_proto.implements_interface"))
                        object[".cosmos_proto.implements_interface"] = message[".cosmos_proto.implements_interface"];
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FieldOptions uninterpreted_option
                 * @property {boolean|null} [".gogoproto.nullable"] FieldOptions .gogoproto.nullable
                 * @property {boolean|null} [".gogoproto.embed"] FieldOptions .gogoproto.embed
                 * @property {string|null} [".gogoproto.customtype"] FieldOptions .gogoproto.customtype
                 * @property {string|null} [".gogoproto.customname"] FieldOptions .gogoproto.customname
                 * @property {string|null} [".gogoproto.jsontag"] FieldOptions .gogoproto.jsontag
                 * @property {string|null} [".gogoproto.moretags"] FieldOptions .gogoproto.moretags
                 * @property {string|null} [".gogoproto.casttype"] FieldOptions .gogoproto.casttype
                 * @property {string|null} [".gogoproto.castkey"] FieldOptions .gogoproto.castkey
                 * @property {string|null} [".gogoproto.castvalue"] FieldOptions .gogoproto.castvalue
                 * @property {boolean|null} [".gogoproto.stdtime"] FieldOptions .gogoproto.stdtime
                 * @property {boolean|null} [".gogoproto.stdduration"] FieldOptions .gogoproto.stdduration
                 * @property {boolean|null} [".gogoproto.wktpointer"] FieldOptions .gogoproto.wktpointer
                 * @property {string|null} [".gogoproto.castrepeated"] FieldOptions .gogoproto.castrepeated
                 * @property {string|null} [".cosmos_proto.accepts_interface"] FieldOptions .cosmos_proto.accepts_interface
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FieldOptions .gogoproto.nullable.
                 * @member {boolean} .gogoproto.nullable
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.nullable"] = false;
    
                /**
                 * FieldOptions .gogoproto.embed.
                 * @member {boolean} .gogoproto.embed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.embed"] = false;
    
                /**
                 * FieldOptions .gogoproto.customtype.
                 * @member {string} .gogoproto.customtype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.customtype"] = "";
    
                /**
                 * FieldOptions .gogoproto.customname.
                 * @member {string} .gogoproto.customname
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.customname"] = "";
    
                /**
                 * FieldOptions .gogoproto.jsontag.
                 * @member {string} .gogoproto.jsontag
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.jsontag"] = "";
    
                /**
                 * FieldOptions .gogoproto.moretags.
                 * @member {string} .gogoproto.moretags
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.moretags"] = "";
    
                /**
                 * FieldOptions .gogoproto.casttype.
                 * @member {string} .gogoproto.casttype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.casttype"] = "";
    
                /**
                 * FieldOptions .gogoproto.castkey.
                 * @member {string} .gogoproto.castkey
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.castkey"] = "";
    
                /**
                 * FieldOptions .gogoproto.castvalue.
                 * @member {string} .gogoproto.castvalue
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.castvalue"] = "";
    
                /**
                 * FieldOptions .gogoproto.stdtime.
                 * @member {boolean} .gogoproto.stdtime
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.stdtime"] = false;
    
                /**
                 * FieldOptions .gogoproto.stdduration.
                 * @member {boolean} .gogoproto.stdduration
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.stdduration"] = false;
    
                /**
                 * FieldOptions .gogoproto.wktpointer.
                 * @member {boolean} .gogoproto.wktpointer
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.wktpointer"] = false;
    
                /**
                 * FieldOptions .gogoproto.castrepeated.
                 * @member {string} .gogoproto.castrepeated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".gogoproto.castrepeated"] = "";
    
                /**
                 * FieldOptions .cosmos_proto.accepts_interface.
                 * @member {string} .cosmos_proto.accepts_interface
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".cosmos_proto.accepts_interface"] = "";
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".gogoproto.nullable"] != null && Object.hasOwnProperty.call(message, ".gogoproto.nullable"))
                        writer.uint32(/* id 65001, wireType 0 =*/520008).bool(message[".gogoproto.nullable"]);
                    if (message[".gogoproto.embed"] != null && Object.hasOwnProperty.call(message, ".gogoproto.embed"))
                        writer.uint32(/* id 65002, wireType 0 =*/520016).bool(message[".gogoproto.embed"]);
                    if (message[".gogoproto.customtype"] != null && Object.hasOwnProperty.call(message, ".gogoproto.customtype"))
                        writer.uint32(/* id 65003, wireType 2 =*/520026).string(message[".gogoproto.customtype"]);
                    if (message[".gogoproto.customname"] != null && Object.hasOwnProperty.call(message, ".gogoproto.customname"))
                        writer.uint32(/* id 65004, wireType 2 =*/520034).string(message[".gogoproto.customname"]);
                    if (message[".gogoproto.jsontag"] != null && Object.hasOwnProperty.call(message, ".gogoproto.jsontag"))
                        writer.uint32(/* id 65005, wireType 2 =*/520042).string(message[".gogoproto.jsontag"]);
                    if (message[".gogoproto.moretags"] != null && Object.hasOwnProperty.call(message, ".gogoproto.moretags"))
                        writer.uint32(/* id 65006, wireType 2 =*/520050).string(message[".gogoproto.moretags"]);
                    if (message[".gogoproto.casttype"] != null && Object.hasOwnProperty.call(message, ".gogoproto.casttype"))
                        writer.uint32(/* id 65007, wireType 2 =*/520058).string(message[".gogoproto.casttype"]);
                    if (message[".gogoproto.castkey"] != null && Object.hasOwnProperty.call(message, ".gogoproto.castkey"))
                        writer.uint32(/* id 65008, wireType 2 =*/520066).string(message[".gogoproto.castkey"]);
                    if (message[".gogoproto.castvalue"] != null && Object.hasOwnProperty.call(message, ".gogoproto.castvalue"))
                        writer.uint32(/* id 65009, wireType 2 =*/520074).string(message[".gogoproto.castvalue"]);
                    if (message[".gogoproto.stdtime"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stdtime"))
                        writer.uint32(/* id 65010, wireType 0 =*/520080).bool(message[".gogoproto.stdtime"]);
                    if (message[".gogoproto.stdduration"] != null && Object.hasOwnProperty.call(message, ".gogoproto.stdduration"))
                        writer.uint32(/* id 65011, wireType 0 =*/520088).bool(message[".gogoproto.stdduration"]);
                    if (message[".gogoproto.wktpointer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.wktpointer"))
                        writer.uint32(/* id 65012, wireType 0 =*/520096).bool(message[".gogoproto.wktpointer"]);
                    if (message[".gogoproto.castrepeated"] != null && Object.hasOwnProperty.call(message, ".gogoproto.castrepeated"))
                        writer.uint32(/* id 65013, wireType 2 =*/520106).string(message[".gogoproto.castrepeated"]);
                    if (message[".cosmos_proto.accepts_interface"] != null && Object.hasOwnProperty.call(message, ".cosmos_proto.accepts_interface"))
                        writer.uint32(/* id 93001, wireType 2 =*/744010).string(message[".cosmos_proto.accepts_interface"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 65001:
                            message[".gogoproto.nullable"] = reader.bool();
                            break;
                        case 65002:
                            message[".gogoproto.embed"] = reader.bool();
                            break;
                        case 65003:
                            message[".gogoproto.customtype"] = reader.string();
                            break;
                        case 65004:
                            message[".gogoproto.customname"] = reader.string();
                            break;
                        case 65005:
                            message[".gogoproto.jsontag"] = reader.string();
                            break;
                        case 65006:
                            message[".gogoproto.moretags"] = reader.string();
                            break;
                        case 65007:
                            message[".gogoproto.casttype"] = reader.string();
                            break;
                        case 65008:
                            message[".gogoproto.castkey"] = reader.string();
                            break;
                        case 65009:
                            message[".gogoproto.castvalue"] = reader.string();
                            break;
                        case 65010:
                            message[".gogoproto.stdtime"] = reader.bool();
                            break;
                        case 65011:
                            message[".gogoproto.stdduration"] = reader.bool();
                            break;
                        case 65012:
                            message[".gogoproto.wktpointer"] = reader.bool();
                            break;
                        case 65013:
                            message[".gogoproto.castrepeated"] = reader.string();
                            break;
                        case 93001:
                            message[".cosmos_proto.accepts_interface"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".gogoproto.nullable"] != null && message.hasOwnProperty(".gogoproto.nullable"))
                        if (typeof message[".gogoproto.nullable"] !== "boolean")
                            return ".gogoproto.nullable: boolean expected";
                    if (message[".gogoproto.embed"] != null && message.hasOwnProperty(".gogoproto.embed"))
                        if (typeof message[".gogoproto.embed"] !== "boolean")
                            return ".gogoproto.embed: boolean expected";
                    if (message[".gogoproto.customtype"] != null && message.hasOwnProperty(".gogoproto.customtype"))
                        if (!$util.isString(message[".gogoproto.customtype"]))
                            return ".gogoproto.customtype: string expected";
                    if (message[".gogoproto.customname"] != null && message.hasOwnProperty(".gogoproto.customname"))
                        if (!$util.isString(message[".gogoproto.customname"]))
                            return ".gogoproto.customname: string expected";
                    if (message[".gogoproto.jsontag"] != null && message.hasOwnProperty(".gogoproto.jsontag"))
                        if (!$util.isString(message[".gogoproto.jsontag"]))
                            return ".gogoproto.jsontag: string expected";
                    if (message[".gogoproto.moretags"] != null && message.hasOwnProperty(".gogoproto.moretags"))
                        if (!$util.isString(message[".gogoproto.moretags"]))
                            return ".gogoproto.moretags: string expected";
                    if (message[".gogoproto.casttype"] != null && message.hasOwnProperty(".gogoproto.casttype"))
                        if (!$util.isString(message[".gogoproto.casttype"]))
                            return ".gogoproto.casttype: string expected";
                    if (message[".gogoproto.castkey"] != null && message.hasOwnProperty(".gogoproto.castkey"))
                        if (!$util.isString(message[".gogoproto.castkey"]))
                            return ".gogoproto.castkey: string expected";
                    if (message[".gogoproto.castvalue"] != null && message.hasOwnProperty(".gogoproto.castvalue"))
                        if (!$util.isString(message[".gogoproto.castvalue"]))
                            return ".gogoproto.castvalue: string expected";
                    if (message[".gogoproto.stdtime"] != null && message.hasOwnProperty(".gogoproto.stdtime"))
                        if (typeof message[".gogoproto.stdtime"] !== "boolean")
                            return ".gogoproto.stdtime: boolean expected";
                    if (message[".gogoproto.stdduration"] != null && message.hasOwnProperty(".gogoproto.stdduration"))
                        if (typeof message[".gogoproto.stdduration"] !== "boolean")
                            return ".gogoproto.stdduration: boolean expected";
                    if (message[".gogoproto.wktpointer"] != null && message.hasOwnProperty(".gogoproto.wktpointer"))
                        if (typeof message[".gogoproto.wktpointer"] !== "boolean")
                            return ".gogoproto.wktpointer: boolean expected";
                    if (message[".gogoproto.castrepeated"] != null && message.hasOwnProperty(".gogoproto.castrepeated"))
                        if (!$util.isString(message[".gogoproto.castrepeated"]))
                            return ".gogoproto.castrepeated: string expected";
                    if (message[".cosmos_proto.accepts_interface"] != null && message.hasOwnProperty(".cosmos_proto.accepts_interface"))
                        if (!$util.isString(message[".cosmos_proto.accepts_interface"]))
                            return ".cosmos_proto.accepts_interface: string expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".gogoproto.nullable"] != null)
                        message[".gogoproto.nullable"] = Boolean(object[".gogoproto.nullable"]);
                    if (object[".gogoproto.embed"] != null)
                        message[".gogoproto.embed"] = Boolean(object[".gogoproto.embed"]);
                    if (object[".gogoproto.customtype"] != null)
                        message[".gogoproto.customtype"] = String(object[".gogoproto.customtype"]);
                    if (object[".gogoproto.customname"] != null)
                        message[".gogoproto.customname"] = String(object[".gogoproto.customname"]);
                    if (object[".gogoproto.jsontag"] != null)
                        message[".gogoproto.jsontag"] = String(object[".gogoproto.jsontag"]);
                    if (object[".gogoproto.moretags"] != null)
                        message[".gogoproto.moretags"] = String(object[".gogoproto.moretags"]);
                    if (object[".gogoproto.casttype"] != null)
                        message[".gogoproto.casttype"] = String(object[".gogoproto.casttype"]);
                    if (object[".gogoproto.castkey"] != null)
                        message[".gogoproto.castkey"] = String(object[".gogoproto.castkey"]);
                    if (object[".gogoproto.castvalue"] != null)
                        message[".gogoproto.castvalue"] = String(object[".gogoproto.castvalue"]);
                    if (object[".gogoproto.stdtime"] != null)
                        message[".gogoproto.stdtime"] = Boolean(object[".gogoproto.stdtime"]);
                    if (object[".gogoproto.stdduration"] != null)
                        message[".gogoproto.stdduration"] = Boolean(object[".gogoproto.stdduration"]);
                    if (object[".gogoproto.wktpointer"] != null)
                        message[".gogoproto.wktpointer"] = Boolean(object[".gogoproto.wktpointer"]);
                    if (object[".gogoproto.castrepeated"] != null)
                        message[".gogoproto.castrepeated"] = String(object[".gogoproto.castrepeated"]);
                    if (object[".cosmos_proto.accepts_interface"] != null)
                        message[".cosmos_proto.accepts_interface"] = String(object[".cosmos_proto.accepts_interface"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object[".gogoproto.nullable"] = false;
                        object[".gogoproto.embed"] = false;
                        object[".gogoproto.customtype"] = "";
                        object[".gogoproto.customname"] = "";
                        object[".gogoproto.jsontag"] = "";
                        object[".gogoproto.moretags"] = "";
                        object[".gogoproto.casttype"] = "";
                        object[".gogoproto.castkey"] = "";
                        object[".gogoproto.castvalue"] = "";
                        object[".gogoproto.stdtime"] = false;
                        object[".gogoproto.stdduration"] = false;
                        object[".gogoproto.wktpointer"] = false;
                        object[".gogoproto.castrepeated"] = "";
                        object[".cosmos_proto.accepts_interface"] = "";
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".gogoproto.nullable"] != null && message.hasOwnProperty(".gogoproto.nullable"))
                        object[".gogoproto.nullable"] = message[".gogoproto.nullable"];
                    if (message[".gogoproto.embed"] != null && message.hasOwnProperty(".gogoproto.embed"))
                        object[".gogoproto.embed"] = message[".gogoproto.embed"];
                    if (message[".gogoproto.customtype"] != null && message.hasOwnProperty(".gogoproto.customtype"))
                        object[".gogoproto.customtype"] = message[".gogoproto.customtype"];
                    if (message[".gogoproto.customname"] != null && message.hasOwnProperty(".gogoproto.customname"))
                        object[".gogoproto.customname"] = message[".gogoproto.customname"];
                    if (message[".gogoproto.jsontag"] != null && message.hasOwnProperty(".gogoproto.jsontag"))
                        object[".gogoproto.jsontag"] = message[".gogoproto.jsontag"];
                    if (message[".gogoproto.moretags"] != null && message.hasOwnProperty(".gogoproto.moretags"))
                        object[".gogoproto.moretags"] = message[".gogoproto.moretags"];
                    if (message[".gogoproto.casttype"] != null && message.hasOwnProperty(".gogoproto.casttype"))
                        object[".gogoproto.casttype"] = message[".gogoproto.casttype"];
                    if (message[".gogoproto.castkey"] != null && message.hasOwnProperty(".gogoproto.castkey"))
                        object[".gogoproto.castkey"] = message[".gogoproto.castkey"];
                    if (message[".gogoproto.castvalue"] != null && message.hasOwnProperty(".gogoproto.castvalue"))
                        object[".gogoproto.castvalue"] = message[".gogoproto.castvalue"];
                    if (message[".gogoproto.stdtime"] != null && message.hasOwnProperty(".gogoproto.stdtime"))
                        object[".gogoproto.stdtime"] = message[".gogoproto.stdtime"];
                    if (message[".gogoproto.stdduration"] != null && message.hasOwnProperty(".gogoproto.stdduration"))
                        object[".gogoproto.stdduration"] = message[".gogoproto.stdduration"];
                    if (message[".gogoproto.wktpointer"] != null && message.hasOwnProperty(".gogoproto.wktpointer"))
                        object[".gogoproto.wktpointer"] = message[".gogoproto.wktpointer"];
                    if (message[".gogoproto.castrepeated"] != null && message.hasOwnProperty(".gogoproto.castrepeated"))
                        object[".gogoproto.castrepeated"] = message[".gogoproto.castrepeated"];
                    if (message[".cosmos_proto.accepts_interface"] != null && message.hasOwnProperty(".cosmos_proto.accepts_interface"))
                        object[".cosmos_proto.accepts_interface"] = message[".cosmos_proto.accepts_interface"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] OneofOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allow_alias] EnumOptions allow_alias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumOptions uninterpreted_option
                 * @property {boolean|null} [".gogoproto.goproto_enum_prefix"] EnumOptions .gogoproto.goproto_enum_prefix
                 * @property {boolean|null} [".gogoproto.goproto_enum_stringer"] EnumOptions .gogoproto.goproto_enum_stringer
                 * @property {boolean|null} [".gogoproto.enum_stringer"] EnumOptions .gogoproto.enum_stringer
                 * @property {string|null} [".gogoproto.enum_customname"] EnumOptions .gogoproto.enum_customname
                 * @property {boolean|null} [".gogoproto.enumdecl"] EnumOptions .gogoproto.enumdecl
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allow_alias.
                 * @member {boolean} allow_alias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allow_alias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * EnumOptions .gogoproto.goproto_enum_prefix.
                 * @member {boolean} .gogoproto.goproto_enum_prefix
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype[".gogoproto.goproto_enum_prefix"] = false;
    
                /**
                 * EnumOptions .gogoproto.goproto_enum_stringer.
                 * @member {boolean} .gogoproto.goproto_enum_stringer
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype[".gogoproto.goproto_enum_stringer"] = false;
    
                /**
                 * EnumOptions .gogoproto.enum_stringer.
                 * @member {boolean} .gogoproto.enum_stringer
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype[".gogoproto.enum_stringer"] = false;
    
                /**
                 * EnumOptions .gogoproto.enum_customname.
                 * @member {string} .gogoproto.enum_customname
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype[".gogoproto.enum_customname"] = "";
    
                /**
                 * EnumOptions .gogoproto.enumdecl.
                 * @member {boolean} .gogoproto.enumdecl
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype[".gogoproto.enumdecl"] = false;
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allow_alias != null && Object.hasOwnProperty.call(message, "allow_alias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allow_alias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".gogoproto.goproto_enum_prefix"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_prefix"))
                        writer.uint32(/* id 62001, wireType 0 =*/496008).bool(message[".gogoproto.goproto_enum_prefix"]);
                    if (message[".gogoproto.goproto_enum_stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.goproto_enum_stringer"))
                        writer.uint32(/* id 62021, wireType 0 =*/496168).bool(message[".gogoproto.goproto_enum_stringer"]);
                    if (message[".gogoproto.enum_stringer"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enum_stringer"))
                        writer.uint32(/* id 62022, wireType 0 =*/496176).bool(message[".gogoproto.enum_stringer"]);
                    if (message[".gogoproto.enum_customname"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enum_customname"))
                        writer.uint32(/* id 62023, wireType 2 =*/496186).string(message[".gogoproto.enum_customname"]);
                    if (message[".gogoproto.enumdecl"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enumdecl"))
                        writer.uint32(/* id 62024, wireType 0 =*/496192).bool(message[".gogoproto.enumdecl"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allow_alias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 62001:
                            message[".gogoproto.goproto_enum_prefix"] = reader.bool();
                            break;
                        case 62021:
                            message[".gogoproto.goproto_enum_stringer"] = reader.bool();
                            break;
                        case 62022:
                            message[".gogoproto.enum_stringer"] = reader.bool();
                            break;
                        case 62023:
                            message[".gogoproto.enum_customname"] = reader.string();
                            break;
                        case 62024:
                            message[".gogoproto.enumdecl"] = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        if (typeof message.allow_alias !== "boolean")
                            return "allow_alias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".gogoproto.goproto_enum_prefix"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix"))
                        if (typeof message[".gogoproto.goproto_enum_prefix"] !== "boolean")
                            return ".gogoproto.goproto_enum_prefix: boolean expected";
                    if (message[".gogoproto.goproto_enum_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer"))
                        if (typeof message[".gogoproto.goproto_enum_stringer"] !== "boolean")
                            return ".gogoproto.goproto_enum_stringer: boolean expected";
                    if (message[".gogoproto.enum_stringer"] != null && message.hasOwnProperty(".gogoproto.enum_stringer"))
                        if (typeof message[".gogoproto.enum_stringer"] !== "boolean")
                            return ".gogoproto.enum_stringer: boolean expected";
                    if (message[".gogoproto.enum_customname"] != null && message.hasOwnProperty(".gogoproto.enum_customname"))
                        if (!$util.isString(message[".gogoproto.enum_customname"]))
                            return ".gogoproto.enum_customname: string expected";
                    if (message[".gogoproto.enumdecl"] != null && message.hasOwnProperty(".gogoproto.enumdecl"))
                        if (typeof message[".gogoproto.enumdecl"] !== "boolean")
                            return ".gogoproto.enumdecl: boolean expected";
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allow_alias != null)
                        message.allow_alias = Boolean(object.allow_alias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".gogoproto.goproto_enum_prefix"] != null)
                        message[".gogoproto.goproto_enum_prefix"] = Boolean(object[".gogoproto.goproto_enum_prefix"]);
                    if (object[".gogoproto.goproto_enum_stringer"] != null)
                        message[".gogoproto.goproto_enum_stringer"] = Boolean(object[".gogoproto.goproto_enum_stringer"]);
                    if (object[".gogoproto.enum_stringer"] != null)
                        message[".gogoproto.enum_stringer"] = Boolean(object[".gogoproto.enum_stringer"]);
                    if (object[".gogoproto.enum_customname"] != null)
                        message[".gogoproto.enum_customname"] = String(object[".gogoproto.enum_customname"]);
                    if (object[".gogoproto.enumdecl"] != null)
                        message[".gogoproto.enumdecl"] = Boolean(object[".gogoproto.enumdecl"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.allow_alias = false;
                        object.deprecated = false;
                        object[".gogoproto.goproto_enum_prefix"] = false;
                        object[".gogoproto.goproto_enum_stringer"] = false;
                        object[".gogoproto.enum_stringer"] = false;
                        object[".gogoproto.enum_customname"] = "";
                        object[".gogoproto.enumdecl"] = false;
                    }
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        object.allow_alias = message.allow_alias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".gogoproto.goproto_enum_prefix"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_prefix"))
                        object[".gogoproto.goproto_enum_prefix"] = message[".gogoproto.goproto_enum_prefix"];
                    if (message[".gogoproto.goproto_enum_stringer"] != null && message.hasOwnProperty(".gogoproto.goproto_enum_stringer"))
                        object[".gogoproto.goproto_enum_stringer"] = message[".gogoproto.goproto_enum_stringer"];
                    if (message[".gogoproto.enum_stringer"] != null && message.hasOwnProperty(".gogoproto.enum_stringer"))
                        object[".gogoproto.enum_stringer"] = message[".gogoproto.enum_stringer"];
                    if (message[".gogoproto.enum_customname"] != null && message.hasOwnProperty(".gogoproto.enum_customname"))
                        object[".gogoproto.enum_customname"] = message[".gogoproto.enum_customname"];
                    if (message[".gogoproto.enumdecl"] != null && message.hasOwnProperty(".gogoproto.enumdecl"))
                        object[".gogoproto.enumdecl"] = message[".gogoproto.enumdecl"];
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumValueOptions uninterpreted_option
                 * @property {string|null} [".gogoproto.enumvalue_customname"] EnumValueOptions .gogoproto.enumvalue_customname
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * EnumValueOptions .gogoproto.enumvalue_customname.
                 * @member {string} .gogoproto.enumvalue_customname
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype[".gogoproto.enumvalue_customname"] = "";
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".gogoproto.enumvalue_customname"] != null && Object.hasOwnProperty.call(message, ".gogoproto.enumvalue_customname"))
                        writer.uint32(/* id 66001, wireType 2 =*/528010).string(message[".gogoproto.enumvalue_customname"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 66001:
                            message[".gogoproto.enumvalue_customname"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".gogoproto.enumvalue_customname"] != null && message.hasOwnProperty(".gogoproto.enumvalue_customname"))
                        if (!$util.isString(message[".gogoproto.enumvalue_customname"]))
                            return ".gogoproto.enumvalue_customname: string expected";
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".gogoproto.enumvalue_customname"] != null)
                        message[".gogoproto.enumvalue_customname"] = String(object[".gogoproto.enumvalue_customname"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".gogoproto.enumvalue_customname"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".gogoproto.enumvalue_customname"] != null && message.hasOwnProperty(".gogoproto.enumvalue_customname"))
                        object[".gogoproto.enumvalue_customname"] = message[".gogoproto.enumvalue_customname"];
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] ServiceOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MethodOptions uninterpreted_option
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 72295728:
                            message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifier_value] UninterpretedOption identifier_value
                 * @property {Long|null} [positive_int_value] UninterpretedOption positive_int_value
                 * @property {Long|null} [negative_int_value] UninterpretedOption negative_int_value
                 * @property {number|null} [double_value] UninterpretedOption double_value
                 * @property {Uint8Array|null} [string_value] UninterpretedOption string_value
                 * @property {string|null} [aggregate_value] UninterpretedOption aggregate_value
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifier_value.
                 * @member {string} identifier_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifier_value = "";
    
                /**
                 * UninterpretedOption positive_int_value.
                 * @member {Long} positive_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positive_int_value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negative_int_value.
                 * @member {Long} negative_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negative_int_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption double_value.
                 * @member {number} double_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.double_value = 0;
    
                /**
                 * UninterpretedOption string_value.
                 * @member {Uint8Array} string_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.string_value = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregate_value.
                 * @member {string} aggregate_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregate_value = "";
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifier_value != null && Object.hasOwnProperty.call(message, "identifier_value"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier_value);
                    if (message.positive_int_value != null && Object.hasOwnProperty.call(message, "positive_int_value"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positive_int_value);
                    if (message.negative_int_value != null && Object.hasOwnProperty.call(message, "negative_int_value"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negative_int_value);
                    if (message.double_value != null && Object.hasOwnProperty.call(message, "double_value"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.double_value);
                    if (message.string_value != null && Object.hasOwnProperty.call(message, "string_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.string_value);
                    if (message.aggregate_value != null && Object.hasOwnProperty.call(message, "aggregate_value"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregate_value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifier_value = reader.string();
                            break;
                        case 4:
                            message.positive_int_value = reader.uint64();
                            break;
                        case 5:
                            message.negative_int_value = reader.int64();
                            break;
                        case 6:
                            message.double_value = reader.double();
                            break;
                        case 7:
                            message.string_value = reader.bytes();
                            break;
                        case 8:
                            message.aggregate_value = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        if (!$util.isString(message.identifier_value))
                            return "identifier_value: string expected";
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (!$util.isInteger(message.positive_int_value) && !(message.positive_int_value && $util.isInteger(message.positive_int_value.low) && $util.isInteger(message.positive_int_value.high)))
                            return "positive_int_value: integer|Long expected";
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (!$util.isInteger(message.negative_int_value) && !(message.negative_int_value && $util.isInteger(message.negative_int_value.low) && $util.isInteger(message.negative_int_value.high)))
                            return "negative_int_value: integer|Long expected";
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        if (typeof message.double_value !== "number")
                            return "double_value: number expected";
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        if (!(message.string_value && typeof message.string_value.length === "number" || $util.isString(message.string_value)))
                            return "string_value: buffer expected";
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        if (!$util.isString(message.aggregate_value))
                            return "aggregate_value: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifier_value != null)
                        message.identifier_value = String(object.identifier_value);
                    if (object.positive_int_value != null)
                        if ($util.Long)
                            (message.positive_int_value = $util.Long.fromValue(object.positive_int_value)).unsigned = true;
                        else if (typeof object.positive_int_value === "string")
                            message.positive_int_value = parseInt(object.positive_int_value, 10);
                        else if (typeof object.positive_int_value === "number")
                            message.positive_int_value = object.positive_int_value;
                        else if (typeof object.positive_int_value === "object")
                            message.positive_int_value = new $util.LongBits(object.positive_int_value.low >>> 0, object.positive_int_value.high >>> 0).toNumber(true);
                    if (object.negative_int_value != null)
                        if ($util.Long)
                            (message.negative_int_value = $util.Long.fromValue(object.negative_int_value)).unsigned = false;
                        else if (typeof object.negative_int_value === "string")
                            message.negative_int_value = parseInt(object.negative_int_value, 10);
                        else if (typeof object.negative_int_value === "number")
                            message.negative_int_value = object.negative_int_value;
                        else if (typeof object.negative_int_value === "object")
                            message.negative_int_value = new $util.LongBits(object.negative_int_value.low >>> 0, object.negative_int_value.high >>> 0).toNumber();
                    if (object.double_value != null)
                        message.double_value = Number(object.double_value);
                    if (object.string_value != null)
                        if (typeof object.string_value === "string")
                            $util.base64.decode(object.string_value, message.string_value = $util.newBuffer($util.base64.length(object.string_value)), 0);
                        else if (object.string_value.length)
                            message.string_value = object.string_value;
                    if (object.aggregate_value != null)
                        message.aggregate_value = String(object.aggregate_value);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifier_value = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positive_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positive_int_value = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negative_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negative_int_value = options.longs === String ? "0" : 0;
                        object.double_value = 0;
                        if (options.bytes === String)
                            object.string_value = "";
                        else {
                            object.string_value = [];
                            if (options.bytes !== Array)
                                object.string_value = $util.newBuffer(object.string_value);
                        }
                        object.aggregate_value = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        object.identifier_value = message.identifier_value;
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (typeof message.positive_int_value === "number")
                            object.positive_int_value = options.longs === String ? String(message.positive_int_value) : message.positive_int_value;
                        else
                            object.positive_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.positive_int_value) : options.longs === Number ? new $util.LongBits(message.positive_int_value.low >>> 0, message.positive_int_value.high >>> 0).toNumber(true) : message.positive_int_value;
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (typeof message.negative_int_value === "number")
                            object.negative_int_value = options.longs === String ? String(message.negative_int_value) : message.negative_int_value;
                        else
                            object.negative_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.negative_int_value) : options.longs === Number ? new $util.LongBits(message.negative_int_value.low >>> 0, message.negative_int_value.high >>> 0).toNumber() : message.negative_int_value;
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        object.double_value = options.json && !isFinite(message.double_value) ? String(message.double_value) : message.double_value;
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        object.string_value = options.bytes === String ? $util.base64.encode(message.string_value, 0, message.string_value.length) : options.bytes === Array ? Array.prototype.slice.call(message.string_value) : message.string_value;
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        object.aggregate_value = message.aggregate_value;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} name_part NamePart name_part
                     * @property {boolean} is_extension NamePart is_extension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart name_part.
                     * @member {string} name_part
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.name_part = "";
    
                    /**
                     * NamePart is_extension.
                     * @member {boolean} is_extension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.is_extension = false;
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name_part);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_extension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.name_part = reader.string();
                                break;
                            case 2:
                                message.is_extension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("name_part"))
                            throw $util.ProtocolError("missing required 'name_part'", { instance: message });
                        if (!message.hasOwnProperty("is_extension"))
                            throw $util.ProtocolError("missing required 'is_extension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.name_part))
                            return "name_part: string expected";
                        if (typeof message.is_extension !== "boolean")
                            return "is_extension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.name_part != null)
                            message.name_part = String(object.name_part);
                        if (object.is_extension != null)
                            message.is_extension = Boolean(object.is_extension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name_part = "";
                            object.is_extension = false;
                        }
                        if (message.name_part != null && message.hasOwnProperty("name_part"))
                            object.name_part = message.name_part;
                        if (message.is_extension != null && message.hasOwnProperty("is_extension"))
                            object.is_extension = message.is_extension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leading_comments] Location leading_comments
                     * @property {string|null} [trailing_comments] Location trailing_comments
                     * @property {Array.<string>|null} [leading_detached_comments] Location leading_detached_comments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leading_detached_comments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leading_comments.
                     * @member {string} leading_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_comments = "";
    
                    /**
                     * Location trailing_comments.
                     * @member {string} trailing_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailing_comments = "";
    
                    /**
                     * Location leading_detached_comments.
                     * @member {Array.<string>} leading_detached_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_detached_comments = $util.emptyArray;
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leading_comments != null && Object.hasOwnProperty.call(message, "leading_comments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leading_comments);
                        if (message.trailing_comments != null && Object.hasOwnProperty.call(message, "trailing_comments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailing_comments);
                        if (message.leading_detached_comments != null && message.leading_detached_comments.length)
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leading_detached_comments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leading_comments = reader.string();
                                break;
                            case 4:
                                message.trailing_comments = reader.string();
                                break;
                            case 6:
                                if (!(message.leading_detached_comments && message.leading_detached_comments.length))
                                    message.leading_detached_comments = [];
                                message.leading_detached_comments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            if (!$util.isString(message.leading_comments))
                                return "leading_comments: string expected";
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            if (!$util.isString(message.trailing_comments))
                                return "trailing_comments: string expected";
                        if (message.leading_detached_comments != null && message.hasOwnProperty("leading_detached_comments")) {
                            if (!Array.isArray(message.leading_detached_comments))
                                return "leading_detached_comments: array expected";
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                if (!$util.isString(message.leading_detached_comments[i]))
                                    return "leading_detached_comments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leading_comments != null)
                            message.leading_comments = String(object.leading_comments);
                        if (object.trailing_comments != null)
                            message.trailing_comments = String(object.trailing_comments);
                        if (object.leading_detached_comments) {
                            if (!Array.isArray(object.leading_detached_comments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leading_detached_comments: array expected");
                            message.leading_detached_comments = [];
                            for (var i = 0; i < object.leading_detached_comments.length; ++i)
                                message.leading_detached_comments[i] = String(object.leading_detached_comments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leading_detached_comments = [];
                        }
                        if (options.defaults) {
                            object.leading_comments = "";
                            object.trailing_comments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            object.leading_comments = message.leading_comments;
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            object.trailing_comments = message.trailing_comments;
                        if (message.leading_detached_comments && message.leading_detached_comments.length) {
                            object.leading_detached_comments = [];
                            for (var j = 0; j < message.leading_detached_comments.length; ++j)
                                object.leading_detached_comments[j] = message.leading_detached_comments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [source_file] Annotation source_file
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation source_file.
                     * @member {string} source_file
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.source_file = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.source_file != null && Object.hasOwnProperty.call(message, "source_file"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.source_file);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.source_file = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            if (!$util.isString(message.source_file))
                                return "source_file: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.source_file != null)
                            message.source_file = String(object.source_file);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.source_file = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            object.source_file = message.source_file;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type_url = reader.string();
                            break;
                        case 2:
                            message.value = reader.bytes();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Any;
            })();
    
            return protobuf;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fully_decode_reserved_expansion] Http fully_decode_reserved_expansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fully_decode_reserved_expansion.
                 * @member {boolean} fully_decode_reserved_expansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fully_decode_reserved_expansion = false;
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fully_decode_reserved_expansion != null && Object.hasOwnProperty.call(message, "fully_decode_reserved_expansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fully_decode_reserved_expansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.rules && message.rules.length))
                                message.rules = [];
                            message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.fully_decode_reserved_expansion = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fully_decode_reserved_expansion != null && message.hasOwnProperty("fully_decode_reserved_expansion"))
                        if (typeof message.fully_decode_reserved_expansion !== "boolean")
                            return "fully_decode_reserved_expansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fully_decode_reserved_expansion != null)
                        message.fully_decode_reserved_expansion = Boolean(object.fully_decode_reserved_expansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fully_decode_reserved_expansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fully_decode_reserved_expansion != null && message.hasOwnProperty("fully_decode_reserved_expansion"))
                        object.fully_decode_reserved_expansion = message.fully_decode_reserved_expansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [response_body] HttpRule response_body
                 * @property {Array.<google.api.IHttpRule>|null} [additional_bindings] HttpRule additional_bindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additional_bindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule response_body.
                 * @member {string} response_body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.response_body = "";
    
                /**
                 * HttpRule additional_bindings.
                 * @member {Array.<google.api.IHttpRule>} additional_bindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additional_bindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additional_bindings != null && message.additional_bindings.length)
                        for (var i = 0; i < message.additional_bindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additional_bindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.response_body != null && Object.hasOwnProperty.call(message, "response_body"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.response_body);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.selector = reader.string();
                            break;
                        case 2:
                            message.get = reader.string();
                            break;
                        case 3:
                            message.put = reader.string();
                            break;
                        case 4:
                            message.post = reader.string();
                            break;
                        case 5:
                            message["delete"] = reader.string();
                            break;
                        case 6:
                            message.patch = reader.string();
                            break;
                        case 8:
                            message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                            break;
                        case 7:
                            message.body = reader.string();
                            break;
                        case 12:
                            message.response_body = reader.string();
                            break;
                        case 11:
                            if (!(message.additional_bindings && message.additional_bindings.length))
                                message.additional_bindings = [];
                            message.additional_bindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.response_body != null && message.hasOwnProperty("response_body"))
                        if (!$util.isString(message.response_body))
                            return "response_body: string expected";
                    if (message.additional_bindings != null && message.hasOwnProperty("additional_bindings")) {
                        if (!Array.isArray(message.additional_bindings))
                            return "additional_bindings: array expected";
                        for (var i = 0; i < message.additional_bindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additional_bindings[i]);
                            if (error)
                                return "additional_bindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.response_body != null)
                        message.response_body = String(object.response_body);
                    if (object.additional_bindings) {
                        if (!Array.isArray(object.additional_bindings))
                            throw TypeError(".google.api.HttpRule.additional_bindings: array expected");
                        message.additional_bindings = [];
                        for (var i = 0; i < object.additional_bindings.length; ++i) {
                            if (typeof object.additional_bindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additional_bindings: object expected");
                            message.additional_bindings[i] = $root.google.api.HttpRule.fromObject(object.additional_bindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additional_bindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.response_body = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additional_bindings && message.additional_bindings.length) {
                        object.additional_bindings = [];
                        for (var j = 0; j < message.additional_bindings.length; ++j)
                            object.additional_bindings[j] = $root.google.api.HttpRule.toObject(message.additional_bindings[j], options);
                    }
                    if (message.response_body != null && message.hasOwnProperty("response_body"))
                        object.response_body = message.response_body;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.kind = reader.string();
                            break;
                        case 2:
                            message.path = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return CustomHttpPattern;
            })();
    
            return api;
        })();
    
        return google;
    })();
    
    $root.cosmos = (function() {
    
        /**
         * Namespace cosmos.
         * @exports cosmos
         * @namespace
         */
        var cosmos = {};
    
        cosmos.base = (function() {
    
            /**
             * Namespace base.
             * @memberof cosmos
             * @namespace
             */
            var base = {};
    
            base.query = (function() {
    
                /**
                 * Namespace query.
                 * @memberof cosmos.base
                 * @namespace
                 */
                var query = {};
    
                query.v1beta1 = (function() {
    
                    /**
                     * Namespace v1beta1.
                     * @memberof cosmos.base.query
                     * @namespace
                     */
                    var v1beta1 = {};
    
                    v1beta1.PageRequest = (function() {
    
                        /**
                         * Properties of a PageRequest.
                         * @memberof cosmos.base.query.v1beta1
                         * @interface IPageRequest
                         * @property {Uint8Array|null} [key] PageRequest key
                         * @property {Long|null} [offset] PageRequest offset
                         * @property {Long|null} [limit] PageRequest limit
                         * @property {boolean|null} [count_total] PageRequest count_total
                         * @property {boolean|null} [reverse] PageRequest reverse
                         */
    
                        /**
                         * Constructs a new PageRequest.
                         * @memberof cosmos.base.query.v1beta1
                         * @classdesc Represents a PageRequest.
                         * @implements IPageRequest
                         * @constructor
                         * @param {cosmos.base.query.v1beta1.IPageRequest=} [properties] Properties to set
                         */
                        function PageRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PageRequest key.
                         * @member {Uint8Array} key
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @instance
                         */
                        PageRequest.prototype.key = $util.newBuffer([]);
    
                        /**
                         * PageRequest offset.
                         * @member {Long} offset
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @instance
                         */
                        PageRequest.prototype.offset = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                        /**
                         * PageRequest limit.
                         * @member {Long} limit
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @instance
                         */
                        PageRequest.prototype.limit = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                        /**
                         * PageRequest count_total.
                         * @member {boolean} count_total
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @instance
                         */
                        PageRequest.prototype.count_total = false;
    
                        /**
                         * PageRequest reverse.
                         * @member {boolean} reverse
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @instance
                         */
                        PageRequest.prototype.reverse = false;
    
                        /**
                         * Encodes the specified PageRequest message. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                         * @function encode
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @static
                         * @param {cosmos.base.query.v1beta1.IPageRequest} message PageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.offset);
                            if (message.limit != null && Object.hasOwnProperty.call(message, "limit"))
                                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.limit);
                            if (message.count_total != null && Object.hasOwnProperty.call(message, "count_total"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.count_total);
                            if (message.reverse != null && Object.hasOwnProperty.call(message, "reverse"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.reverse);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PageRequest message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @static
                         * @param {cosmos.base.query.v1beta1.IPageRequest} message PageRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PageRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {cosmos.base.query.v1beta1.PageRequest} PageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.query.v1beta1.PageRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.key = reader.bytes();
                                    break;
                                case 2:
                                    message.offset = reader.uint64();
                                    break;
                                case 3:
                                    message.limit = reader.uint64();
                                    break;
                                case 4:
                                    message.count_total = reader.bool();
                                    break;
                                case 5:
                                    message.reverse = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PageRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {cosmos.base.query.v1beta1.PageRequest} PageRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PageRequest message.
                         * @function verify
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PageRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
                                    return "key: buffer expected";
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset) && !(message.offset && $util.isInteger(message.offset.low) && $util.isInteger(message.offset.high)))
                                    return "offset: integer|Long expected";
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (!$util.isInteger(message.limit) && !(message.limit && $util.isInteger(message.limit.low) && $util.isInteger(message.limit.high)))
                                    return "limit: integer|Long expected";
                            if (message.count_total != null && message.hasOwnProperty("count_total"))
                                if (typeof message.count_total !== "boolean")
                                    return "count_total: boolean expected";
                            if (message.reverse != null && message.hasOwnProperty("reverse"))
                                if (typeof message.reverse !== "boolean")
                                    return "reverse: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a PageRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {cosmos.base.query.v1beta1.PageRequest} PageRequest
                         */
                        PageRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.cosmos.base.query.v1beta1.PageRequest)
                                return object;
                            var message = new $root.cosmos.base.query.v1beta1.PageRequest();
                            if (object.key != null)
                                if (typeof object.key === "string")
                                    $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
                                else if (object.key.length)
                                    message.key = object.key;
                            if (object.offset != null)
                                if ($util.Long)
                                    (message.offset = $util.Long.fromValue(object.offset)).unsigned = true;
                                else if (typeof object.offset === "string")
                                    message.offset = parseInt(object.offset, 10);
                                else if (typeof object.offset === "number")
                                    message.offset = object.offset;
                                else if (typeof object.offset === "object")
                                    message.offset = new $util.LongBits(object.offset.low >>> 0, object.offset.high >>> 0).toNumber(true);
                            if (object.limit != null)
                                if ($util.Long)
                                    (message.limit = $util.Long.fromValue(object.limit)).unsigned = true;
                                else if (typeof object.limit === "string")
                                    message.limit = parseInt(object.limit, 10);
                                else if (typeof object.limit === "number")
                                    message.limit = object.limit;
                                else if (typeof object.limit === "object")
                                    message.limit = new $util.LongBits(object.limit.low >>> 0, object.limit.high >>> 0).toNumber(true);
                            if (object.count_total != null)
                                message.count_total = Boolean(object.count_total);
                            if (object.reverse != null)
                                message.reverse = Boolean(object.reverse);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PageRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @static
                         * @param {cosmos.base.query.v1beta1.PageRequest} message PageRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PageRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if (options.bytes === String)
                                    object.key = "";
                                else {
                                    object.key = [];
                                    if (options.bytes !== Array)
                                        object.key = $util.newBuffer(object.key);
                                }
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, true);
                                    object.offset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.offset = options.longs === String ? "0" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, true);
                                    object.limit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.limit = options.longs === String ? "0" : 0;
                                object.count_total = false;
                                object.reverse = false;
                            }
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (typeof message.offset === "number")
                                    object.offset = options.longs === String ? String(message.offset) : message.offset;
                                else
                                    object.offset = options.longs === String ? $util.Long.prototype.toString.call(message.offset) : options.longs === Number ? new $util.LongBits(message.offset.low >>> 0, message.offset.high >>> 0).toNumber(true) : message.offset;
                            if (message.limit != null && message.hasOwnProperty("limit"))
                                if (typeof message.limit === "number")
                                    object.limit = options.longs === String ? String(message.limit) : message.limit;
                                else
                                    object.limit = options.longs === String ? $util.Long.prototype.toString.call(message.limit) : options.longs === Number ? new $util.LongBits(message.limit.low >>> 0, message.limit.high >>> 0).toNumber(true) : message.limit;
                            if (message.count_total != null && message.hasOwnProperty("count_total"))
                                object.count_total = message.count_total;
                            if (message.reverse != null && message.hasOwnProperty("reverse"))
                                object.reverse = message.reverse;
                            return object;
                        };
    
                        /**
                         * Converts this PageRequest to JSON.
                         * @function toJSON
                         * @memberof cosmos.base.query.v1beta1.PageRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PageRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return PageRequest;
                    })();
    
                    v1beta1.PageResponse = (function() {
    
                        /**
                         * Properties of a PageResponse.
                         * @memberof cosmos.base.query.v1beta1
                         * @interface IPageResponse
                         * @property {Uint8Array|null} [next_key] PageResponse next_key
                         * @property {Long|null} [total] PageResponse total
                         */
    
                        /**
                         * Constructs a new PageResponse.
                         * @memberof cosmos.base.query.v1beta1
                         * @classdesc Represents a PageResponse.
                         * @implements IPageResponse
                         * @constructor
                         * @param {cosmos.base.query.v1beta1.IPageResponse=} [properties] Properties to set
                         */
                        function PageResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PageResponse next_key.
                         * @member {Uint8Array} next_key
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @instance
                         */
                        PageResponse.prototype.next_key = $util.newBuffer([]);
    
                        /**
                         * PageResponse total.
                         * @member {Long} total
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @instance
                         */
                        PageResponse.prototype.total = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                        /**
                         * Encodes the specified PageResponse message. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                         * @function encode
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @static
                         * @param {cosmos.base.query.v1beta1.IPageResponse} message PageResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.next_key != null && Object.hasOwnProperty.call(message, "next_key"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.next_key);
                            if (message.total != null && Object.hasOwnProperty.call(message, "total"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.total);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PageResponse message, length delimited. Does not implicitly {@link cosmos.base.query.v1beta1.PageResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @static
                         * @param {cosmos.base.query.v1beta1.IPageResponse} message PageResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PageResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PageResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {cosmos.base.query.v1beta1.PageResponse} PageResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.query.v1beta1.PageResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.next_key = reader.bytes();
                                    break;
                                case 2:
                                    message.total = reader.uint64();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PageResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {cosmos.base.query.v1beta1.PageResponse} PageResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PageResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PageResponse message.
                         * @function verify
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PageResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.next_key != null && message.hasOwnProperty("next_key"))
                                if (!(message.next_key && typeof message.next_key.length === "number" || $util.isString(message.next_key)))
                                    return "next_key: buffer expected";
                            if (message.total != null && message.hasOwnProperty("total"))
                                if (!$util.isInteger(message.total) && !(message.total && $util.isInteger(message.total.low) && $util.isInteger(message.total.high)))
                                    return "total: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a PageResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {cosmos.base.query.v1beta1.PageResponse} PageResponse
                         */
                        PageResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.cosmos.base.query.v1beta1.PageResponse)
                                return object;
                            var message = new $root.cosmos.base.query.v1beta1.PageResponse();
                            if (object.next_key != null)
                                if (typeof object.next_key === "string")
                                    $util.base64.decode(object.next_key, message.next_key = $util.newBuffer($util.base64.length(object.next_key)), 0);
                                else if (object.next_key.length)
                                    message.next_key = object.next_key;
                            if (object.total != null)
                                if ($util.Long)
                                    (message.total = $util.Long.fromValue(object.total)).unsigned = true;
                                else if (typeof object.total === "string")
                                    message.total = parseInt(object.total, 10);
                                else if (typeof object.total === "number")
                                    message.total = object.total;
                                else if (typeof object.total === "object")
                                    message.total = new $util.LongBits(object.total.low >>> 0, object.total.high >>> 0).toNumber(true);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PageResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @static
                         * @param {cosmos.base.query.v1beta1.PageResponse} message PageResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PageResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if (options.bytes === String)
                                    object.next_key = "";
                                else {
                                    object.next_key = [];
                                    if (options.bytes !== Array)
                                        object.next_key = $util.newBuffer(object.next_key);
                                }
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, true);
                                    object.total = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.total = options.longs === String ? "0" : 0;
                            }
                            if (message.next_key != null && message.hasOwnProperty("next_key"))
                                object.next_key = options.bytes === String ? $util.base64.encode(message.next_key, 0, message.next_key.length) : options.bytes === Array ? Array.prototype.slice.call(message.next_key) : message.next_key;
                            if (message.total != null && message.hasOwnProperty("total"))
                                if (typeof message.total === "number")
                                    object.total = options.longs === String ? String(message.total) : message.total;
                                else
                                    object.total = options.longs === String ? $util.Long.prototype.toString.call(message.total) : options.longs === Number ? new $util.LongBits(message.total.low >>> 0, message.total.high >>> 0).toNumber(true) : message.total;
                            return object;
                        };
    
                        /**
                         * Converts this PageResponse to JSON.
                         * @function toJSON
                         * @memberof cosmos.base.query.v1beta1.PageResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PageResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return PageResponse;
                    })();
    
                    return v1beta1;
                })();
    
                return query;
            })();
    
            base.v1beta1 = (function() {
    
                /**
                 * Namespace v1beta1.
                 * @memberof cosmos.base
                 * @namespace
                 */
                var v1beta1 = {};
    
                v1beta1.Coin = (function() {
    
                    /**
                     * Properties of a Coin.
                     * @memberof cosmos.base.v1beta1
                     * @interface ICoin
                     * @property {string|null} [denom] Coin denom
                     * @property {string|null} [amount] Coin amount
                     */
    
                    /**
                     * Constructs a new Coin.
                     * @memberof cosmos.base.v1beta1
                     * @classdesc Represents a Coin.
                     * @implements ICoin
                     * @constructor
                     * @param {cosmos.base.v1beta1.ICoin=} [properties] Properties to set
                     */
                    function Coin(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Coin denom.
                     * @member {string} denom
                     * @memberof cosmos.base.v1beta1.Coin
                     * @instance
                     */
                    Coin.prototype.denom = "";
    
                    /**
                     * Coin amount.
                     * @member {string} amount
                     * @memberof cosmos.base.v1beta1.Coin
                     * @instance
                     */
                    Coin.prototype.amount = "";
    
                    /**
                     * Encodes the specified Coin message. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                     * @function encode
                     * @memberof cosmos.base.v1beta1.Coin
                     * @static
                     * @param {cosmos.base.v1beta1.ICoin} message Coin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Coin.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.denom != null && Object.hasOwnProperty.call(message, "denom"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.denom);
                        if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.amount);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Coin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.Coin.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmos.base.v1beta1.Coin
                     * @static
                     * @param {cosmos.base.v1beta1.ICoin} message Coin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Coin.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Coin message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmos.base.v1beta1.Coin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmos.base.v1beta1.Coin} Coin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Coin.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.Coin();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.denom = reader.string();
                                break;
                            case 2:
                                message.amount = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Coin message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmos.base.v1beta1.Coin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmos.base.v1beta1.Coin} Coin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Coin.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Coin message.
                     * @function verify
                     * @memberof cosmos.base.v1beta1.Coin
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Coin.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.denom != null && message.hasOwnProperty("denom"))
                            if (!$util.isString(message.denom))
                                return "denom: string expected";
                        if (message.amount != null && message.hasOwnProperty("amount"))
                            if (!$util.isString(message.amount))
                                return "amount: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a Coin message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmos.base.v1beta1.Coin
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmos.base.v1beta1.Coin} Coin
                     */
                    Coin.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmos.base.v1beta1.Coin)
                            return object;
                        var message = new $root.cosmos.base.v1beta1.Coin();
                        if (object.denom != null)
                            message.denom = String(object.denom);
                        if (object.amount != null)
                            message.amount = String(object.amount);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Coin message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmos.base.v1beta1.Coin
                     * @static
                     * @param {cosmos.base.v1beta1.Coin} message Coin
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Coin.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.denom = "";
                            object.amount = "";
                        }
                        if (message.denom != null && message.hasOwnProperty("denom"))
                            object.denom = message.denom;
                        if (message.amount != null && message.hasOwnProperty("amount"))
                            object.amount = message.amount;
                        return object;
                    };
    
                    /**
                     * Converts this Coin to JSON.
                     * @function toJSON
                     * @memberof cosmos.base.v1beta1.Coin
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Coin.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Coin;
                })();
    
                v1beta1.DecCoin = (function() {
    
                    /**
                     * Properties of a DecCoin.
                     * @memberof cosmos.base.v1beta1
                     * @interface IDecCoin
                     * @property {string|null} [denom] DecCoin denom
                     * @property {string|null} [amount] DecCoin amount
                     */
    
                    /**
                     * Constructs a new DecCoin.
                     * @memberof cosmos.base.v1beta1
                     * @classdesc Represents a DecCoin.
                     * @implements IDecCoin
                     * @constructor
                     * @param {cosmos.base.v1beta1.IDecCoin=} [properties] Properties to set
                     */
                    function DecCoin(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DecCoin denom.
                     * @member {string} denom
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @instance
                     */
                    DecCoin.prototype.denom = "";
    
                    /**
                     * DecCoin amount.
                     * @member {string} amount
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @instance
                     */
                    DecCoin.prototype.amount = "";
    
                    /**
                     * Encodes the specified DecCoin message. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                     * @function encode
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @static
                     * @param {cosmos.base.v1beta1.IDecCoin} message DecCoin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DecCoin.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.denom != null && Object.hasOwnProperty.call(message, "denom"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.denom);
                        if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.amount);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DecCoin message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecCoin.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @static
                     * @param {cosmos.base.v1beta1.IDecCoin} message DecCoin message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DecCoin.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DecCoin message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmos.base.v1beta1.DecCoin} DecCoin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DecCoin.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.DecCoin();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.denom = reader.string();
                                break;
                            case 2:
                                message.amount = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DecCoin message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmos.base.v1beta1.DecCoin} DecCoin
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DecCoin.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DecCoin message.
                     * @function verify
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DecCoin.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.denom != null && message.hasOwnProperty("denom"))
                            if (!$util.isString(message.denom))
                                return "denom: string expected";
                        if (message.amount != null && message.hasOwnProperty("amount"))
                            if (!$util.isString(message.amount))
                                return "amount: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DecCoin message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmos.base.v1beta1.DecCoin} DecCoin
                     */
                    DecCoin.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmos.base.v1beta1.DecCoin)
                            return object;
                        var message = new $root.cosmos.base.v1beta1.DecCoin();
                        if (object.denom != null)
                            message.denom = String(object.denom);
                        if (object.amount != null)
                            message.amount = String(object.amount);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DecCoin message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @static
                     * @param {cosmos.base.v1beta1.DecCoin} message DecCoin
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DecCoin.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.denom = "";
                            object.amount = "";
                        }
                        if (message.denom != null && message.hasOwnProperty("denom"))
                            object.denom = message.denom;
                        if (message.amount != null && message.hasOwnProperty("amount"))
                            object.amount = message.amount;
                        return object;
                    };
    
                    /**
                     * Converts this DecCoin to JSON.
                     * @function toJSON
                     * @memberof cosmos.base.v1beta1.DecCoin
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DecCoin.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return DecCoin;
                })();
    
                v1beta1.IntProto = (function() {
    
                    /**
                     * Properties of an IntProto.
                     * @memberof cosmos.base.v1beta1
                     * @interface IIntProto
                     * @property {string|null} [int] IntProto int
                     */
    
                    /**
                     * Constructs a new IntProto.
                     * @memberof cosmos.base.v1beta1
                     * @classdesc Represents an IntProto.
                     * @implements IIntProto
                     * @constructor
                     * @param {cosmos.base.v1beta1.IIntProto=} [properties] Properties to set
                     */
                    function IntProto(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * IntProto int.
                     * @member {string} int
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @instance
                     */
                    IntProto.prototype.int = "";
    
                    /**
                     * Encodes the specified IntProto message. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                     * @function encode
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @static
                     * @param {cosmos.base.v1beta1.IIntProto} message IntProto message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IntProto.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.int != null && Object.hasOwnProperty.call(message, "int"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.int);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified IntProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.IntProto.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @static
                     * @param {cosmos.base.v1beta1.IIntProto} message IntProto message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    IntProto.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an IntProto message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmos.base.v1beta1.IntProto} IntProto
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IntProto.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.IntProto();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.int = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an IntProto message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmos.base.v1beta1.IntProto} IntProto
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    IntProto.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an IntProto message.
                     * @function verify
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    IntProto.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.int != null && message.hasOwnProperty("int"))
                            if (!$util.isString(message.int))
                                return "int: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an IntProto message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmos.base.v1beta1.IntProto} IntProto
                     */
                    IntProto.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmos.base.v1beta1.IntProto)
                            return object;
                        var message = new $root.cosmos.base.v1beta1.IntProto();
                        if (object.int != null)
                            message.int = String(object.int);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an IntProto message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @static
                     * @param {cosmos.base.v1beta1.IntProto} message IntProto
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    IntProto.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.int = "";
                        if (message.int != null && message.hasOwnProperty("int"))
                            object.int = message.int;
                        return object;
                    };
    
                    /**
                     * Converts this IntProto to JSON.
                     * @function toJSON
                     * @memberof cosmos.base.v1beta1.IntProto
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    IntProto.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return IntProto;
                })();
    
                v1beta1.DecProto = (function() {
    
                    /**
                     * Properties of a DecProto.
                     * @memberof cosmos.base.v1beta1
                     * @interface IDecProto
                     * @property {string|null} [dec] DecProto dec
                     */
    
                    /**
                     * Constructs a new DecProto.
                     * @memberof cosmos.base.v1beta1
                     * @classdesc Represents a DecProto.
                     * @implements IDecProto
                     * @constructor
                     * @param {cosmos.base.v1beta1.IDecProto=} [properties] Properties to set
                     */
                    function DecProto(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * DecProto dec.
                     * @member {string} dec
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @instance
                     */
                    DecProto.prototype.dec = "";
    
                    /**
                     * Encodes the specified DecProto message. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                     * @function encode
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @static
                     * @param {cosmos.base.v1beta1.IDecProto} message DecProto message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DecProto.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.dec != null && Object.hasOwnProperty.call(message, "dec"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.dec);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified DecProto message, length delimited. Does not implicitly {@link cosmos.base.v1beta1.DecProto.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @static
                     * @param {cosmos.base.v1beta1.IDecProto} message DecProto message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    DecProto.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a DecProto message from the specified reader or buffer.
                     * @function decode
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {cosmos.base.v1beta1.DecProto} DecProto
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DecProto.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cosmos.base.v1beta1.DecProto();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.dec = reader.string();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a DecProto message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {cosmos.base.v1beta1.DecProto} DecProto
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    DecProto.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a DecProto message.
                     * @function verify
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    DecProto.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.dec != null && message.hasOwnProperty("dec"))
                            if (!$util.isString(message.dec))
                                return "dec: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a DecProto message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {cosmos.base.v1beta1.DecProto} DecProto
                     */
                    DecProto.fromObject = function fromObject(object) {
                        if (object instanceof $root.cosmos.base.v1beta1.DecProto)
                            return object;
                        var message = new $root.cosmos.base.v1beta1.DecProto();
                        if (object.dec != null)
                            message.dec = String(object.dec);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a DecProto message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @static
                     * @param {cosmos.base.v1beta1.DecProto} message DecProto
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    DecProto.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.dec = "";
                        if (message.dec != null && message.hasOwnProperty("dec"))
                            object.dec = message.dec;
                        return object;
                    };
    
                    /**
                     * Converts this DecProto to JSON.
                     * @function toJSON
                     * @memberof cosmos.base.v1beta1.DecProto
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    DecProto.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return DecProto;
                })();
    
                return v1beta1;
            })();
    
            return base;
        })();
    
        return cosmos;
    })();

    return $root;
});
